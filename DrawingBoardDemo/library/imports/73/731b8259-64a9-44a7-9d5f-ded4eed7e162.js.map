{"version":3,"sources":["assets\\test.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DrawingBoard from \"./DrawingBoard\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class test extends cc.Component {\r\n\r\n    protected onLoad() {\r\n        fcc.configMgr.build();\r\n        fcc.sceneMgr\r\n            .setDesignWidth(1280)\r\n            .setDesignHeight(720)\r\n            .updateSize(fcc.type.SceneStyleType.HORIZONTAL)\r\n            .startListener(500);\r\n    }\r\n\r\n    start() {\r\n        this.initDb();\r\n        this.initTexture();\r\n        this.node.on(\"touchstart\", this.onTouchStart, this);\r\n        this.node.on(\"touchmove\", this.onTouchMove, this);\r\n    }\r\n\r\n    /**画板对象 */\r\n    protected db: DrawingBoard = null;\r\n    protected initDb() {\r\n        //创建一个画板(需传入画板尺寸，将自动初始化)\r\n        this.db = new DrawingBoard(1280, 720);\r\n        //设置画板的绘图颜色（每次绘制前都可以重新设置）\r\n        this.db.setColor(255, 0, 0, 255);\r\n        //设置画板绘制的线条的宽度\r\n        this.db.setLineWidth(0.3);\r\n        //线条端点以圆角结尾\r\n        this.db.setLineCircleEnd(true);\r\n    }\r\n\r\n    /**动态创建的贴图对象，在画板中绘制的图案数据，将应用到这个贴图中 */\r\n    protected texture: cc.RenderTexture = null;\r\n    protected initTexture() {\r\n        this.texture = new cc.RenderTexture();\r\n        this.texture.initWithSize(1280, 720);\r\n        //将动态创建的贴图应用到精灵节点上，以显示在屏幕上\r\n        let sf = new cc.SpriteFrame(this.texture);\r\n        let node = new cc.Node();\r\n        node.width = this.node.width;\r\n        node.height = this.node.height;\r\n        this.node.addChild(node);\r\n        node.setPosition(0, 0);\r\n        node.addComponent(cc.Sprite).spriteFrame = sf;\r\n    }\r\n\r\n    protected prePos: cc.Vec2;\r\n    protected onTouchStart(e: cc.Event.EventTouch) {\r\n        this.prePos = e.getLocation();\r\n        //将触摸位置作为线条的起点\r\n        //画板中使用的坐标系，与图片坐标系一样，原点在左上角，X轴向右为正，Y轴向下为正\r\n        //所以Y轴坐标应反过来\r\n        this.db.moveTo(this.prePos.x, this.node.height - this.prePos.y);\r\n    }\r\n    protected onTouchMove(e: cc.Event.EventTouch) {\r\n        this.prePos = e.getLocation();\r\n        //从上一次绘制线条后的终点开始向鼠标当前位置绘制线条\r\n        this.db.lineTo(this.prePos.x, this.node.height - this.prePos.y);\r\n        //每次画板中的数据有变化后，及时将数据应用到贴图上，在屏幕上显示出来\r\n        this.drawToImg();\r\n    }\r\n\r\n    /**将画板中绘制的数据应用到贴图中 */\r\n    protected drawToImg() {\r\n        //获取画板中绘制的图案数据\r\n        let data = this.db.getData();\r\n        //将数据传递给贴图对象\r\n        this.texture.initWithData(data, cc.Texture2D.PixelFormat.RGBA8888, this.db.width, this.db.height);\r\n    }\r\n}\r\n"]}