{"version":3,"sources":["sky.js"],"names":["Primitive","require","v3_tmp","cc","v3","Class","extends","Component","properties","cloudCount","cloudColor","color","fromHEX","rotateSpeed","start","_initMesh","clouds","Array","stepAngle","Math","PI","i","cloud","createCloud","a","h","game","seaHeight","skyHeight","random","skyHeightRange","y","sin","x","cos","z","eulerAngles","scale","parent","node","data","primitive","box","mesh","createMesh","_mesh","Node","is3DNode","nBlocks","floor","block","window","createMeshNode","angle","_eulerAngles","update","dt","length","j","children"],"mappings":"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","file":"sky.js","sourceRoot":"..\\..\\..\\..\\assets\\src","sourcesContent":["const Primitive = require('./primitive/primitive');\r\n\r\nlet v3_tmp = cc.v3();\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        cloudCount: 20,\r\n        cloudColor: cc.color().fromHEX('0xF7D9AA'),\r\n\r\n        rotateSpeed: 360,\r\n    },\r\n\r\n    start () {\r\n        this._initMesh();\r\n\r\n        let clouds = new Array(this.cloudCount);\r\n        let stepAngle = Math.PI * 2 / this.cloudCount;\r\n        for (let i = 0; i < this.cloudCount; i++) {\r\n            let cloud = this.createCloud();\r\n            clouds[i] = cloud;\r\n\r\n            let a = stepAngle * i;\r\n            let h = game.seaHeight + game.skyHeight + Math.random() * game.skyHeightRange;\r\n\r\n            cloud.y = Math.sin(a) * h;\r\n            cloud.x = Math.cos(a) * h;\r\n            cloud.z = -300 - Math.random() * 500;\r\n\r\n            v3_tmp.x = v3_tmp.y = 0;\r\n            v3_tmp.z = a + Math.PI / 2;\r\n            cloud.eulerAngles = v3_tmp;\r\n\r\n            cloud.scale = 1 + Math.random() * 2;\r\n\r\n            cloud.parent = this.node;\r\n        }\r\n\r\n        this.clouds = clouds;\r\n    },\r\n\r\n    // for use the same mesh\r\n    _initMesh () {\r\n        let data = cc.primitive.box(1, 1, 1);\r\n        let mesh = Primitive.createMesh(data, this.cloudColor);\r\n        this._mesh = mesh;\r\n    },\r\n\r\n    createCloud () {\r\n        let cloud = new cc.Node('cloud');\r\n        cloud.is3DNode = true;\r\n\r\n        let nBlocks = 3 + Math.floor(Math.random() * 3);\r\n        for (let i = 0; i < nBlocks; i++) {\r\n            let block = window.game.createMeshNode('barrier', this._mesh);\r\n\r\n            block.x = i * 15;\r\n            block.y = Math.random() * 10;\r\n            block.z = Math.random() * 10;\r\n\r\n            let angle = cc.v3();\r\n            angle.z = Math.random() * Math.PI * 2;\r\n            angle.y = Math.random() * Math.PI * 2;\r\n            block._eulerAngles = angle;\r\n\r\n            block.scale = 20 * (0.3 + Math.random() * 0.7);\r\n\r\n            block.parent = cloud;\r\n        }\r\n\r\n        return cloud;\r\n    },\r\n\r\n    update (dt) {\r\n        for (let i = 0; i < this.clouds.length; i++) {\r\n            let cloud = this.clouds[i];\r\n\r\n            for (let j = 0; j < cloud.children.length; j++) {\r\n                let block = cloud.children[j];\r\n                block._eulerAngles.z += Math.random() * 0.5 * (j + 1);\r\n                block._eulerAngles.y += Math.random() * 0.2 * (j + 1);\r\n                block.eulerAngles = block._eulerAngles;\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}