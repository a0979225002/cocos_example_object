{"version":3,"sources":["player-control.js"],"names":["normalize","v","vmin","vmax","tmin","tmax","nv","Math","max","min","dv","pc","dt","tv","cc","Class","extends","Component","properties","moveSensivity","rotXSensivity","rotZSensivity","camera","Camera","cameraSensivity","onLoad","reset","angles","v3","node","position","game","playerDefaultY","touchPos","v2","planeCollisionDisplacementX","planeCollisionSpeedX","planeCollisionDisplacementY","planeCollisionSpeedY","start","canvas","find","on","Node","EventType","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMoseMove","window","onCollider","event","touches","getTouches","_setTouchPos","getLocation","dif","distance","x","y","pos","visibleRect","width","height","update","targetY","playerYRange","targetX","playerXRange","z","eulerAngles","fov"],"mappings":"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","file":"player-control.js","sourceRoot":"..\\..\\..\\..\\assets\\src","sourcesContent":["\r\nfunction normalize(v,vmin,vmax,tmin, tmax){\r\n    let nv = Math.max(Math.min(v,vmax), vmin);\r\n    let dv = vmax-vmin;\r\n    let pc = (nv-vmin)/dv;\r\n    let dt = tmax-tmin;\r\n    let tv = tmin + (pc*dt);\r\n    return tv;\r\n}\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        moveSensivity: 5,\r\n        rotXSensivity: 0.8,\r\n        rotZSensivity: 0.4,\r\n\r\n        camera: cc.Camera,\r\n        cameraSensivity: 2, \r\n    },\r\n    \r\n    onLoad () {\r\n        this.reset();\r\n    },\r\n    reset () {\r\n        this.angles = cc.v3();\r\n        this.node.position = cc.v3(0, game.playerDefaultY, 0);\r\n        this.touchPos = cc.v2();\r\n\r\n        this.planeCollisionDisplacementX = 0;\r\n        this.planeCollisionSpeedX = 0;\r\n        this.planeCollisionDisplacementY = 0;\r\n        this.planeCollisionSpeedY = 0;\r\n    },\r\n\r\n    start () {\r\n        let canvas = cc.find('Canvas');\r\n        canvas.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        canvas.on(cc.Node.EventType.MOUSE_MOVE, this.onMoseMove, this);\r\n\r\n        window.game.node.on('collide-enemy', this.onCollider, this);\r\n    },\r\n\r\n    onTouchMove (event) {\r\n        let touches = event.getTouches();\r\n        this._setTouchPos( touches[0].getLocation() );\r\n    },\r\n\r\n    onMoseMove (event) {\r\n        this._setTouchPos (event.getLocation() );\r\n    },\r\n\r\n    onCollider ({dif, distance}) {\r\n        this.planeCollisionSpeedX = 150 * dif.x / distance;\r\n        this.planeCollisionSpeedY = 150 * dif.y / distance;\r\n    },\r\n\r\n    _setTouchPos (pos) {\r\n        // the value range is -1 - 1\r\n        this.touchPos.x = -1 + pos.x / cc.visibleRect.width * 2;\r\n        this.touchPos.y = -1 + pos.y / cc.visibleRect.height * 2;\r\n    },\r\n\r\n    update (dt) {\r\n        let touchPos = this.touchPos;\r\n\r\n        let targetY = normalize(touchPos.y, -.75,.75, game.playerDefaultY-game.playerYRange, game.playerDefaultY+game.playerYRange);\r\n        let targetX = normalize(touchPos.x, -1,1, -game.playerXRange*0.7, -game.playerXRange);\r\n\r\n        this.planeCollisionDisplacementX += this.planeCollisionSpeedX;\r\n        targetX += this.planeCollisionDisplacementX;\r\n\r\n        this.planeCollisionDisplacementY += this.planeCollisionSpeedY;\r\n        targetY += this.planeCollisionDisplacementY;\r\n        \r\n        this.node.y += (targetY - this.node.y) * dt * this.moveSensivity;\r\n        this.node.x += (targetX - this.node.x) * dt * this.moveSensivity;\r\n\r\n        this.angles.z = (targetY - this.node.y) * dt * this.rotZSensivity;\r\n        this.angles.x = (this.node.y - targetY) * dt * this.rotXSensivity;\r\n        this.node.eulerAngles = this.angles;\r\n\r\n        this.planeCollisionSpeedX += (0-this.planeCollisionSpeedX)*dt * 30;\r\n        this.planeCollisionDisplacementX += (0-this.planeCollisionDisplacementX)*dt *10;\r\n        this.planeCollisionSpeedY += (0-this.planeCollisionSpeedY)*dt * 30;\r\n        this.planeCollisionDisplacementY += (0-this.planeCollisionDisplacementY)*dt *10;\r\n\r\n        let camera = this.camera;\r\n        camera.fov = normalize(touchPos.x, -1,1, 40,80);\r\n        camera.node.y += (this.node.y - camera.node.y) * dt * this.cameraSensivity;\r\n    },\r\n});\r\n"]}