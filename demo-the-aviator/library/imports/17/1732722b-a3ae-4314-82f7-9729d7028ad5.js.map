{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\src\\primitive/assets\\src\\primitive\\primitive.js"],"names":["Primitive","cc","Class","extends","Component","editor","executeInEditMode","requireComponent","MeshRenderer","properties","color","default","Color","WHITE","notify","delayInit","onLoad","init","data","_createData","mesh","createMesh","renderer","getComponent","_delatIniting","CC_EDITOR","scheduleOnce","gfx","vfmt","VertexFormat","name","ATTR_POSITION","type","ATTR_TYPE_FLOAT32","num","ATTR_NORMAL","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","colors","i","positions","length","push","Mesh","setVertices","normals","setIndices","indices","setBoundingBox","minPos","maxPos","module","exports"],"mappings":";;;;;;AACA,IAAMA,YAAYC,GAAGC,KAAH,CAAS;AACvBC,aAASF,GAAGG,SADW;;AAGvBC,YAAQ;AACJC,2BAAmB,IADf;AAEJC,0BAAkBN,GAAGO;AAFjB,KAHe;;AAQvBC,gBAAY;AACRC,eAAO;AACHC,qBAASV,GAAGW,KAAH,CAASC,KADf;AAEHC,kBAFG,oBAEO;AACN,qBAAKC,SAAL;AACH;AAJE;AADC,KARW;;AAiBvB;;AAEAC,UAnBuB,oBAmBb;AACN,aAAKC,IAAL;AACH,KArBsB;AAuBvBA,QAvBuB,kBAuBf;AACJ,YAAIC,OAAO,KAAKC,WAAL,EAAX;AACA,YAAIC,OAAOpB,UAAUqB,UAAV,CAAqBH,IAArB,EAA2B,KAAKR,KAAhC,CAAX;;AAEA,YAAIY,WAAW,KAAKC,YAAL,CAAkBtB,GAAGO,YAArB,CAAf;AACAc,iBAASF,IAAT,GAAgBA,IAAhB;;AAEA,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKM,aAAL,GAAqB,KAArB;AACH,KAhCsB;AAkCvBT,aAlCuB,uBAkCV;AACT,YAAIU,SAAJ,EAAe;AACX,iBAAKR,IAAL;AACA;AACH;;AAED,YAAI,KAAKO,aAAT,EAAwB;AACxB,aAAKA,aAAL,GAAqB,IAArB;AACA,aAAKE,YAAL,CAAkB,KAAKT,IAAvB;AACH,KA3CsB;AA6CvBE,eA7CuB,yBA6CR;AACX,eAAO,EAAP;AACH;AA/CsB,CAAT,CAAlB;;AAkDAnB,UAAUqB,UAAV,GAAuB,UAAUH,IAAV,EAAgBR,KAAhB,EAAuB;AAC1C,QAAIiB,MAAM1B,GAAG0B,GAAb;AACA,QAAIC,OAAO,IAAID,IAAIE,YAAR,CAAqB,CAC5B,EAAEC,MAAMH,IAAII,aAAZ,EAA2BC,MAAML,IAAIM,iBAArC,EAAwDC,KAAK,CAA7D,EAD4B,EAE5B,EAAEJ,MAAMH,IAAIQ,WAAZ,EAAyBH,MAAML,IAAIM,iBAAnC,EAAsDC,KAAK,CAA3D,EAF4B,EAG5B,EAAEJ,MAAMH,IAAIS,UAAZ,EAAwBJ,MAAML,IAAIU,eAAlC,EAAmDH,KAAK,CAAxD,EAA2DI,WAAW,IAAtE,EAH4B,CAArB,CAAX;;AAMA,QAAIC,SAAS,EAAb;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAItB,KAAKuB,SAAL,CAAeC,MAAnC,EAA2CF,GAA3C,EAAgD;AAC5CD,eAAOI,IAAP,CAAYjC,KAAZ;AACH;;AAED,QAAIU,OAAO,IAAInB,GAAG2C,IAAP,EAAX;AACAxB,SAAKH,IAAL,CAAUW,IAAV,EAAgBV,KAAKuB,SAAL,CAAeC,MAA/B;AACAtB,SAAKyB,WAAL,CAAiBlB,IAAII,aAArB,EAAoCb,KAAKuB,SAAzC;AACArB,SAAKyB,WAAL,CAAiBlB,IAAIQ,WAArB,EAAkCjB,KAAK4B,OAAvC;AACA1B,SAAKyB,WAAL,CAAiBlB,IAAIS,UAArB,EAAiCG,MAAjC;AACAnB,SAAK2B,UAAL,CAAgB7B,KAAK8B,OAArB;AACA5B,SAAK6B,cAAL,CAAoB/B,KAAKgC,MAAzB,EAAiChC,KAAKiC,MAAtC;;AAEA,WAAO/B,IAAP;AACH,CAtBD;;AAwBAgC,OAAOC,OAAP,GAAiBrD,SAAjB","file":"primitive.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\src\\primitive","sourcesContent":["\r\nconst Primitive = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        executeInEditMode: true,\r\n        requireComponent: cc.MeshRenderer\r\n    },\r\n\r\n    properties: {\r\n        color: {\r\n            default: cc.Color.WHITE,\r\n            notify () {\r\n                this.delayInit();\r\n            }\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.init();\r\n    },\r\n\r\n    init () {\r\n        let data = this._createData();\r\n        let mesh = Primitive.createMesh(data, this.color);\r\n\r\n        let renderer = this.getComponent(cc.MeshRenderer);\r\n        renderer.mesh = mesh;\r\n\r\n        this.data = data;\r\n        this._delatIniting = false;\r\n    },\r\n\r\n    delayInit () {\r\n        if (CC_EDITOR) {\r\n            this.init();\r\n            return;\r\n        }\r\n\r\n        if (this._delatIniting) return;\r\n        this._delatIniting = true;\r\n        this.scheduleOnce(this.init);\r\n    },\r\n\r\n    _createData () {\r\n        return {};\r\n    }\r\n});\r\n\r\nPrimitive.createMesh = function (data, color) {\r\n    let gfx = cc.gfx;\r\n    let vfmt = new gfx.VertexFormat([\r\n        { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 3 },\r\n        { name: gfx.ATTR_NORMAL, type: gfx.ATTR_TYPE_FLOAT32, num: 3 },\r\n        { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\r\n    ]);\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < data.positions.length; i++) {\r\n        colors.push(color);\r\n    }\r\n\r\n    let mesh = new cc.Mesh();\r\n    mesh.init(vfmt, data.positions.length);\r\n    mesh.setVertices(gfx.ATTR_POSITION, data.positions);\r\n    mesh.setVertices(gfx.ATTR_NORMAL, data.normals);\r\n    mesh.setVertices(gfx.ATTR_COLOR, colors);\r\n    mesh.setIndices(data.indices);\r\n    mesh.setBoundingBox(data.minPos, data.maxPos);\r\n\r\n    return mesh;\r\n};\r\n\r\nmodule.exports = Primitive;\r\n"]}