{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/Input/VirtualAxis.ts"],"names":["Input","OverlapBehavior","VirtualInput","VirtualAxisNode","VirtualAxis","nodes","concat","update","i","length","val","value","KeyboardKeys","overlapBehavior","negative","positive","isKeyDown","cancelOut","_value","takeNewer","_turned","takeOlder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,K,iBAAAA,K;;AAEAC,MAAAA,e,iBAAAA,e;AAAiBC,MAAAA,Y,iBAAAA,Y;;AACjBC,MAAAA,e,iBAAAA,e;;;;;;;6BAEIC,W;;;AAaL,+BAAyC;AAAA;;AACrC;;AADqC,kEAZX,EAYW;;AAAA,4CAA1BC,KAA0B;AAA1BA,YAAAA,KAA0B;AAAA;;AAErC,gBAAKA,KAAL,CAAWC,MAAX,CAAkBD,KAAlB;;AAFqC;AAGxC;;;;eAEME,M,GAAP,kBAAgB;AACZ,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,KAAL,CAAWI,MAA/B,EAAuCD,CAAC,EAAxC;AACI,iBAAKH,KAAL,CAAWG,CAAX,EAAcD,MAAd;AADJ;AAEH,S;;;;eAlBD,eAAmB;AACf,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,KAAL,CAAWI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,kBAAIE,GAAG,GAAG,KAAKL,KAAL,CAAWG,CAAX,EAAcG,KAAxB;AACA,kBAAID,GAAG,IAAI,CAAX,EACI,OAAOA,GAAP;AACP;;AAED,mBAAO,CAAP;AACH;;;;;;;;8BAaIE,Y;;;AAOT,8BAAYC,eAAZ,EAA8CC,QAA9C,EAA8DC,QAA9D,EAA8E;AAAA;;AAC1E;;AAD0E;;AAAA;;AAAA;;AAAA,oEAHtD,CAGsD;;AAAA,qEAFpD,KAEoD;;AAE1E,iBAAKF,eAAL,GAAuBA,eAAvB;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AAJ0E;AAK7E;;;;gBAEMR,M,GAAP,kBAAgB;AACZ,cAAI;AAAA;AAAA,8BAAMS,SAAN,CAAgB,KAAKD,QAArB,CAAJ,EAAoC;AAChC,gBAAI;AAAA;AAAA,gCAAMC,SAAN,CAAgB,KAAKF,QAArB,CAAJ,EAAoC;AAChC,sBAAQ,KAAKD,eAAb;AACI;AACA,qBAAK;AAAA;AAAA,wDAAgBI,SAArB;AACI,uBAAKC,MAAL,GAAc,CAAd;AACA;;AACJ,qBAAK;AAAA;AAAA,wDAAgBC,SAArB;AACI,sBAAI,CAAC,KAAKC,OAAV,EAAmB;AACf,yBAAKF,MAAL,IAAe,CAAC,CAAhB;AACA,yBAAKE,OAAL,GAAe,IAAf;AACH;;AACD;;AACJ,qBAAK;AAAA;AAAA,wDAAgBC,SAArB;AACI;AAZR;AAcH,aAfD,MAeO;AACH,mBAAKD,OAAL,GAAe,KAAf;AACA,mBAAKF,MAAL,GAAc,CAAd;AACH;AACJ,WApBD,MAoBO,IAAI;AAAA;AAAA,8BAAMF,SAAN,CAAgB,KAAKF,QAArB,CAAJ,EAAoC;AACvC,iBAAKM,OAAL,GAAe,KAAf;AACA,iBAAKF,MAAL,GAAc,CAAC,CAAf;AACH,WAHM,MAGA;AACH,iBAAKE,OAAL,GAAe,KAAf;AACA,iBAAKF,MAAL,GAAc,CAAd;AACH;AACJ,S;;;;eAED,eAAkB;AACd,mBAAO,KAAKA,MAAZ;AACH","sourcesContent":["import { Input } from \"./Input\";\r\nimport { Keys } from \"./Keys\";\r\nimport { OverlapBehavior, VirtualInput } from \"./VirtualInput\";\r\nimport { VirtualAxisNode } from \"./VirtualIntegerAxis\";\r\n\r\nexport class VirtualAxis extends VirtualInput {\r\n    public nodes: VirtualAxisNode[] = [];\r\n\r\n        public get value() {\r\n            for (let i = 0; i < this.nodes.length; i++) {\r\n                let val = this.nodes[i].value;\r\n                if (val != 0)\r\n                    return val;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        constructor(...nodes: VirtualAxisNode[]) {\r\n            super();\r\n            this.nodes.concat(nodes);\r\n        }\r\n\r\n        public update() {\r\n            for (let i = 0; i < this.nodes.length; i++)\r\n                this.nodes[i].update();\r\n        }\r\n}\r\n\r\nexport class KeyboardKeys extends VirtualAxisNode {\r\n    public overlapBehavior: OverlapBehavior;\r\n    public positive: Keys;\r\n    public negative: Keys;\r\n    public _value: number = 0;\r\n    public _turned: boolean = false;\r\n\r\n    constructor(overlapBehavior: OverlapBehavior, negative: Keys, positive: Keys) {\r\n        super();\r\n        this.overlapBehavior = overlapBehavior;\r\n        this.negative = negative;\r\n        this.positive = positive;\r\n    }\r\n\r\n    public update() {\r\n        if (Input.isKeyDown(this.positive)) {\r\n            if (Input.isKeyDown(this.negative)) {\r\n                switch (this.overlapBehavior) {\r\n                    default:\r\n                    case OverlapBehavior.cancelOut:\r\n                        this._value = 0;\r\n                        break;\r\n                    case OverlapBehavior.takeNewer:\r\n                        if (!this._turned) {\r\n                            this._value *= -1;\r\n                            this._turned = true;\r\n                        }\r\n                        break;\r\n                    case OverlapBehavior.takeOlder:\r\n                        break;\r\n                }\r\n            } else {\r\n                this._turned = false;\r\n                this._value = 1;\r\n            }\r\n        } else if (Input.isKeyDown(this.negative)) {\r\n            this._turned = false;\r\n            this._value = -1;\r\n        } else {\r\n            this._turned = false;\r\n            this._value = 0;\r\n        }\r\n    }\r\n\r\n    public get value(){\r\n        return this._value;\r\n    }\r\n}"]}