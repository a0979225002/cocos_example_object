{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/scenes/verletPhysics/VerletSystem.ts"],"names":["component_camera","Input","Keys","VerletSystem","getwidth","getheight","world","es","VerletWorld","Rectangle","onHandleDrag","handleDragging","bind","pos","entity","scene","findEntity","getComponent","mouseToWorldPoint","leftMouseButtonPressed","_draggedParticle","getNearestParticle","leftMouseButtonDown","position","leftMouseButtonRelease","toggleZeroGravity","gravity","y","update","isKeyPressed","z","render","batcher","camera","debugRender","RenderableComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,I,iBAAAA,I;;;;;;;8BAEIC,Y;;;;;eACFC,Q,GAAP,oBAAkB;AACd,iBAAO,GAAP;AACH,S;;eAEMC,S,GAAP,qBAAmB;AACf,iBAAO,GAAP;AACH,S;;AAID,gCAAc;AAAA;;AACV;;AADU;;AAGV,gBAAKC,KAAL,GAAa,IAAIC,EAAE,CAACC,WAAP,CAAmB,IAAID,EAAE,CAACE,SAAP,CAAiB,CAAC,MAAKL,QAAL,EAAD,GAAmB,CAApC,EAAuC,CAAC,MAAKC,SAAL,EAAD,GAAoB,CAA3D,EAA8D,MAAKD,QAAL,KAAkB,CAAhF,EAAmF,MAAKC,SAAL,KAAmB,CAAtG,CAAnB,CAAb;AACA,gBAAKC,KAAL,CAAWI,YAAX,GAA0B,MAAKC,cAAL,CAAoBC,IAApB,+BAA1B;AAJU;AAKb;;eAEDD,c,GAAA,0BAAiB;AACb,cAAIE,GAAG,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,UAAlB,CAA6B,QAA7B,EAAuCC,YAAvC;AAAA;AAAA,oDAAsEC,iBAAtE,EAAX;;AACA,cAAI;AAAA;AAAA,8BAAMC,sBAAV,EAAkC;AAC9B,iBAAKb,KAAL,CAAWc,gBAAX,GAA8B,KAAKd,KAAL,CAAWe,kBAAX,CAA8BR,GAA9B,CAA9B;AACH,WAFD,MAEO,IAAG;AAAA;AAAA,8BAAMS,mBAAT,EAA8B;AACjC,gBAAI,KAAKhB,KAAL,CAAWc,gBAAX,IAA+B,IAAnC,EAAyC;AACrC,mBAAKd,KAAL,CAAWc,gBAAX,CAA4BG,QAA5B,GAAuCV,GAAvC;AACH;AACJ,WAJM,MAIA,IAAG;AAAA;AAAA,8BAAMW,sBAAT,EAAiC;AACpC,gBAAI,KAAKlB,KAAL,CAAWc,gBAAX,IAA+B,IAAnC,EACI,KAAKd,KAAL,CAAWc,gBAAX,CAA4BG,QAA5B,GAAuCV,GAAvC;AACH,iBAAKP,KAAL,CAAWc,gBAAZ,GAAuC,IAAvC;AACH;AACJ,S;;eAEDK,iB,GAAA,6BAAoB;AAChB,cAAI,KAAKnB,KAAL,CAAWoB,OAAX,CAAmBC,CAAnB,IAAwB,CAA5B,EAA+B;AAC3B,iBAAKrB,KAAL,CAAWoB,OAAX,CAAmBC,CAAnB,GAAuB,CAAC,GAAxB;AACH,WAFD,MAEO;AACH,iBAAKrB,KAAL,CAAWoB,OAAX,CAAmBC,CAAnB,GAAuB,CAAvB;AACH;AACJ,S;;eAEDC,M,GAAA,kBAAS;AACL,cAAI;AAAA;AAAA,8BAAMC,YAAN,CAAmB;AAAA;AAAA,4BAAKC,CAAxB,CAAJ,EACI,KAAKL,iBAAL;AAEJ,eAAKnB,KAAL,CAAWsB,MAAX;AACH,S;;eAEDG,M,GAAA,gBAAOC,OAAP,EAA6BC,MAA7B,EAAuD;AACnD,eAAK3B,KAAL,CAAW4B,WAAX,CAAuBF,OAAvB;AACH,S;;;QAlD6BzB,EAAE,CAAC4B,mB","sourcesContent":["import { component_camera } from \"../../components/component_camera\";\r\nimport { Input } from \"../../Input/Input\";\r\nimport { Keys } from \"../../Input/Keys\";\r\n\r\nexport class VerletSystem extends es.RenderableComponent implements es.IUpdatable {\r\n    public getwidth() {\r\n        return 960;\r\n    }\r\n\r\n    public getheight() {\r\n        return 640;\r\n    }\r\n\r\n    public world: es.VerletWorld;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.world = new es.VerletWorld(new es.Rectangle(-this.getwidth() / 2, -this.getheight() / 2, this.getwidth() / 2, this.getheight() / 2));\r\n        this.world.onHandleDrag = this.handleDragging.bind(this);\r\n    }\r\n\r\n    handleDragging() {\r\n        let pos =  this.entity.scene.findEntity('camera').getComponent(component_camera).mouseToWorldPoint();\r\n        if (Input.leftMouseButtonPressed) {\r\n            this.world._draggedParticle = this.world.getNearestParticle(pos);\r\n        } else if(Input.leftMouseButtonDown) {\r\n            if (this.world._draggedParticle != null) {\r\n                this.world._draggedParticle.position = pos;\r\n            }\r\n        } else if(Input.leftMouseButtonRelease) {\r\n            if (this.world._draggedParticle != null)\r\n                this.world._draggedParticle.position = pos;\r\n            (this.world._draggedParticle as any) = null;\r\n        }\r\n    }\r\n\r\n    toggleZeroGravity() {\r\n        if (this.world.gravity.y == 0) {\r\n            this.world.gravity.y = -980;\r\n        } else {\r\n            this.world.gravity.y = 0;\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (Input.isKeyPressed(Keys.z))\r\n            this.toggleZeroGravity();\r\n\r\n        this.world.update();\r\n    }\r\n\r\n    render(batcher: es.IBatcher, camera: es.ICamera): void {\r\n        this.world.debugRender(batcher);\r\n    }\r\n}"]}