{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/Input/Input.ts"],"names":["EventMouse","EventTouch","SystemEvent","systemEvent","KeyboardUtils","ButtonState","MouseState","TouchState","reset","x","y","touchDown","touchPoint","es","Vector2","Input","initialize","_init","on","EventType","TOUCH_START","touchBegin","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","TOUCH_CANCEL","MOUSE_DOWN","mouseDown","MOUSE_UP","mouseUp","MOUSE_MOVE","mouseMove","MOUSE_LEAVE","mouseLeave","initTouchCache","update","i","_virtualInputs","length","_previousMouseState","_currentMouseState","clone","scaledPosition","position","scaledPos","_resolutionOffset","multiply","resolutionScale","isKeyPressed","key","List","currentKeys","contains","previousKeys","isKeyPressedBoth","keyA","keyB","isKeyDown","isKeyDownBoth","isKeyReleased","isKeyReleasedBoth","_totalTouchCount","_touchIndex","_gameTouchs","maxSupportedTouch","push","touch","event","getID","getLocationX","getLocationY","setpreviousTouchState","touchIndex","findIndex","t","touchData","_previousTouchState","totalTouchCount","getButton","BUTTON_LEFT","leftButton","pressed","BUTTON_RIGHT","rightButton","released","_mousePosition","touchState","_resolutionScale","zero","MAX_TOUCHES","delta","touchPosition","sub","magnitude","one"],"mappings":"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","sourcesContent":["import { EventMouse, EventTouch, macro, SystemEvent, systemEvent, Touch } from \"cc\";\r\nimport { KeyboardUtils } from \"./KeyboardUtils\";\r\nimport { Keys } from \"./Keys\";\r\nimport { ButtonState, MouseState } from \"./MouseState\";\r\nimport { VirtualInput } from \"./VirtualInput\";\r\n\r\nexport class TouchState {\r\n    public x = 0;\r\n    public y = 0;\r\n    public touchPoint: number = -1;\r\n    public touchDown: boolean = false;\r\n\r\n    public get position() {\r\n        return new es.Vector2(this.x, this.y);\r\n    }\r\n\r\n    public reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.touchDown = false;\r\n        this.touchPoint = -1;\r\n    }\r\n}\r\n\r\nexport class Input {\r\n    private static _init: boolean = false;\r\n    private static _previousTouchState: TouchState = new TouchState();\r\n    private static _resolutionOffset: es.Vector2 = es.Vector2.zero;\r\n    private static _touchIndex: number = 0;\r\n\r\n    private static _gameTouchs: TouchState[] = [];\r\n    private static _mousePosition: es.Vector2 = new es.Vector2(-1, -1);\r\n\r\n    /**\r\n     * 触摸列表 存放最大个数量触摸点信息\r\n     * 可通过判断touchPoint是否为-1 来确定是否为有触摸\r\n     * 通过判断touchDown 判断触摸点是否有按下\r\n     */\r\n    public static get gameTouchs() {\r\n        return this._gameTouchs;\r\n    }\r\n\r\n    private static _resolutionScale: es.Vector2 = es.Vector2.one;\r\n\r\n    /** 获取缩放值 默认为1 */\r\n    public static get resolutionScale() {\r\n        return this._resolutionScale;\r\n    }\r\n\r\n    private static _totalTouchCount: number = 0;\r\n\r\n    /** 当前触摸点数量 */\r\n    public static get totalTouchCount() {\r\n        return this._totalTouchCount;\r\n    }\r\n\r\n    /** 返回第一个触摸点的坐标 */\r\n    public static get touchPosition() {\r\n        if (!this._gameTouchs[0])\r\n            return es.Vector2.zero;\r\n        return this._gameTouchs[0].position;\r\n    }\r\n\r\n    public static get mousePosition() {\r\n        return this._mousePosition;\r\n    }\r\n\r\n    public static _virtualInputs: VirtualInput[] = [];\r\n\r\n    /** 获取最大触摸数 */\r\n    public static get maxSupportedTouch(): number {\r\n        return EventTouch.MAX_TOUCHES;\r\n    }\r\n\r\n    /** 获取第一个触摸点距离上次距离的增量 */\r\n    public static get touchPositionDelta() {\r\n        let delta = this.touchPosition.sub(this._previousTouchState.position);\r\n        if (delta.magnitude() > 0) {\r\n            this.setpreviousTouchState(this._gameTouchs[0]);\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    public static initialize() {\r\n        if (this._init)\r\n            return;\r\n\r\n        this._init = true;\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_START, this.touchBegin, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_END, this.touchEnd, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_DOWN, this.mouseDown, this);\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_UP, this.mouseUp, this);\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_MOVE, this.mouseMove, this);\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_LEAVE, this.mouseLeave, this);\r\n\r\n        this.initTouchCache();\r\n    }\r\n\r\n    public static update(){\r\n        KeyboardUtils.update();\r\n        for (let i = 0; i < this._virtualInputs.length; i ++)\r\n            this._virtualInputs[i].update();\r\n\r\n        this._previousMouseState = this._currentMouseState.clone();\r\n    }\r\n\r\n    public static scaledPosition(position: es.Vector2) {\r\n        let scaledPos = new es.Vector2(position.x - this._resolutionOffset.x, position.y - this._resolutionOffset.y);\r\n        return scaledPos.multiply(this.resolutionScale);\r\n    }\r\n\r\n    /**\r\n     * 只有在当前帧按下并且在上一帧没有按下时才算press\r\n     * @param key\r\n     */\r\n    public static isKeyPressed(key: Keys): boolean{\r\n        return new es.List(KeyboardUtils.currentKeys).contains(key) && !new es.List(KeyboardUtils.previousKeys).contains(key);\r\n    }\r\n\r\n    public static isKeyPressedBoth(keyA: Keys, keyB: Keys){\r\n        return this.isKeyPressed(keyA) || this.isKeyPressed(keyB);\r\n    }\r\n\r\n    public static isKeyDown(key: Keys): boolean {\r\n        return new es.List(KeyboardUtils.currentKeys).contains(key);\r\n    }\r\n\r\n    public static isKeyDownBoth(keyA: Keys, keyB: Keys){\r\n        return this.isKeyDown(keyA) || this.isKeyDown(keyB);\r\n    }\r\n\r\n    public static isKeyReleased(key: Keys){\r\n        return !new es.List(KeyboardUtils.currentKeys).contains(key) && new es.List(KeyboardUtils.previousKeys).contains(key);\r\n    }\r\n\r\n    public static isKeyReleasedBoth(keyA: Keys, keyB: Keys){\r\n        return this.isKeyReleased(keyA) || this.isKeyReleased(keyB);\r\n    }\r\n\r\n    public static get leftMouseButtonPressed() {\r\n        return this._currentMouseState.leftButton == ButtonState.pressed && \r\n            this._previousMouseState.leftButton == ButtonState.released;\r\n    }\r\n\r\n    public static get rightMouseButtonPressed() {\r\n        return this._currentMouseState.rightButton == ButtonState.pressed &&\r\n            this._previousMouseState.rightButton == ButtonState.released;\r\n    }\r\n\r\n    public static get leftMouseButtonDown() {\r\n        return this._currentMouseState.leftButton == ButtonState.pressed;\r\n    }\r\n\r\n    public static get leftMouseButtonRelease() {\r\n        return this._currentMouseState.leftButton == ButtonState.released;\r\n    }\r\n\r\n    public static get rightMouseButtonDown() {\r\n        return this._currentMouseState.rightButton == ButtonState.pressed;\r\n    }\r\n\r\n    public static get rightMouseButtonRelease() {\r\n        return this._currentMouseState.rightButton == ButtonState.released;\r\n    }\r\n\r\n    private static _previousMouseState: MouseState = new MouseState();\r\n    private static _currentMouseState: MouseState = new MouseState();\r\n\r\n    private static initTouchCache() {\r\n        this._totalTouchCount = 0;\r\n        this._touchIndex = 0;\r\n        this._gameTouchs.length = 0;\r\n        for (let i = 0; i < this.maxSupportedTouch; i++) {\r\n            this._gameTouchs.push(new TouchState());\r\n        }\r\n    }\r\n\r\n    private static touchBegin(touch: Touch, event: EventTouch) {\r\n        if (this._touchIndex < this.maxSupportedTouch) {\r\n            this._gameTouchs[this._touchIndex].touchPoint = touch.getID();\r\n            this._gameTouchs[this._touchIndex].touchDown = true;\r\n            this._gameTouchs[this._touchIndex].x = touch.getLocationX();\r\n            this._gameTouchs[this._touchIndex].y = touch.getLocationY();\r\n            if (this._touchIndex == 0) {\r\n                this.setpreviousTouchState(this._gameTouchs[0]);\r\n            }\r\n            this._touchIndex++;\r\n            this._totalTouchCount++;\r\n        }\r\n    }\r\n\r\n    private static touchMove(touch: Touch, event: EventTouch) {\r\n        if (touch.getID() == this._gameTouchs[0].touchPoint) {\r\n            this.setpreviousTouchState(this._gameTouchs[0]);\r\n        }\r\n\r\n        let touchIndex = this._gameTouchs.findIndex(t => t.touchPoint == touch.getID());\r\n        if (touchIndex != -1) {\r\n            let touchData = this._gameTouchs[touchIndex];\r\n            touchData.x = touch.getLocationX();\r\n            touchData.y = touch.getLocationY();\r\n        }\r\n    }\r\n    \r\n\r\n    private static touchEnd(touch: Touch, event: EventTouch) {\r\n        let touchIndex = this._gameTouchs.findIndex(t => t.touchPoint == touch.getID());\r\n        if (touchIndex != -1) {\r\n            let touchData = this._gameTouchs[touchIndex];\r\n            touchData.reset();\r\n            if (touchIndex == 0)\r\n                this._previousTouchState.reset();\r\n            this._totalTouchCount--;\r\n            if (this.totalTouchCount == 0) {\r\n                this._touchIndex = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static mouseDown(event: EventMouse) {\r\n        if (event.getButton() == EventMouse.BUTTON_LEFT) {\r\n            this._currentMouseState.leftButton = ButtonState.pressed;\r\n        }\r\n\r\n        if (event.getButton() == EventMouse.BUTTON_RIGHT) {\r\n            this._currentMouseState.rightButton = ButtonState.pressed;\r\n        }\r\n    }\r\n\r\n    private static mouseUp(event: EventMouse) {\r\n        if (event.getButton() == EventMouse.BUTTON_LEFT) {\r\n            this._currentMouseState.leftButton = ButtonState.released;\r\n        }\r\n\r\n        if (event.getButton() == EventMouse.BUTTON_RIGHT) {\r\n            this._currentMouseState.rightButton = ButtonState.released;\r\n        }\r\n    }\r\n\r\n    private static mouseMove(event: EventMouse) {\r\n        this._mousePosition = new es.Vector2(event.getLocationX(), event.getLocationY());\r\n    }\r\n\r\n    private static mouseLeave(event: EventMouse) {\r\n        this._mousePosition = new es.Vector2(-1, -1);\r\n        this._currentMouseState = new MouseState();\r\n    }\r\n\r\n    private static setpreviousTouchState(touchState: TouchState) {\r\n        this._previousTouchState = new TouchState();\r\n        this._previousTouchState.x = touchState.position.x;\r\n        this._previousTouchState.y = touchState.position.y;\r\n        this._previousTouchState.touchPoint = touchState.touchPoint;\r\n        this._previousTouchState.touchDown = touchState.touchDown;\r\n    }\r\n}"]}