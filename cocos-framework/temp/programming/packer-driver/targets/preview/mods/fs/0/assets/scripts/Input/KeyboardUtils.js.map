{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/Input/KeyboardUtils.ts"],"names":["SystemEvent","systemEvent","KeyboardUtils","init","on","EventType","KEY_UP","onKeyUpHandler","KEY_DOWN","onKeyDownHandler","update","previousKeys","length","currentKeys","key","push","es","List","remove","keyStatusKeys","destroy","off","event","contains","keyCode","linqList"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAwBA,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;;;;;;;+BAGxBC,a;;;AACT;AACJ;AACA;;AAEI;AACJ;AACA;sBAIkBC,I,GAAd,gBAA2B;AACvBF,UAAAA,WAAW,CAACG,EAAZ,CAAeJ,WAAW,CAACK,SAAZ,CAAsBC,MAArC,EAA6CJ,aAAa,CAACK,cAA3D,EAA2E,IAA3E;AACAN,UAAAA,WAAW,CAACG,EAAZ,CAAeJ,WAAW,CAACK,SAAZ,CAAsBG,QAArC,EAA+CN,aAAa,CAACO,gBAA7D,EAA+E,IAA/E;AACH,S;;sBAEaC,M,GAAd,kBAAsB;AAClBR,UAAAA,aAAa,CAACS,YAAd,CAA2BC,MAA3B,GAAoC,CAApC;;AACA,+DAAgBV,aAAa,CAACW,WAA9B,wCAA0C;AAAA,gBAAjCC,GAAiC;AACtCZ,YAAAA,aAAa,CAACS,YAAd,CAA2BI,IAA3B,CAAgCD,GAAhC;AACA,gBAAIE,EAAE,CAACC,IAAP,CAAYf,aAAa,CAACW,WAA1B,EAAuCK,MAAvC,CAA8CJ,GAA9C;AACH;;AACDZ,UAAAA,aAAa,CAACW,WAAd,CAA0BD,MAA1B,GAAmC,CAAnC;;AACA,gEAAgBV,aAAa,CAACiB,aAA9B,2CAA4C;AAAA,gBAAnCL,IAAmC;AACxCZ,YAAAA,aAAa,CAACW,WAAd,CAA0BE,IAA1B,CAA+BD,IAA/B;AACH;AACJ,S;;sBAEaM,O,GAAd,mBAA8B;AAC1BlB,UAAAA,aAAa,CAACW,WAAd,CAA0BD,MAA1B,GAAmC,CAAnC;AAEAX,UAAAA,WAAW,CAACoB,GAAZ,CAAgBrB,WAAW,CAACK,SAAZ,CAAsBC,MAAtC,EAA8CJ,aAAa,CAACK,cAA5D,EAA4E,IAA5E;AACAN,UAAAA,WAAW,CAACoB,GAAZ,CAAgBrB,WAAW,CAACK,SAAZ,CAAsBG,QAAtC,EAAgDN,aAAa,CAACO,gBAA9D,EAAgF,IAAhF;AACH,S;;sBAEcA,gB,GAAf,0BAAgCa,KAAhC,EAA4D;AACxD,cAAI,CAAC,IAAIN,EAAE,CAACC,IAAP,CAAYf,aAAa,CAACiB,aAA1B,EAAyCI,QAAzC,CAAkDD,KAAK,CAACE,OAAxD,CAAL,EACItB,aAAa,CAACiB,aAAd,CAA4BJ,IAA5B,CAAiCO,KAAK,CAACE,OAAvC;AACP,S;;sBAEcjB,c,GAAf,wBAA8Be,KAA9B,EAA0D;AACtD,cAAIG,QAAQ,GAAG,IAAIT,EAAE,CAACC,IAAP,CAAYf,aAAa,CAACiB,aAA1B,CAAf;AACA,cAAIM,QAAQ,CAACF,QAAT,CAAkBD,KAAK,CAACE,OAAxB,CAAJ,EACIC,QAAQ,CAACP,MAAT,CAAgBI,KAAK,CAACE,OAAtB;AACP,S;;;;;sBA5CQtB,a,iBAI2B,E;;sBAJ3BA,a,kBAQ4B,E;;sBAR5BA,a,mBAS8B,E","sourcesContent":["import { EventKeyboard, SystemEvent, systemEvent } from \"cc\";\r\nimport { Keys } from \"./Keys\";\r\n\r\nexport class KeyboardUtils {\r\n    /**\r\n     * 当前帧按键状态\r\n     */\r\n    public static currentKeys: Keys[] = [];\r\n    /**\r\n     * 上一帧按键状态\r\n     */\r\n    public static previousKeys: Keys[] = [];\r\n    private static keyStatusKeys: Keys[] = [];\r\n\r\n    public static init(): void {\r\n        systemEvent.on(SystemEvent.EventType.KEY_UP, KeyboardUtils.onKeyUpHandler, this);\r\n        systemEvent.on(SystemEvent.EventType.KEY_DOWN, KeyboardUtils.onKeyDownHandler, this);\r\n    }\r\n\r\n    public static update(){\r\n        KeyboardUtils.previousKeys.length = 0;\r\n        for (let key of KeyboardUtils.currentKeys){\r\n            KeyboardUtils.previousKeys.push(key);\r\n            new es.List(KeyboardUtils.currentKeys).remove(key);\r\n        }\r\n        KeyboardUtils.currentKeys.length = 0;\r\n        for (let key of KeyboardUtils.keyStatusKeys){\r\n            KeyboardUtils.currentKeys.push(key);\r\n        }\r\n    }\r\n\r\n    public static destroy(): void {\r\n        KeyboardUtils.currentKeys.length = 0;\r\n\r\n        systemEvent.off(SystemEvent.EventType.KEY_UP, KeyboardUtils.onKeyUpHandler, this);\r\n        systemEvent.off(SystemEvent.EventType.KEY_DOWN, KeyboardUtils.onKeyDownHandler, this);\r\n    }\r\n\r\n    private static onKeyDownHandler(event: EventKeyboard): void {\r\n        if (!new es.List(KeyboardUtils.keyStatusKeys).contains(event.keyCode))\r\n            KeyboardUtils.keyStatusKeys.push(event.keyCode);\r\n    }\r\n\r\n    private static onKeyUpHandler(event: EventKeyboard): void {\r\n        let linqList = new es.List(KeyboardUtils.keyStatusKeys);\r\n        if (linqList.contains(event.keyCode))\r\n            linqList.remove(event.keyCode);\r\n    }\r\n}"]}