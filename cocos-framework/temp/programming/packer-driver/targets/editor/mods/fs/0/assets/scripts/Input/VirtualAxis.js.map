{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/Input/VirtualAxis.ts"],"names":["VirtualAxis","KeyboardKeys","Input","OverlapBehavior","VirtualInput","VirtualAxisNode","value","i","nodes","length","val","constructor","concat","update","overlapBehavior","negative","positive","isKeyDown","cancelOut","_value","takeNewer","_turned","takeOlder"],"mappings":";;;qFAKaA,W,EAwBAC,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7BJC,MAAAA,K,iBAAAA,K;;AAEAC,MAAAA,e,iBAAAA,e;AAAiBC,MAAAA,Y,iBAAAA,Y;;AACjBC,MAAAA,e,iBAAAA,e;;;;;;;6BAEIL,W,GAAN,MAAMA,WAAN;AAAA;AAAA,wCAAuC;AAGtB,YAALM,KAAK,GAAG;AACf,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AACxC,gBAAIG,GAAG,GAAG,KAAKF,KAAL,CAAWD,CAAX,EAAcD,KAAxB;AACA,gBAAII,GAAG,IAAI,CAAX,EACI,OAAOA,GAAP;AACP;;AAED,iBAAO,CAAP;AACH;;AAEDC,QAAAA,WAAW,CAAC,GAAGH,KAAJ,EAA8B;AACrC;;AADqC,yCAZX,EAYW;;AAErC,eAAKA,KAAL,CAAWI,MAAX,CAAkBJ,KAAlB;AACH;;AAEMK,QAAAA,MAAM,GAAG;AACZ,eAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EACI,KAAKC,KAAL,CAAWD,CAAX,EAAcM,MAAd;AACP;;AArBqC,O;;8BAwBjCZ,Y,GAAN,MAAMA,YAAN;AAAA;AAAA,8CAA2C;AAO9CU,QAAAA,WAAW,CAACG,eAAD,EAAmCC,QAAnC,EAAmDC,QAAnD,EAAmE;AAC1E;;AAD0E;;AAAA;;AAAA;;AAAA,0CAHtD,CAGsD;;AAAA,2CAFpD,KAEoD;;AAE1E,eAAKF,eAAL,GAAuBA,eAAvB;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACH;;AAEMH,QAAAA,MAAM,GAAG;AACZ,cAAI;AAAA;AAAA,8BAAMI,SAAN,CAAgB,KAAKD,QAArB,CAAJ,EAAoC;AAChC,gBAAI;AAAA;AAAA,gCAAMC,SAAN,CAAgB,KAAKF,QAArB,CAAJ,EAAoC;AAChC,sBAAQ,KAAKD,eAAb;AACI;AACA,qBAAK;AAAA;AAAA,wDAAgBI,SAArB;AACI,uBAAKC,MAAL,GAAc,CAAd;AACA;;AACJ,qBAAK;AAAA;AAAA,wDAAgBC,SAArB;AACI,sBAAI,CAAC,KAAKC,OAAV,EAAmB;AACf,yBAAKF,MAAL,IAAe,CAAC,CAAhB;AACA,yBAAKE,OAAL,GAAe,IAAf;AACH;;AACD;;AACJ,qBAAK;AAAA;AAAA,wDAAgBC,SAArB;AACI;AAZR;AAcH,aAfD,MAeO;AACH,mBAAKD,OAAL,GAAe,KAAf;AACA,mBAAKF,MAAL,GAAc,CAAd;AACH;AACJ,WApBD,MAoBO,IAAI;AAAA;AAAA,8BAAMF,SAAN,CAAgB,KAAKF,QAArB,CAAJ,EAAoC;AACvC,iBAAKM,OAAL,GAAe,KAAf;AACA,iBAAKF,MAAL,GAAc,CAAC,CAAf;AACH,WAHM,MAGA;AACH,iBAAKE,OAAL,GAAe,KAAf;AACA,iBAAKF,MAAL,GAAc,CAAd;AACH;AACJ;;AAEe,YAALb,KAAK,GAAE;AACd,iBAAO,KAAKa,MAAZ;AACH;;AA9C6C,O","sourcesContent":["import { Input } from \"./Input\";\r\nimport { Keys } from \"./Keys\";\r\nimport { OverlapBehavior, VirtualInput } from \"./VirtualInput\";\r\nimport { VirtualAxisNode } from \"./VirtualIntegerAxis\";\r\n\r\nexport class VirtualAxis extends VirtualInput {\r\n    public nodes: VirtualAxisNode[] = [];\r\n\r\n        public get value() {\r\n            for (let i = 0; i < this.nodes.length; i++) {\r\n                let val = this.nodes[i].value;\r\n                if (val != 0)\r\n                    return val;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        constructor(...nodes: VirtualAxisNode[]) {\r\n            super();\r\n            this.nodes.concat(nodes);\r\n        }\r\n\r\n        public update() {\r\n            for (let i = 0; i < this.nodes.length; i++)\r\n                this.nodes[i].update();\r\n        }\r\n}\r\n\r\nexport class KeyboardKeys extends VirtualAxisNode {\r\n    public overlapBehavior: OverlapBehavior;\r\n    public positive: Keys;\r\n    public negative: Keys;\r\n    public _value: number = 0;\r\n    public _turned: boolean = false;\r\n\r\n    constructor(overlapBehavior: OverlapBehavior, negative: Keys, positive: Keys) {\r\n        super();\r\n        this.overlapBehavior = overlapBehavior;\r\n        this.negative = negative;\r\n        this.positive = positive;\r\n    }\r\n\r\n    public update() {\r\n        if (Input.isKeyDown(this.positive)) {\r\n            if (Input.isKeyDown(this.negative)) {\r\n                switch (this.overlapBehavior) {\r\n                    default:\r\n                    case OverlapBehavior.cancelOut:\r\n                        this._value = 0;\r\n                        break;\r\n                    case OverlapBehavior.takeNewer:\r\n                        if (!this._turned) {\r\n                            this._value *= -1;\r\n                            this._turned = true;\r\n                        }\r\n                        break;\r\n                    case OverlapBehavior.takeOlder:\r\n                        break;\r\n                }\r\n            } else {\r\n                this._turned = false;\r\n                this._value = 1;\r\n            }\r\n        } else if (Input.isKeyDown(this.negative)) {\r\n            this._turned = false;\r\n            this._value = -1;\r\n        } else {\r\n            this._turned = false;\r\n            this._value = 0;\r\n        }\r\n    }\r\n\r\n    public get value(){\r\n        return this._value;\r\n    }\r\n}"]}