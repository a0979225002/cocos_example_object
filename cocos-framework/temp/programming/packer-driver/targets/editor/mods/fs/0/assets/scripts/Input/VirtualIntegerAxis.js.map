{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/Input/VirtualIntegerAxis.ts"],"names":["VirtualIntegerAxis","VirtualAxisNode","KeyboardKeys","VirtualInput","VirtualInputNode","value","i","nodes","length","val","Math","sign","constructor","concat","update","addKeyboardKeys","overlapBehavior","negative","positive","push"],"mappings":";;;4EAIaA,kB,EAmCSC,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtCbC,MAAAA,Y,iBAAAA,Y;;AACiBC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,gB,iBAAAA,gB;;;;;;;oCAE3BJ,kB,GAAN,MAAMA,kBAAN;AAAA;AAAA,wCAA8C;AAGjC,YAALK,KAAK,GAAE;AACd,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AACxC,gBAAIG,GAAG,GAAG,KAAKF,KAAL,CAAWD,CAAX,EAAcD,KAAxB;AACA,gBAAII,GAAG,IAAI,CAAX,EACI,OAAOC,IAAI,CAACC,IAAL,CAAUF,GAAV,CAAP;AACP;;AAED,iBAAO,CAAP;AACH;;AAEDG,QAAAA,WAAW,CAAC,GAAGL,KAAJ,EAA6B;AACpC;;AADoC,yCAZN,EAYM;;AAEpC,eAAKA,KAAL,CAAWM,MAAX,CAAkBN,KAAlB;AACH;;AAEMO,QAAAA,MAAM,GAAG;AACZ,eAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EACI,KAAKC,KAAL,CAAWD,CAAX,EAAcQ,MAAd;AACP;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACWC,QAAAA,eAAe,CAACC,eAAD,EAAmCC,QAAnC,EAAmDC,QAAnD,EAAkE;AACpF,eAAKX,KAAL,CAAWY,IAAX,CAAgB;AAAA;AAAA,4CAAiBH,eAAjB,EAAkCC,QAAlC,EAA4CC,QAA5C,CAAhB;AACA,iBAAO,IAAP;AACH;;AAhCgD,O;;iCAmC/BjB,e,GAAf,MAAeA,eAAf;AAAA;AAAA,gDAAwD;AAAA;AAAA;;AAAA;AAAA;;AAAA,O","sourcesContent":["import { Keys } from \"./Keys\";\r\nimport { KeyboardKeys } from \"./VirtualAxis\";\r\nimport { OverlapBehavior, VirtualInput, VirtualInputNode } from \"./VirtualInput\";\r\n\r\nexport class VirtualIntegerAxis extends VirtualInput {\r\n    public nodes: VirtualAxisNode[] = [];\r\n\r\n    public get value(){\r\n        for (let i = 0; i < this.nodes.length; i ++){\r\n            let val = this.nodes[i].value;\r\n            if (val != 0)\r\n                return Math.sign(val);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    constructor(...nodes: VirtualAxisNode[]){\r\n        super();\r\n        this.nodes.concat(nodes);\r\n    }\r\n\r\n    public update() {\r\n        for (let i = 0; i < this.nodes.length; i ++)\r\n            this.nodes[i].update();\r\n    }\r\n\r\n    /**\r\n     * 添加键盘键来模拟这个虚拟输入的左/右或上/下\r\n     * @param overlapBehavior\r\n     * @param negative\r\n     * @param positive\r\n     */\r\n    public addKeyboardKeys(overlapBehavior: OverlapBehavior, negative: Keys, positive: Keys){\r\n        this.nodes.push(new KeyboardKeys(overlapBehavior, negative, positive));\r\n        return this;\r\n    }\r\n}\r\n\r\nexport abstract class VirtualAxisNode extends VirtualInputNode {\r\n    public abstract value: number;\r\n}"]}