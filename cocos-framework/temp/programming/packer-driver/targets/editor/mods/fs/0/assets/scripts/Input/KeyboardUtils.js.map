{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/Input/KeyboardUtils.ts"],"names":["KeyboardUtils","SystemEvent","systemEvent","init","on","EventType","KEY_UP","onKeyUpHandler","KEY_DOWN","onKeyDownHandler","update","previousKeys","length","key","currentKeys","push","es","List","remove","keyStatusKeys","destroy","off","event","contains","keyCode","linqList"],"mappings":";;;wDAGaA,a;;;;;;;;;;;;;;;AAHWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;;;;;;;+BAGxBF,a,GAAN,MAAMA,aAAN,CAAoB;AACvB;AACJ;AACA;;AAEI;AACJ;AACA;AAIsB,eAAJG,IAAI,GAAS;AACvBD,UAAAA,WAAW,CAACE,EAAZ,CAAeH,WAAW,CAACI,SAAZ,CAAsBC,MAArC,EAA6CN,aAAa,CAACO,cAA3D,EAA2E,IAA3E;AACAL,UAAAA,WAAW,CAACE,EAAZ,CAAeH,WAAW,CAACI,SAAZ,CAAsBG,QAArC,EAA+CR,aAAa,CAACS,gBAA7D,EAA+E,IAA/E;AACH;;AAEmB,eAANC,MAAM,GAAE;AAClBV,UAAAA,aAAa,CAACW,YAAd,CAA2BC,MAA3B,GAAoC,CAApC;;AACA,eAAK,IAAIC,GAAT,IAAgBb,aAAa,CAACc,WAA9B,EAA0C;AACtCd,YAAAA,aAAa,CAACW,YAAd,CAA2BI,IAA3B,CAAgCF,GAAhC;AACA,gBAAIG,EAAE,CAACC,IAAP,CAAYjB,aAAa,CAACc,WAA1B,EAAuCI,MAAvC,CAA8CL,GAA9C;AACH;;AACDb,UAAAA,aAAa,CAACc,WAAd,CAA0BF,MAA1B,GAAmC,CAAnC;;AACA,eAAK,IAAIC,GAAT,IAAgBb,aAAa,CAACmB,aAA9B,EAA4C;AACxCnB,YAAAA,aAAa,CAACc,WAAd,CAA0BC,IAA1B,CAA+BF,GAA/B;AACH;AACJ;;AAEoB,eAAPO,OAAO,GAAS;AAC1BpB,UAAAA,aAAa,CAACc,WAAd,CAA0BF,MAA1B,GAAmC,CAAnC;AAEAV,UAAAA,WAAW,CAACmB,GAAZ,CAAgBpB,WAAW,CAACI,SAAZ,CAAsBC,MAAtC,EAA8CN,aAAa,CAACO,cAA5D,EAA4E,IAA5E;AACAL,UAAAA,WAAW,CAACmB,GAAZ,CAAgBpB,WAAW,CAACI,SAAZ,CAAsBG,QAAtC,EAAgDR,aAAa,CAACS,gBAA9D,EAAgF,IAAhF;AACH;;AAE8B,eAAhBA,gBAAgB,CAACa,KAAD,EAA6B;AACxD,cAAI,CAAC,IAAIN,EAAE,CAACC,IAAP,CAAYjB,aAAa,CAACmB,aAA1B,EAAyCI,QAAzC,CAAkDD,KAAK,CAACE,OAAxD,CAAL,EACIxB,aAAa,CAACmB,aAAd,CAA4BJ,IAA5B,CAAiCO,KAAK,CAACE,OAAvC;AACP;;AAE4B,eAAdjB,cAAc,CAACe,KAAD,EAA6B;AACtD,cAAIG,QAAQ,GAAG,IAAIT,EAAE,CAACC,IAAP,CAAYjB,aAAa,CAACmB,aAA1B,CAAf;AACA,cAAIM,QAAQ,CAACF,QAAT,CAAkBD,KAAK,CAACE,OAAxB,CAAJ,EACIC,QAAQ,CAACP,MAAT,CAAgBI,KAAK,CAACE,OAAtB;AACP;;AA5CsB,O;;sBAAdxB,a,iBAI2B,E;;sBAJ3BA,a,kBAQ4B,E;;sBAR5BA,a,mBAS8B,E","sourcesContent":["import { EventKeyboard, SystemEvent, systemEvent } from \"cc\";\r\nimport { Keys } from \"./Keys\";\r\n\r\nexport class KeyboardUtils {\r\n    /**\r\n     * 当前帧按键状态\r\n     */\r\n    public static currentKeys: Keys[] = [];\r\n    /**\r\n     * 上一帧按键状态\r\n     */\r\n    public static previousKeys: Keys[] = [];\r\n    private static keyStatusKeys: Keys[] = [];\r\n\r\n    public static init(): void {\r\n        systemEvent.on(SystemEvent.EventType.KEY_UP, KeyboardUtils.onKeyUpHandler, this);\r\n        systemEvent.on(SystemEvent.EventType.KEY_DOWN, KeyboardUtils.onKeyDownHandler, this);\r\n    }\r\n\r\n    public static update(){\r\n        KeyboardUtils.previousKeys.length = 0;\r\n        for (let key of KeyboardUtils.currentKeys){\r\n            KeyboardUtils.previousKeys.push(key);\r\n            new es.List(KeyboardUtils.currentKeys).remove(key);\r\n        }\r\n        KeyboardUtils.currentKeys.length = 0;\r\n        for (let key of KeyboardUtils.keyStatusKeys){\r\n            KeyboardUtils.currentKeys.push(key);\r\n        }\r\n    }\r\n\r\n    public static destroy(): void {\r\n        KeyboardUtils.currentKeys.length = 0;\r\n\r\n        systemEvent.off(SystemEvent.EventType.KEY_UP, KeyboardUtils.onKeyUpHandler, this);\r\n        systemEvent.off(SystemEvent.EventType.KEY_DOWN, KeyboardUtils.onKeyDownHandler, this);\r\n    }\r\n\r\n    private static onKeyDownHandler(event: EventKeyboard): void {\r\n        if (!new es.List(KeyboardUtils.keyStatusKeys).contains(event.keyCode))\r\n            KeyboardUtils.keyStatusKeys.push(event.keyCode);\r\n    }\r\n\r\n    private static onKeyUpHandler(event: EventKeyboard): void {\r\n        let linqList = new es.List(KeyboardUtils.keyStatusKeys);\r\n        if (linqList.contains(event.keyCode))\r\n            linqList.remove(event.keyCode);\r\n    }\r\n}"]}