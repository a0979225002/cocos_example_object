{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/Input/Input.ts"],"names":["TouchState","Input","EventMouse","EventTouch","SystemEvent","systemEvent","KeyboardUtils","ButtonState","MouseState","position","es","Vector2","x","y","reset","touchDown","touchPoint","gameTouchs","_gameTouchs","resolutionScale","_resolutionScale","totalTouchCount","_totalTouchCount","touchPosition","zero","mousePosition","_mousePosition","maxSupportedTouch","MAX_TOUCHES","touchPositionDelta","delta","sub","_previousTouchState","magnitude","setpreviousTouchState","initialize","_init","on","EventType","TOUCH_START","touchBegin","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","TOUCH_CANCEL","MOUSE_DOWN","mouseDown","MOUSE_UP","mouseUp","MOUSE_MOVE","mouseMove","MOUSE_LEAVE","mouseLeave","initTouchCache","update","i","_virtualInputs","length","_previousMouseState","_currentMouseState","clone","scaledPosition","scaledPos","_resolutionOffset","multiply","isKeyPressed","key","List","currentKeys","contains","previousKeys","isKeyPressedBoth","keyA","keyB","isKeyDown","isKeyDownBoth","isKeyReleased","isKeyReleasedBoth","leftMouseButtonPressed","leftButton","pressed","released","rightMouseButtonPressed","rightButton","leftMouseButtonDown","leftMouseButtonRelease","rightMouseButtonDown","rightMouseButtonRelease","_touchIndex","push","touch","event","getID","getLocationX","getLocationY","touchIndex","findIndex","t","touchData","getButton","BUTTON_LEFT","BUTTON_RIGHT","touchState","one"],"mappings":"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","sourcesContent":["import { EventMouse, EventTouch, macro, SystemEvent, systemEvent, Touch } from \"cc\";\r\nimport { KeyboardUtils } from \"./KeyboardUtils\";\r\nimport { Keys } from \"./Keys\";\r\nimport { ButtonState, MouseState } from \"./MouseState\";\r\nimport { VirtualInput } from \"./VirtualInput\";\r\n\r\nexport class TouchState {\r\n    public x = 0;\r\n    public y = 0;\r\n    public touchPoint: number = -1;\r\n    public touchDown: boolean = false;\r\n\r\n    public get position() {\r\n        return new es.Vector2(this.x, this.y);\r\n    }\r\n\r\n    public reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.touchDown = false;\r\n        this.touchPoint = -1;\r\n    }\r\n}\r\n\r\nexport class Input {\r\n    private static _init: boolean = false;\r\n    private static _previousTouchState: TouchState = new TouchState();\r\n    private static _resolutionOffset: es.Vector2 = es.Vector2.zero;\r\n    private static _touchIndex: number = 0;\r\n\r\n    private static _gameTouchs: TouchState[] = [];\r\n    private static _mousePosition: es.Vector2 = new es.Vector2(-1, -1);\r\n\r\n    /**\r\n     * 触摸列表 存放最大个数量触摸点信息\r\n     * 可通过判断touchPoint是否为-1 来确定是否为有触摸\r\n     * 通过判断touchDown 判断触摸点是否有按下\r\n     */\r\n    public static get gameTouchs() {\r\n        return this._gameTouchs;\r\n    }\r\n\r\n    private static _resolutionScale: es.Vector2 = es.Vector2.one;\r\n\r\n    /** 获取缩放值 默认为1 */\r\n    public static get resolutionScale() {\r\n        return this._resolutionScale;\r\n    }\r\n\r\n    private static _totalTouchCount: number = 0;\r\n\r\n    /** 当前触摸点数量 */\r\n    public static get totalTouchCount() {\r\n        return this._totalTouchCount;\r\n    }\r\n\r\n    /** 返回第一个触摸点的坐标 */\r\n    public static get touchPosition() {\r\n        if (!this._gameTouchs[0])\r\n            return es.Vector2.zero;\r\n        return this._gameTouchs[0].position;\r\n    }\r\n\r\n    public static get mousePosition() {\r\n        return this._mousePosition;\r\n    }\r\n\r\n    public static _virtualInputs: VirtualInput[] = [];\r\n\r\n    /** 获取最大触摸数 */\r\n    public static get maxSupportedTouch(): number {\r\n        return EventTouch.MAX_TOUCHES;\r\n    }\r\n\r\n    /** 获取第一个触摸点距离上次距离的增量 */\r\n    public static get touchPositionDelta() {\r\n        let delta = this.touchPosition.sub(this._previousTouchState.position);\r\n        if (delta.magnitude() > 0) {\r\n            this.setpreviousTouchState(this._gameTouchs[0]);\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    public static initialize() {\r\n        if (this._init)\r\n            return;\r\n\r\n        this._init = true;\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_START, this.touchBegin, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_END, this.touchEnd, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_DOWN, this.mouseDown, this);\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_UP, this.mouseUp, this);\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_MOVE, this.mouseMove, this);\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_LEAVE, this.mouseLeave, this);\r\n\r\n        this.initTouchCache();\r\n    }\r\n\r\n    public static update(){\r\n        KeyboardUtils.update();\r\n        for (let i = 0; i < this._virtualInputs.length; i ++)\r\n            this._virtualInputs[i].update();\r\n\r\n        this._previousMouseState = this._currentMouseState.clone();\r\n    }\r\n\r\n    public static scaledPosition(position: es.Vector2) {\r\n        let scaledPos = new es.Vector2(position.x - this._resolutionOffset.x, position.y - this._resolutionOffset.y);\r\n        return scaledPos.multiply(this.resolutionScale);\r\n    }\r\n\r\n    /**\r\n     * 只有在当前帧按下并且在上一帧没有按下时才算press\r\n     * @param key\r\n     */\r\n    public static isKeyPressed(key: Keys): boolean{\r\n        return new es.List(KeyboardUtils.currentKeys).contains(key) && !new es.List(KeyboardUtils.previousKeys).contains(key);\r\n    }\r\n\r\n    public static isKeyPressedBoth(keyA: Keys, keyB: Keys){\r\n        return this.isKeyPressed(keyA) || this.isKeyPressed(keyB);\r\n    }\r\n\r\n    public static isKeyDown(key: Keys): boolean {\r\n        return new es.List(KeyboardUtils.currentKeys).contains(key);\r\n    }\r\n\r\n    public static isKeyDownBoth(keyA: Keys, keyB: Keys){\r\n        return this.isKeyDown(keyA) || this.isKeyDown(keyB);\r\n    }\r\n\r\n    public static isKeyReleased(key: Keys){\r\n        return !new es.List(KeyboardUtils.currentKeys).contains(key) && new es.List(KeyboardUtils.previousKeys).contains(key);\r\n    }\r\n\r\n    public static isKeyReleasedBoth(keyA: Keys, keyB: Keys){\r\n        return this.isKeyReleased(keyA) || this.isKeyReleased(keyB);\r\n    }\r\n\r\n    public static get leftMouseButtonPressed() {\r\n        return this._currentMouseState.leftButton == ButtonState.pressed && \r\n            this._previousMouseState.leftButton == ButtonState.released;\r\n    }\r\n\r\n    public static get rightMouseButtonPressed() {\r\n        return this._currentMouseState.rightButton == ButtonState.pressed &&\r\n            this._previousMouseState.rightButton == ButtonState.released;\r\n    }\r\n\r\n    public static get leftMouseButtonDown() {\r\n        return this._currentMouseState.leftButton == ButtonState.pressed;\r\n    }\r\n\r\n    public static get leftMouseButtonRelease() {\r\n        return this._currentMouseState.leftButton == ButtonState.released;\r\n    }\r\n\r\n    public static get rightMouseButtonDown() {\r\n        return this._currentMouseState.rightButton == ButtonState.pressed;\r\n    }\r\n\r\n    public static get rightMouseButtonRelease() {\r\n        return this._currentMouseState.rightButton == ButtonState.released;\r\n    }\r\n\r\n    private static _previousMouseState: MouseState = new MouseState();\r\n    private static _currentMouseState: MouseState = new MouseState();\r\n\r\n    private static initTouchCache() {\r\n        this._totalTouchCount = 0;\r\n        this._touchIndex = 0;\r\n        this._gameTouchs.length = 0;\r\n        for (let i = 0; i < this.maxSupportedTouch; i++) {\r\n            this._gameTouchs.push(new TouchState());\r\n        }\r\n    }\r\n\r\n    private static touchBegin(touch: Touch, event: EventTouch) {\r\n        if (this._touchIndex < this.maxSupportedTouch) {\r\n            this._gameTouchs[this._touchIndex].touchPoint = touch.getID();\r\n            this._gameTouchs[this._touchIndex].touchDown = true;\r\n            this._gameTouchs[this._touchIndex].x = touch.getLocationX();\r\n            this._gameTouchs[this._touchIndex].y = touch.getLocationY();\r\n            if (this._touchIndex == 0) {\r\n                this.setpreviousTouchState(this._gameTouchs[0]);\r\n            }\r\n            this._touchIndex++;\r\n            this._totalTouchCount++;\r\n        }\r\n    }\r\n\r\n    private static touchMove(touch: Touch, event: EventTouch) {\r\n        if (touch.getID() == this._gameTouchs[0].touchPoint) {\r\n            this.setpreviousTouchState(this._gameTouchs[0]);\r\n        }\r\n\r\n        let touchIndex = this._gameTouchs.findIndex(t => t.touchPoint == touch.getID());\r\n        if (touchIndex != -1) {\r\n            let touchData = this._gameTouchs[touchIndex];\r\n            touchData.x = touch.getLocationX();\r\n            touchData.y = touch.getLocationY();\r\n        }\r\n    }\r\n    \r\n\r\n    private static touchEnd(touch: Touch, event: EventTouch) {\r\n        let touchIndex = this._gameTouchs.findIndex(t => t.touchPoint == touch.getID());\r\n        if (touchIndex != -1) {\r\n            let touchData = this._gameTouchs[touchIndex];\r\n            touchData.reset();\r\n            if (touchIndex == 0)\r\n                this._previousTouchState.reset();\r\n            this._totalTouchCount--;\r\n            if (this.totalTouchCount == 0) {\r\n                this._touchIndex = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static mouseDown(event: EventMouse) {\r\n        if (event.getButton() == EventMouse.BUTTON_LEFT) {\r\n            this._currentMouseState.leftButton = ButtonState.pressed;\r\n        }\r\n\r\n        if (event.getButton() == EventMouse.BUTTON_RIGHT) {\r\n            this._currentMouseState.rightButton = ButtonState.pressed;\r\n        }\r\n    }\r\n\r\n    private static mouseUp(event: EventMouse) {\r\n        if (event.getButton() == EventMouse.BUTTON_LEFT) {\r\n            this._currentMouseState.leftButton = ButtonState.released;\r\n        }\r\n\r\n        if (event.getButton() == EventMouse.BUTTON_RIGHT) {\r\n            this._currentMouseState.rightButton = ButtonState.released;\r\n        }\r\n    }\r\n\r\n    private static mouseMove(event: EventMouse) {\r\n        this._mousePosition = new es.Vector2(event.getLocationX(), event.getLocationY());\r\n    }\r\n\r\n    private static mouseLeave(event: EventMouse) {\r\n        this._mousePosition = new es.Vector2(-1, -1);\r\n        this._currentMouseState = new MouseState();\r\n    }\r\n\r\n    private static setpreviousTouchState(touchState: TouchState) {\r\n        this._previousTouchState = new TouchState();\r\n        this._previousTouchState.x = touchState.position.x;\r\n        this._previousTouchState.y = touchState.position.y;\r\n        this._previousTouchState.touchPoint = touchState.touchPoint;\r\n        this._previousTouchState.touchDown = touchState.touchDown;\r\n    }\r\n}"]}