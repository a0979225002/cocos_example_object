{"version":3,"sources":["file:///D:/My_Game/%E5%88%A5%E4%BA%BA%E5%AF%AB%E7%9A%84%E5%8F%83%E8%80%83%E7%94%A8/cocos-framework/assets/scripts/scenes/lineCasting/LineCaster.ts"],"names":["LineCaster","component_camera","Input","Keys","es","RenderableComponent","Vector2","getwidth","getheight","render","batcher","camera","drawPixel","_lastPosition","Color","end","transform","position","drawLine","_collisionPosition","x","y","update","leftMouseButtonPressed","clone","pos","entity","scene","findEntity","getComponent","mouseToWorldPoint","rightMouseButtonPressed","isKeyPressed","space","hit","Physics","linecast","collider","point"],"mappings":";;;6DAKaA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJJC,MAAAA,gB,iBAAAA,gB;;AAEAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,I,iBAAAA,I;;;;;;;4BACIH,U,GAAN,MAAMA,UAAN,SAAyBI,EAAE,CAACC,mBAA5B,CAAyE;AAAA;AAAA;;AAAA,iDACxC,IAAID,EAAE,CAACE,OAAP,CAAe,GAAf,EAAoB,GAApB,CADwC;;AAAA,sDAEnC,IAAIF,EAAE,CAACE,OAAP,CAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,CAFmC;AAAA;;AAIrEC,QAAAA,QAAQ,GAAG;AACd,iBAAO,IAAP;AACH;;AAEMC,QAAAA,SAAS,GAAG;AACf,iBAAO,IAAP;AACH;;AAEMC,QAAAA,MAAM,CAACC,OAAD,EAAmBC,MAAnB,EAAmD;AAC5DD,UAAAA,OAAO,CAACE,SAAR,CAAkB,KAAKC,aAAvB,EAAsC,IAAIT,EAAE,CAACU,KAAP,CAAa,GAAb,EAAkB,GAAlB,EAAuB,CAAvB,CAAtC,EAAiE,CAAjE;AACAJ,UAAAA,OAAO,CAACK,GAAR;AAEAL,UAAAA,OAAO,CAACE,SAAR,CAAkB,KAAKI,SAAL,CAAeC,QAAjC,EAA2C,IAAIb,EAAE,CAACU,KAAP,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAA3C,EAAwE,CAAxE;AACAJ,UAAAA,OAAO,CAACK,GAAR;AAEAL,UAAAA,OAAO,CAACQ,QAAR,CAAiB,KAAKL,aAAtB,EAAqC,KAAKG,SAAL,CAAeC,QAApD,EAA8D,IAAIb,EAAE,CAACU,KAAP,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAA9D,EAA2F,CAA3F;AACAJ,UAAAA,OAAO,CAACK,GAAR;;AAEA,cAAI,KAAKI,kBAAL,CAAwBC,CAAxB,GAA4B,CAA5B,IAAiC,KAAKD,kBAAL,CAAwBE,CAAxB,GAA4B,CAAjE,EAAoE;AAChEX,YAAAA,OAAO,CAACE,SAAR,CAAkB,KAAKO,kBAAvB,EAA2C,IAAIf,EAAE,CAACU,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqB,CAArB,CAA3C,EAAoE,EAApE;AACAJ,YAAAA,OAAO,CAACK,GAAR;AACH;AACJ;;AAEDO,QAAAA,MAAM,GAAG;AACL,cAAI;AAAA;AAAA,8BAAMC,sBAAV,EAAkC;AAC9B,iBAAKV,aAAL,GAAqB,KAAKG,SAAL,CAAeC,QAAf,CAAwBO,KAAxB,EAArB;AACA,gBAAIC,GAAG,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,UAAlB,CAA6B,QAA7B,EAAuCC,YAAvC;AAAA;AAAA,sDAAsEC,iBAAtE,EAAX;AACA,iBAAKd,SAAL,CAAeC,QAAf,GAA0BQ,GAAG,CAACD,KAAJ,EAA1B;AACA,iBAAKL,kBAAL,GAA0B,IAAIf,EAAE,CAACE,OAAP,CAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,CAA1B;AACH;;AAED,cAAI;AAAA;AAAA,8BAAMyB,uBAAN,IAAiC;AAAA;AAAA,8BAAMC,YAAN,CAAmB;AAAA;AAAA,4BAAKC,KAAxB,CAArC,EAAqE;AACjE,gBAAIC,GAAG,GAAG9B,EAAE,CAAC+B,OAAH,CAAWC,QAAX,CAAoB,KAAKvB,aAAzB,EAAwC,KAAKG,SAAL,CAAeC,QAAvD,CAAV;;AACA,gBAAIiB,GAAG,CAACG,QAAJ,IAAgB,IAApB,EAA0B;AACtB,mBAAKlB,kBAAL,GAA0Be,GAAG,CAACI,KAA9B;AACH;AACJ;AACJ;;AA1C2E,O","sourcesContent":["import { Color } from \"cc\";\r\nimport { component_camera } from \"../../components/component_camera\";\r\nimport { Batcher } from \"../../graphics/Batcher\";\r\nimport { Input } from \"../../Input/Input\";\r\nimport { Keys } from \"../../Input/Keys\";\r\nexport class LineCaster extends es.RenderableComponent implements es.IUpdatable {\r\n    private _lastPosition: es.Vector2 = new es.Vector2(101, 101);\r\n    private _collisionPosition: es.Vector2 = new es.Vector2(-1, -1);\r\n\r\n    public getwidth() {\r\n        return 1000;\r\n    }\r\n\r\n    public getheight() {\r\n        return 1000;\r\n    }\r\n\r\n    public render(batcher: Batcher, camera: component_camera): void {\r\n        batcher.drawPixel(this._lastPosition, new es.Color(255, 255, 0), 4);\r\n        batcher.end();\r\n\r\n        batcher.drawPixel(this.transform.position, new es.Color(255, 255, 255), 4);\r\n        batcher.end();\r\n\r\n        batcher.drawLine(this._lastPosition, this.transform.position, new es.Color(255, 255, 255), 2);\r\n        batcher.end();\r\n        \r\n        if (this._collisionPosition.x > 0 && this._collisionPosition.y > 0) {\r\n            batcher.drawPixel(this._collisionPosition, new es.Color(255, 0, 0), 10);\r\n            batcher.end();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (Input.leftMouseButtonPressed) {\r\n            this._lastPosition = this.transform.position.clone();\r\n            let pos =  this.entity.scene.findEntity('camera').getComponent(component_camera).mouseToWorldPoint();\r\n            this.transform.position = pos.clone();\r\n            this._collisionPosition = new es.Vector2(-1, -1);\r\n        }\r\n\r\n        if (Input.rightMouseButtonPressed || Input.isKeyPressed(Keys.space)) {\r\n            let hit = es.Physics.linecast(this._lastPosition, this.transform.position);\r\n            if (hit.collider != null) {\r\n                this._collisionPosition = hit.point;\r\n            }\r\n        }\r\n    }\r\n}"]}