{
  "ver": "1.0.25",
  "uuid": "d3577f3e-c07c-4450-9f76-68b6780625de",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main( void ) {\n  float dist = .1;\n  float radius = .2;\n  vec3 col = vec3(0.01, -0.05, 0.05);\n  vec2 centr = 2.0 * (gl_FragCoord.xy * 2.0 - vec2(960.,640.)) /\n    min(vec2(960.,640.).x, vec2(960.,640.).y);\n  for(float i = 0.0; i < 50.0; i++)\n  {\n    float t1 = 1.0 + 0.01 * i;\n    float t2 = 1.0 - 0.01 * i;\n    float si = sin(u_time*t1 + i * dist) / 0.5;\n    float co = cos(u_time*t2 + i * dist) * 0.5;\n    float hue = i * 0.1 + u_time * 0.1;\n    float third = 3.14159 / 1.5;\n    vec3 Color = vec3(0.5 + 0.5 * sin(hue-third), 0.5 + 0.5 * sin(hue), 0.5 + 0.5 * sin(hue+third)) * 2.0 * (1.0+sin(u_time*t1*4.43534));\n    col += Color * 0.0032469 / abs(length(centr + vec2(si , co * si )) - radius);\n  }\n  gl_FragColor = vec4(col, 1.0);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec4 u_Position;\n  float u_Radius;\n  float u_time;\n  float u_Vague;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main( void ) {\n  float dist = .1;\n  float radius = .2;\n  vec3 col = vec3(0.01, -0.05, 0.05);\n  vec2 centr = 2.0 * (gl_FragCoord.xy * 2.0 - vec2(960.,640.)) /\n    min(vec2(960.,640.).x, vec2(960.,640.).y);\n  for(float i = 0.0; i < 50.0; i++)\n  {\n    float t1 = 1.0 + 0.01 * i;\n    float t2 = 1.0 - 0.01 * i;\n    float si = sin(u_time*t1 + i * dist) / 0.5;\n    float co = cos(u_time*t2 + i * dist) * 0.5;\n    float hue = i * 0.1 + u_time * 0.1;\n    float third = 3.14159 / 1.5;\n    vec3 Color = vec3(0.5 + 0.5 * sin(hue-third), 0.5 + 0.5 * sin(hue), 0.5 + 0.5 * sin(hue+third)) * 2.0 * (1.0+sin(u_time*t1*4.43534));\n    col += Color * 0.0032469 / abs(length(centr + vec2(si , co * si )) - radius);\n  }\n  gl_FragColor = vec4(col, 1.0);\n}"
      }
    }
  ],
  "subMetas": {}
}