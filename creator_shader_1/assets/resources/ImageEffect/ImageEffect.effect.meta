{
  "ver": "1.0.25",
  "uuid": "bb4de731-d8a9-493b-8d33-5e726997d394",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n#if USE_TEXTURE\n   v_uv0 = a_uv0;\n#endif\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main() {\n      vec2 uv = vec2(1. - v_uv0.x,v_uv0.y);vec2 st = uv;;\n      vec2 offset1,offset2,offset3,offset4,offset5,offset6,offset7,offset8,offset9;\n      offset1 = vec2(-1.,-1.);\n      offset2 = vec2(0.,-1.);\n      offset3 = vec2(1.,-1.);\n      offset4 = vec2(-1.,0.);\n      offset5 = vec2(0.,0.);\n      offset6 = vec2(1.,0.);\n      offset7 = vec2(-1.,1.);\n      offset8 = vec2(0.,1.);\n      offset9 = vec2(1.,1.);\n      float lightScale = .5;\n      float kernelVal1, kernelVal2, kernelVal3, kernelVal4, kernelVal5, kernelVal6, kernelVal7, kernelVal8, kernelVal9;\n      #if PING_HUA\n      kernelVal1 = 1.;\n      kernelVal2 = 1.;\n      kernelVal3 = 1.;\n      kernelVal4 = 1.;\n      kernelVal5 = 1.;\n      kernelVal6 = 1.;\n      kernelVal7 = 1.;\n      kernelVal8 = 1.;\n      kernelVal9 = 1.;\n      lightScale = 1. / 9.;\n      #elif BIAN_YUAN_JIAN_CE\n      kernelVal1 = 0.;\n      kernelVal2 = 1.;\n      kernelVal3 = 0.;\n      kernelVal4 = 1.;\n      kernelVal5 = -4.;\n      kernelVal6 = 1.;\n      kernelVal7 = 0.;\n      kernelVal8 = 1.;\n      kernelVal9 = 0.;\n      lightScale = 1. * 10.;\n      #elif FU_DIAO\n      kernelVal1 = 2.;\n      kernelVal2 = 0.;\n      kernelVal3 = 2.;\n      kernelVal4 = 0.;\n      kernelVal5 = 0.;\n      kernelVal6 = 0.;\n      kernelVal7 = 3.;\n      kernelVal8 = 0.;\n      kernelVal9 = -6.;\n      lightScale = 1. * 1.;\n      #else\n      kernelVal1 = 1.326;\n      kernelVal2 = 1.774;\n      kernelVal3 = 1.515;\n      kernelVal4 = 2.839;\n      kernelVal5 = 3.694;\n      kernelVal6 = 3.076;\n      kernelVal7 = 3.221;\n      kernelVal8 = 4.141;\n      kernelVal9 = 3.410;\n      lightScale = 1. * .05;\n      #endif\n      vec4 color =\n        texture2D(texture, uv + offset1 / vec2(960.,640.).xy) * kernelVal1 +\n        texture2D(texture, uv + offset2 / vec2(960.,640.).xy) * kernelVal2 +\n        texture2D(texture, uv + offset3 / vec2(960.,640.).xy) * kernelVal3 +\n        texture2D(texture, uv + offset4 / vec2(960.,640.).xy) * kernelVal4 +\n        texture2D(texture, uv + offset5 / vec2(960.,640.).xy) * kernelVal5 +\n        texture2D(texture, uv + offset6 / vec2(960.,640.).xy) * kernelVal6 +\n        texture2D(texture, uv + offset7 / vec2(960.,640.).xy) * kernelVal7 +\n        texture2D(texture, uv + offset8 / vec2(960.,640.).xy) * kernelVal8 +\n        texture2D(texture, uv + offset9 / vec2(960.,640.).xy) * kernelVal9;\n      color *= lightScale;\n      gl_FragColor = vec4(color.xyz,1.);\n   }"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n#if USE_TEXTURE\n   v_uv0 = a_uv0;\n#endif\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec4 u_Position;\n  vec2 u_mouse;\n  float u_Radius;\n  float u_time;\n  float u_Vague;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main() {\n      vec2 uv = vec2(1. - v_uv0.x,v_uv0.y);vec2 st = uv;;\n      vec2 offset1,offset2,offset3,offset4,offset5,offset6,offset7,offset8,offset9;\n      offset1 = vec2(-1.,-1.);\n      offset2 = vec2(0.,-1.);\n      offset3 = vec2(1.,-1.);\n      offset4 = vec2(-1.,0.);\n      offset5 = vec2(0.,0.);\n      offset6 = vec2(1.,0.);\n      offset7 = vec2(-1.,1.);\n      offset8 = vec2(0.,1.);\n      offset9 = vec2(1.,1.);\n      float lightScale = .5;\n      float kernelVal1, kernelVal2, kernelVal3, kernelVal4, kernelVal5, kernelVal6, kernelVal7, kernelVal8, kernelVal9;\n      #if PING_HUA\n      kernelVal1 = 1.;\n      kernelVal2 = 1.;\n      kernelVal3 = 1.;\n      kernelVal4 = 1.;\n      kernelVal5 = 1.;\n      kernelVal6 = 1.;\n      kernelVal7 = 1.;\n      kernelVal8 = 1.;\n      kernelVal9 = 1.;\n      lightScale = 1. / 9.;\n      #elif BIAN_YUAN_JIAN_CE\n      kernelVal1 = 0.;\n      kernelVal2 = 1.;\n      kernelVal3 = 0.;\n      kernelVal4 = 1.;\n      kernelVal5 = -4.;\n      kernelVal6 = 1.;\n      kernelVal7 = 0.;\n      kernelVal8 = 1.;\n      kernelVal9 = 0.;\n      lightScale = 1. * 10.;\n      #elif FU_DIAO\n      kernelVal1 = 2.;\n      kernelVal2 = 0.;\n      kernelVal3 = 2.;\n      kernelVal4 = 0.;\n      kernelVal5 = 0.;\n      kernelVal6 = 0.;\n      kernelVal7 = 3.;\n      kernelVal8 = 0.;\n      kernelVal9 = -6.;\n      lightScale = 1. * 1.;\n      #else\n      kernelVal1 = 1.326;\n      kernelVal2 = 1.774;\n      kernelVal3 = 1.515;\n      kernelVal4 = 2.839;\n      kernelVal5 = 3.694;\n      kernelVal6 = 3.076;\n      kernelVal7 = 3.221;\n      kernelVal8 = 4.141;\n      kernelVal9 = 3.410;\n      lightScale = 1. * .05;\n      #endif\n      vec4 color =\n        texture2D(texture, uv + offset1 / vec2(960.,640.).xy) * kernelVal1 +\n        texture2D(texture, uv + offset2 / vec2(960.,640.).xy) * kernelVal2 +\n        texture2D(texture, uv + offset3 / vec2(960.,640.).xy) * kernelVal3 +\n        texture2D(texture, uv + offset4 / vec2(960.,640.).xy) * kernelVal4 +\n        texture2D(texture, uv + offset5 / vec2(960.,640.).xy) * kernelVal5 +\n        texture2D(texture, uv + offset6 / vec2(960.,640.).xy) * kernelVal6 +\n        texture2D(texture, uv + offset7 / vec2(960.,640.).xy) * kernelVal7 +\n        texture2D(texture, uv + offset8 / vec2(960.,640.).xy) * kernelVal8 +\n        texture2D(texture, uv + offset9 / vec2(960.,640.).xy) * kernelVal9;\n      color *= lightScale;\n      gl_FragColor = vec4(color.xyz,1.);\n   }"
      }
    }
  ],
  "subMetas": {}
}