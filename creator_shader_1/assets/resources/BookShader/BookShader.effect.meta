{
  "ver": "1.0.25",
  "uuid": "8bd05165-d734-4739-8902-67bf34050bb6",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n#if USE_TEXTURE\n   v_uv0 = a_uv0;\n#endif\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main() {\n   vec2 uv = vec2(1. - v_uv0.x,1.-v_uv0.y);;\n   float t = u_time;\n   uv.y += t * 0.25;\n   uv.x *= vec2(960.,640.).x / vec2(960.,640.).y;\n   vec2 aspect = vec2(2.,1.);\n   uv *= 5. * aspect;\n   vec2 gv = fract(uv);\n   gv -= .5;\n   vec2 dropPosOff = vec2(0.,sin(t+sin(t+sin(t)*0.5))*0.45);\n   float drop = smoothstep(.065,.06,length((gv - dropPosOff)/aspect));\n   vec2 dropTrailPos =  vec2(gv.x,fract(gv.y * 8.)/8.-.05);\n   float dropTrail = smoothstep(0.035, 0.03, length(dropTrailPos/aspect));\n   dropTrail *= step(dropTrailPos.y,(gv-dropPosOff).y);\n   dropTrail *= smoothstep(0.5, dropPosOff.y, gv.y);\n   vec3 col = vec3(.0);\n   col += drop;\n   col += dropTrail;\n   if (gv.x > 0.48 || gv.y > 0.49) {\n     col = vec3(1., 0., 0.);\n   }\n   gl_FragColor = vec4(col, 1.0);\n }"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n#if USE_TEXTURE\n   v_uv0 = a_uv0;\n#endif\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec4 u_Position;\n  vec2 u_mouse;\n  float u_Radius;\n  float u_time;\n  float u_Vague;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main() {\n   vec2 uv = vec2(1. - v_uv0.x,1.-v_uv0.y);;\n   float t = u_time;\n   uv.y += t * 0.25;\n   uv.x *= vec2(960.,640.).x / vec2(960.,640.).y;\n   vec2 aspect = vec2(2.,1.);\n   uv *= 5. * aspect;\n   vec2 gv = fract(uv);\n   gv -= .5;\n   vec2 dropPosOff = vec2(0.,sin(t+sin(t+sin(t)*0.5))*0.45);\n   float drop = smoothstep(.065,.06,length((gv - dropPosOff)/aspect));\n   vec2 dropTrailPos =  vec2(gv.x,fract(gv.y * 8.)/8.-.05);\n   float dropTrail = smoothstep(0.035, 0.03, length(dropTrailPos/aspect));\n   dropTrail *= step(dropTrailPos.y,(gv-dropPosOff).y);\n   dropTrail *= smoothstep(0.5, dropPosOff.y, gv.y);\n   vec3 col = vec3(.0);\n   col += drop;\n   col += dropTrail;\n   if (gv.x > 0.48 || gv.y > 0.49) {\n     col = vec3(1., 0., 0.);\n   }\n   gl_FragColor = vec4(col, 1.0);\n }"
      }
    }
  ],
  "subMetas": {}
}