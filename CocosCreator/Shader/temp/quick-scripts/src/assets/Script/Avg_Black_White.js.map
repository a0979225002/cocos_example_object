{"version":3,"sources":["assets\\Script\\Avg_Black_White.js"],"names":["_default_vert","require","_default_vert_no_mvp","_black_white_frag","EffectBlackWhite","cc","Class","Component","properties","isAllChildrenUser","onLoad","_use","_program","GLProgram","sys","isNative","log","initWithString","link","updateUniforms","initWithVertexShaderByteArray","addAttribute","macro","ATTRIBUTE_NAME_POSITION","VERTEX_ATTRIB_POSITION","ATTRIBUTE_NAME_COLOR","VERTEX_ATTRIB_COLOR","ATTRIBUTE_NAME_TEX_COORD","VERTEX_ATTRIB_TEX_COORDS","setProgram","node","_sgNode","program","glProgram_state","GLProgramState","getOrCreateWithGLProgram","setGLProgramState","setShaderProgram","children","i","length","BlackWhite","module","exports"],"mappings":";;;;;;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,qCAAD,CAA3B;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,2CAAD,CAAlC;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,6CAAD,CAA/B;;AAEA,IAAIG,gBAAgB,GAAGC,EAAE,CAACC,KAAH,CAAS;AAC5B,aAASD,EAAE,CAACE,SADgB;AAG5BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,iBAAiB,EAAC;AADV,GAHgB;AAO5BC,EAAAA,MAAM,EAAE,kBAAY;AAChB,SAAKC,IAAL;AACH,GAT2B;AAW5BA,EAAAA,IAAI,EAAE,gBACN;AACI,SAAKC,QAAL,GAAgB,IAAIP,EAAE,CAACQ,SAAP,EAAhB;;AACA,QAAIR,EAAE,CAACS,GAAH,CAAOC,QAAX,EAAqB;AACjBV,MAAAA,EAAE,CAACW,GAAH,CAAO,sBAAP;;AACA,WAAKJ,QAAL,CAAcK,cAAd,CAA6Bf,oBAA7B,EAAmDC,iBAAnD;;AACA,WAAKS,QAAL,CAAcM,IAAd;;AACA,WAAKN,QAAL,CAAcO,cAAd;AACH,KALD,MAKK;AACD,WAAKP,QAAL,CAAcQ,6BAAd,CAA4CpB,aAA5C,EAA2DG,iBAA3D;;AACA,WAAKS,QAAL,CAAcS,YAAd,CAA2BhB,EAAE,CAACiB,KAAH,CAASC,uBAApC,EAA6DlB,EAAE,CAACiB,KAAH,CAASE,sBAAtE;;AACA,WAAKZ,QAAL,CAAcS,YAAd,CAA2BhB,EAAE,CAACiB,KAAH,CAASG,oBAApC,EAA0DpB,EAAE,CAACiB,KAAH,CAASI,mBAAnE;;AACA,WAAKd,QAAL,CAAcS,YAAd,CAA2BhB,EAAE,CAACiB,KAAH,CAASK,wBAApC,EAA8DtB,EAAE,CAACiB,KAAH,CAASM,wBAAvE;;AACA,WAAKhB,QAAL,CAAcM,IAAd;;AACA,WAAKN,QAAL,CAAcO,cAAd;AACH;;AACD,SAAKU,UAAL,CAAiB,KAAKC,IAAL,CAAUC,OAA3B,EAAoC,KAAKnB,QAAzC;AAEH,GA7B2B;AA8B5BiB,EAAAA,UAAU,EAAC,oBAAUC,IAAV,EAAgBE,OAAhB,EAAyB;AAEhC,QAAI3B,EAAE,CAACS,GAAH,CAAOC,QAAX,EAAqB;AACjB,UAAIkB,eAAe,GAAG5B,EAAE,CAAC6B,cAAH,CAAkBC,wBAAlB,CAA2CH,OAA3C,CAAtB;AACAF,MAAAA,IAAI,CAACM,iBAAL,CAAuBH,eAAvB;AACH,KAHD,MAGK;AACDH,MAAAA,IAAI,CAACO,gBAAL,CAAsBL,OAAtB;AACH;;AAED,QAAIM,QAAQ,GAAGR,IAAI,CAACQ,QAApB;AACA,QAAI,CAACA,QAAL,EACI;;AAEJ,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EACA;AACI,WAAKV,UAAL,CAAgBS,QAAQ,CAACC,CAAD,CAAxB,EAA6BP,OAA7B;AACH;AACJ;AA/C2B,CAAT,CAAvB;AAwDA3B,EAAE,CAACoC,UAAH,GAAgBC,MAAM,CAACC,OAAP,GAAiBvC,gBAAjC","sourceRoot":"/","sourcesContent":["var _default_vert = require(\"../Shaders/ccShader_Default_Vert.js\");\r\nvar _default_vert_no_mvp = require(\"../Shaders/ccShader_Default_Vert_noMVP.js\");\r\nvar _black_white_frag = require(\"../Shaders/ccShader_Avg_Black_White_Frag.js\");\r\n\r\nvar EffectBlackWhite = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isAllChildrenUser:false,\r\n    },\r\n\r\n    onLoad: function () {\r\n        this._use();\r\n    },\r\n\r\n    _use: function()\r\n    {\r\n        this._program = new cc.GLProgram();\r\n        if (cc.sys.isNative) {\r\n            cc.log(\"use native GLProgram\")\r\n            this._program.initWithString(_default_vert_no_mvp, _black_white_frag);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }else{\r\n            this._program.initWithVertexShaderByteArray(_default_vert, _black_white_frag);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }\r\n        this.setProgram( this.node._sgNode, this._program );\r\n        \r\n    },\r\n    setProgram:function (node, program) {\r\n\r\n        if (cc.sys.isNative) {\r\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(program);\r\n            node.setGLProgramState(glProgram_state);\r\n        }else{\r\n            node.setShaderProgram(program);    \r\n        }\r\n        \r\n        var children = node.children;\r\n        if (!children)\r\n            return;\r\n    \r\n        for (var i = 0; i < children.length; i++)\r\n        {\r\n            this.setProgram(children[i], program);\r\n        }\r\n    },\r\n\r\n    \r\n});\r\n\r\n\r\n\r\n\r\n\r\ncc.BlackWhite = module.exports = EffectBlackWhite;\r\n\r\n\r\n\r\n"]}