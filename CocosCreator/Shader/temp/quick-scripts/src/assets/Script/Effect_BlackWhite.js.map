{"version":3,"sources":["assets\\Script\\Effect_BlackWhite.js"],"names":["_default_vert","require","_default_vert_no_mvp","_black_white_frag","_normal_frag","EffectBlackWhite","cc","Class","Component","editor","CC_EDITOR","menu","help","executeInEditMode","properties","isAllChildrenUser","_createSgNode","_initSgNode","onEnable","_use","onDisable","_unUse","onLoad","_program","GLProgram","sys","isNative","log","initWithString","link","updateUniforms","initWithVertexShaderByteArray","addAttribute","macro","ATTRIBUTE_NAME_POSITION","VERTEX_ATTRIB_POSITION","ATTRIBUTE_NAME_COLOR","VERTEX_ATTRIB_COLOR","ATTRIBUTE_NAME_TEX_COORD","VERTEX_ATTRIB_TEX_COORDS","setProgram","node","_sgNode","program","glProgram_state","GLProgramState","getOrCreateWithGLProgram","setGLProgramState","setShaderProgram","children","i","length","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var _default_vert = require(\"../Shaders/ccShader_Default_Vert.js\");\r\nvar _default_vert_no_mvp = require(\"../Shaders/ccShader_Default_Vert_noMVP.js\");\r\nvar _black_white_frag = require(\"../Shaders/ccShader_Avg_Black_White_Frag.js\");\r\nvar _normal_frag = require(\"../Shaders/ccShader_Normal_Frag.js\");\r\n\r\nvar EffectBlackWhite = cc.Class({\r\n    extends: cc.Component,\r\n    editor: CC_EDITOR && {\r\n        menu: 'i18n:MAIN_MENU.component.renderers/Effect/BlackWhite',\r\n        help: 'https://github.com/colin3dmax/CocosCreator/blob/master/Shader_docs/Effect_BlackWhite.md',\r\n        executeInEditMode: true,\r\n    },\r\n\r\n    properties: {\r\n        isAllChildrenUser:false,\r\n    },\r\n    \r\n    _createSgNode: function () {\r\n        // this._clippingStencil = new cc.DrawNode();\r\n        // this._clippingStencil.retain();\r\n        // return new cc.ClippingNode(this._clippingStencil);\r\n    },\r\n\r\n    _initSgNode: function () {},\r\n\r\n\r\n    onEnable: function () {\r\n        this._use();\r\n    },\r\n\r\n    onDisable: function () {\r\n        this._unUse();\r\n    },\r\n\r\n    onLoad: function () {\r\n        //this._use();\r\n    },\r\n    _unUse: function()\r\n    {\r\n        this._program = new cc.GLProgram();\r\n        if (cc.sys.isNative) {\r\n            cc.log(\"use native GLProgram\")\r\n            this._program.initWithString(_default_vert_no_mvp, _normal_frag);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }else{\r\n            this._program.initWithVertexShaderByteArray(_default_vert, _normal_frag);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }\r\n        this.setProgram( this.node._sgNode, this._program );\r\n        \r\n    },\r\n\r\n    _use: function()\r\n    {\r\n        this._program = new cc.GLProgram();\r\n        if (cc.sys.isNative) {\r\n            cc.log(\"use native GLProgram\")\r\n            this._program.initWithString(_default_vert_no_mvp, _black_white_frag);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }else{\r\n            this._program.initWithVertexShaderByteArray(_default_vert, _black_white_frag);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }\r\n        this.setProgram( this.node._sgNode, this._program );\r\n        \r\n    },\r\n    setProgram:function (node, program) {\r\n\r\n        if (cc.sys.isNative) {\r\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(program);\r\n            node.setGLProgramState(glProgram_state);\r\n        }else{\r\n            node.setShaderProgram(program);    \r\n        }\r\n        \r\n        var children = node.children;\r\n        if (!children)\r\n            return;\r\n    \r\n        for (var i = 0; i < children.length; i++)\r\n        {\r\n            this.setProgram(children[i], program);\r\n        }\r\n    },\r\n\r\n    \r\n});\r\n\r\ncc.EffectBlackWhite = module.exports = EffectBlackWhite;\r\n\r\n\r\n\r\n"]}