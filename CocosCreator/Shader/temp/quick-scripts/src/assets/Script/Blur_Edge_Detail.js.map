{"version":3,"sources":["assets\\Script\\Blur_Edge_Detail.js"],"names":["_default_vert","require","_default_vert_no_mvp","_blur_edge_detail_frag","cc","Class","Component","properties","onLoad","_use","_program","GLProgram","sys","isNative","log","initWithString","link","updateUniforms","initWithVertexShaderByteArray","addAttribute","macro","ATTRIBUTE_NAME_POSITION","VERTEX_ATTRIB_POSITION","ATTRIBUTE_NAME_COLOR","VERTEX_ATTRIB_COLOR","ATTRIBUTE_NAME_TEX_COORD","VERTEX_ATTRIB_TEX_COORDS","_uniWidthStep","getUniformLocationForName","_uniHeightStep","_uniStrength","glProgram_state","GLProgramState","getOrCreateWithGLProgram","setUniformFloat","node","getContentSize","width","height","setUniformLocationWith1f","setProgram","_sgNode","program","setGLProgramState","setShaderProgram","children","i","length"],"mappings":"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","sourceRoot":"/","sourcesContent":["var _default_vert = require(\"../Shaders/ccShader_Default_Vert.js\");\r\nvar _default_vert_no_mvp = require(\"../Shaders/ccShader_Default_Vert_noMVP.js\");\r\nvar _blur_edge_detail_frag = require(\"../Shaders/ccShader_Blur_Edge_Detail_Frag.js\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n            \r\n    },\r\n\r\n    onLoad: function () {\r\n        this._use();\r\n    },\r\n\r\n    _use: function()\r\n    {\r\n        this._program = new cc.GLProgram();\r\n        if (cc.sys.isNative) {\r\n            cc.log(\"use native GLProgram\")\r\n            this._program.initWithString(_default_vert_no_mvp, _blur_edge_detail_frag);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }else{\r\n            this._program.initWithVertexShaderByteArray(_default_vert, _blur_edge_detail_frag);\r\n\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\r\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\r\n            this._program.link();\r\n            this._program.updateUniforms();\r\n        }\r\n        \r\n        this._uniWidthStep = this._program.getUniformLocationForName( \"widthStep\" );\r\n        this._uniHeightStep = this._program.getUniformLocationForName( \"heightStep\" );\r\n        this._uniStrength = this._program.getUniformLocationForName( \"strength\" );\r\n\r\n        if (cc.sys.isNative) {\r\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(this._program);\r\n            glProgram_state.setUniformFloat( this._uniWidthStep , ( 1.0 / this.node.getContentSize().width ) );\r\n            glProgram_state.setUniformFloat( this._uniHeightStep , ( 1.0 / this.node.getContentSize().height ) );\r\n            glProgram_state.setUniformFloat(  this._uniStrength, 1.0 );\r\n        }else{\r\n            this._program.setUniformLocationWith1f( this._uniWidthStep, ( 1.0 / this.node.getContentSize().width ) );\r\n            this._program.setUniformLocationWith1f( this._uniHeightStep, ( 1.0 / this.node.getContentSize().height ) );\r\n            \r\n            /* 模糊 0.5     */\r\n            /* 模糊 1.0     */\r\n            /* 细节 -2.0    */\r\n            /* 细节 -5.0    */\r\n            /* 细节 -10.0   */\r\n            /* 边缘 2.0     */\r\n            /* 边缘 5.0     */\r\n            /* 边缘 10.0    */\r\n            this._program.setUniformLocationWith1f( this._uniStrength, 1.0 );\r\n        }\r\n        \r\n        this.setProgram( this.node._sgNode, this._program );\r\n    },\r\n    setProgram:function (node, program) {\r\n        if (cc.sys.isNative) {\r\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(program);\r\n            node.setGLProgramState(glProgram_state);\r\n        }else{\r\n            node.setShaderProgram(program);    \r\n        }\r\n        \r\n    \r\n        var children = node.children;\r\n        if (!children)\r\n            return;\r\n    \r\n        for (var i = 0; i < children.length; i++)\r\n            this.setProgram(children[i], program);\r\n    }\r\n\r\n});\r\n"]}