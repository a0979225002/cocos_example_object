{"version":3,"sources":["assets\\Shaders\\ccShader_Effect03_Frag.js"],"names":["module","exports"],"mappings":";;;;;;AAAAA,MAAM,CAACC,OAAP","sourceRoot":"/","sourcesContent":["module.exports =\r\n`\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform float time;\r\nuniform vec2 mouse_touch;\r\nuniform vec2 resolution;\r\n\r\nfloat sphIntersect(vec3 ro, vec3 rd, vec4 sph)\r\n{\r\n    vec3 oc = ro - sph.xyz;\r\n    float b = dot( oc, rd );\r\n    float c = dot( oc, oc ) - sph.w*sph.w;\r\n    float h = b*b - c;\r\n    if( h<0.0 ) return -1.0;\r\n    h = sqrt( h );\r\n    return -b - h;\r\n}\r\n\r\nvoid main()\r\n{\r\n\tvec2 mo = mouse_touch * 2.0 - 1.0;\r\n\tvec3 col = vec3(0.5, 1, 1);\r\n\tfloat aspect = resolution.x / resolution.y;\r\n\r\n\tvec2 uv = (gl_FragCoord.xy / resolution.xy) * 2.0 - 1.0;\r\n\tuv.x *= aspect;\r\n\r\n\tvec3 rdir = normalize(vec3(uv, 3.0));\r\n\tvec3 rpos = vec3(0, 0, -10);\r\n\r\n\tfloat dist = sphIntersect(rpos, rdir, vec4(0, 0, 0, 1.5));\r\n\tif(dist != -1.0){\r\n\t\tvec3 ldir = vec3(mo.x, mo.y, -1.0);\r\n\t\tvec3 snorm = normalize(rpos + rdir * dist);\r\n\t\tcol = vec3(1, 0, 0) * max(dot(snorm, ldir), 0.0);\r\n\t}\r\n\r\n\tcol = pow(col, vec3(0.454545));\r\n\tgl_FragColor = vec4(col, 1.0);\r\n}\r\n\r\n\r\n`\r\n"]}