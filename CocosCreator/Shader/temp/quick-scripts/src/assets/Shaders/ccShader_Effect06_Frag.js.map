{"version":3,"sources":["assets\\Shaders\\ccShader_Effect06_Frag.js"],"names":["module","exports"],"mappings":";;;;;;AAAAA,MAAM,CAACC,OAAP","sourceRoot":"/","sourcesContent":["module.exports =\r\n`\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\n// Pygolampis 2\r\n\r\nuniform float time;\r\nuniform vec2 mouse;\r\nuniform vec2 resolution;\r\n\r\nconst int numBlobs = 128;\r\n\r\nvoid main( void ) {\r\n\r\n\tvec2 p = (gl_FragCoord.xy / resolution.x) - vec2(0.5, 0.5 * (resolution.y / resolution.x));\r\n\r\n\tvec3 c = vec3(0.0);\r\n\tfor (int i=0; i<numBlobs; i++)\r\n\t{\r\n\t\tfloat px = sin(float(i)*0.1 + 0.5) * 0.4;\r\n\t\tfloat py = sin(float(i*i)*0.01 + 0.4*time) * 0.2;\r\n\t\tfloat pz = sin(float(i*i*i)*0.001 + 0.3*time) * 0.3 + 0.4;\r\n\t\tfloat radius = 0.005 / pz;\r\n\t\tvec2 pos = p + vec2(px, py);\r\n\t\tfloat z = radius - length(pos);\r\n\t\tif (z < 0.0) z = 0.0;\r\n\t\tfloat cc = z / radius;\r\n\t\tc += vec3(cc * (sin(float(i*i*i)) * 0.5 + 0.5), cc * (sin(float(i*i*i*i*i)) * 0.5 + 0.5), cc * (sin(float(i*i*i*i)) * 0.5 + 0.5));\r\n\t}\r\n\r\n\tgl_FragColor = vec4(c.x+p.y, c.y+p.y, c.z+p.y, 1.0);\r\n}\r\n\r\n\r\n`"]}