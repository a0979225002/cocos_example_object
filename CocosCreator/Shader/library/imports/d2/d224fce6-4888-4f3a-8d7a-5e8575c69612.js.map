{"version":3,"sources":["assets\\Shaders\\ccShader_Glass_Frag.js"],"names":["module","exports"],"mappings":";;;;;;AAAA;;AACA;;AACA;AAEAA,MAAM,CAACC,OAAP","sourceRoot":"/","sourcesContent":["/* 磨砂玻璃 1.0 */\r\n/* 磨砂玻璃 3.0 */\r\n/* 磨砂玻璃 6.0 */\r\n\r\nmodule.exports =\r\n`\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nvarying vec2 v_texCoord;\r\nuniform float widthStep;\r\nuniform float heightStep;\r\nuniform float blurRadiusScale;\r\nconst float blurRadius = 6.0;\r\nconst float blurPixels = (blurRadius * 2.0 + 1.0) * (blurRadius * 2.0 + 1.0);\r\nfloat random(vec3 scale, float seed) {\r\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\r\n}\r\nvoid main()\r\n{\r\n    vec3 sumColor = vec3(0.0, 0.0, 0.0);  \r\n    for(float fy = -blurRadius; fy <= blurRadius; ++fy)\r\n    {\r\n        float dir = random(vec3(12.9898, 78.233, 151.7182), 0.0);\r\n        for(float fx = -blurRadius; fx <= blurRadius; ++fx)\r\n        {\r\n            float dis = distance(vec2(fx * widthStep, fy * heightStep), vec2(0.0, 0.0)) * blurRadiusScale;\r\n            vec2 coord = vec2(dis * cos(dir), dis * sin(dir));\r\n            sumColor += texture2D(CC_Texture0, v_texCoord + coord).rgb;\r\n        }\r\n    }\r\n    gl_FragColor = vec4(sumColor / blurPixels, 1.0);\r\n}\r\n`"]}