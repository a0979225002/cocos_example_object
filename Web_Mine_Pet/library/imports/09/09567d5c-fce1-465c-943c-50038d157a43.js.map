{"version":3,"sources":["assets\\script\\manager\\UIMng.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UIBase, { UIClass } from \"../controllers/ui/UIBase\";\r\nimport {ViewZorder} from \"../data/const/ViewZorder\";\r\nexport default class UIMng {\r\n\r\n    private static instance: UIMng;\r\n    private uiList: UIBase[] = [];\r\n\r\n    public static getInstance(): UIMng {\r\n        if (this.instance == null) {\r\n            this.instance = new UIMng();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public openUI<T extends UIBase>(uiClass: UIClass<T>, zOrder: number = ViewZorder.UI, callback?: Function, onProgress?: Function, ...args: any[]) {\r\n\r\n        if (this.getUI(uiClass)) {\r\n            return;\r\n        }\r\n\r\n        cc.loader.loadRes(uiClass.getUrl(), (completedCount: number, totalCount: number, item: any) => {\r\n            onProgress && onProgress(completedCount, totalCount, item);\r\n        }, (error, prefab) => {\r\n\r\n            if (error) {\r\n                return;\r\n            }\r\n\r\n            if (this.getUI(uiClass)) {\r\n                return;\r\n            }\r\n\r\n            let uiNode: cc.Node = cc.instantiate(prefab);\r\n            let ui = uiNode.getComponent(uiClass) as UIBase;\r\n\r\n            if (!ui) {\r\n                return;\r\n            }\r\n\r\n            ui.init(args);\r\n\r\n            let uiRoot = cc.director.getScene();\r\n\r\n            if (!uiRoot) {\r\n                return;\r\n            }\r\n\r\n            uiNode.parent = uiRoot;\r\n            uiNode.zIndex = zOrder;\r\n            this.uiList.push(ui);\r\n            ui.tag = uiClass;\r\n\r\n            callback && callback(ui);\r\n\r\n        });\r\n    }\r\n\r\n    public showUI<T extends UIBase>(uiClass: UIClass<T>, callback?: Function) {\r\n\r\n        let ui = this.getUI(uiClass);\r\n\r\n        if (!ui) {\r\n            console.error(`UIMng showUI: ui ${uiClass.getName()} not exist`);\r\n            return;\r\n        }\r\n\r\n        if (ui[`show`]) {\r\n            ui[`show`]();\r\n        } else {\r\n            ui.node.active = true;\r\n        }\r\n\r\n    }\r\n\r\n    public hideUI<T extends UIBase>(uiClass: UIClass<T>) {\r\n        let ui = this.getUI(uiClass);\r\n        if (ui[`hide`]) {\r\n            ui[`hide`]();\r\n        } else {\r\n            ui.node.active = false;\r\n        }\r\n    }\r\n\r\n    public resizeUI<T extends UIBase>(uiClass: UIClass<T>) {\r\n        let ui = this.getUI(uiClass);\r\n        if (ui && ui[`resize`]) {\r\n            ui[`resize`]();\r\n        }\r\n    }\r\n\r\n\r\n    public closeUI<T extends UIBase>(uiClass: UIClass<T>) {\r\n        for (let i = 0; i < this.uiList.length; ++i) {\r\n            if (this.uiList[i].tag === uiClass) {\r\n                if (cc.isValid(this.uiList[i].node)) {\r\n                    this.uiList[i].node.destroy();\r\n                    this.clearDependsRes(uiClass.getUrl());\r\n                }\r\n                this.uiList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getUI<T extends UIBase>(uiClass: UIClass<T>): UIBase {\r\n\r\n        for (let i = 0; i < this.uiList.length; ++i) {\r\n            if (this.uiList[i].tag === uiClass) {\r\n                return this.uiList[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    private clearDependsRes(prefabUrl) {\r\n        let deps = cc.loader.getDependsRecursively(prefabUrl);\r\n        deps.forEach((item) => {\r\n            if (item.indexOf('common') === -1) {\r\n                cc.loader.release(item);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n"]}