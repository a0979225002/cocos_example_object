{"version":3,"sources":["assets\\script\\controllers\\mine\\mng\\MineSlider.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameCenter from \"../../../data/GameCenter\";\r\nimport LangMng from \"../../../manager/LangMng\";\r\nimport AssetsMng from \"../../../manager/AssetsMng\";\r\nimport EventMng from \"../../../manager/EventMng\";\r\nimport { MineSelectItem } from \"./MineSelectItem\";\r\nimport { ActionTransition } from \"../../../common/ActionTransition\";\r\nimport { MainEvent } from \"../../../data/const/EventConst\";\r\n\r\nexport class MineSlider {\r\n\r\n    ui: any = null;\r\n    items: MineSelectItem[] = [];\r\n    type: number;\r\n    state: number = 0;\r\n    pageWidth: number = 300;\r\n    itemOffsetY: number = 150;\r\n    layoutX: number = -333;\r\n    cubeSizeProp: number = 0;\r\n\r\n    referenceMode: boolean = false;\r\n    sliderPageCallBack = null;\r\n\r\n    private _prePageIndex: number = -1;\r\n    private _currentPageIndex: number = 1;\r\n\r\n    constructor(ui, type: number, config?) {\r\n\r\n        this.ui = ui;\r\n        this.type = type;\r\n\r\n        this._currentPageIndex = this.type == 0 ? GameCenter.game.mineSelectID : GameCenter.game.partnerSelectID;\r\n\r\n        this.updateGameCenterData();\r\n        this.updateChooseTip();\r\n\r\n        if (!config) {\r\n            return;\r\n        }\r\n\r\n        if (config.referenceMode) {\r\n            this.referenceMode = config.referenceMode;\r\n        }\r\n\r\n        if (config.sliderPageCallBack) {\r\n            this.sliderPageCallBack = config.sliderPageCallBack;\r\n        }\r\n\r\n    }\r\n\r\n    init(): void {\r\n        this.cubeSizeProp = this.pageWidth / this.itemOffsetY;\r\n        this.updateChooseTip();\r\n    }\r\n\r\n\r\n    show(): void {\r\n        this.ui.page_view.node.on(\"scrolling\", this.onSliderScrolling, this);\r\n        this.ui.page_view.node.on(\"page-turning\", this.onPageTurning, this);\r\n        this.updateChooseTip();\r\n        this.updateBtnDisplayState();\r\n    }\r\n\r\n\r\n    hide(): void {\r\n        this.ui.page_view.node.off(\"scrolling\", this.onSliderScrolling, this);\r\n        this.ui.page_view.node.off(\"page-turning\", this.onPageTurning, this);\r\n    }\r\n\r\n\r\n    createSliderList(floorAsset, bodyAsset): void {\r\n\r\n        let state = this.getSliderState();\r\n\r\n\r\n        if (state == 0) {\r\n\r\n            let node = this.ui.node_item_main.children[0];\r\n            this.items[0] = new MineSelectItem(node,0, 0);\r\n            this.items[0].play(\"ACTION\");\r\n\r\n            if (this.ui.label_intro_title) {\r\n                this.ui.label_intro_title.string = \"\";\r\n            }\r\n\r\n            if (this.ui.label_intro_con) {\r\n                let txtCode = this.type == 0 ? \"T_002\" : \"T_001\";\r\n                this.ui.label_intro_con.string = `\\n${LangMng.getTxt(txtCode)}`;\r\n            }\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        const itemPrefab = AssetsMng.getAssets(\"cube_item\");\r\n\r\n        let sliderData = this.getListDate();\r\n        for (let i = 0; i < sliderData.length; i++) {\r\n            let sceneNode = this.ui.node_item_main.children[i];\r\n            let node = sceneNode ? sceneNode : cc.instantiate(itemPrefab);\r\n            let itemID = sliderData[i];\r\n            let floorName = itemID > 0 ? floorAsset[i] : \"empty\";\r\n            let bodyAssets = itemID > 0 ? AssetsMng.getAssets(`${bodyAsset[i]}.spine`): null;\r\n            this.ui.page_view.addPage(node);\r\n            this.items[i] = new MineSelectItem(node, this.type, itemID, GameCenter.game.mineLevel[i], {\r\n                floorName: floorName,\r\n                bodyAssets: bodyAssets,\r\n            });\r\n        }\r\n\r\n        this.layoutActive(false);\r\n        this.ui.page_view.setCurrentPageIndex(this._currentPageIndex);\r\n        this.updateItemIndex();\r\n        this.onPageTurning();\r\n\r\n    }\r\n\r\n    updateCurrentPage(): void {\r\n        this._prePageIndex = this._currentPageIndex;\r\n        this._currentPageIndex = this.ui.page_view.getCurrentPageIndex();\r\n        this.updateGameCenterData();\r\n    }\r\n\r\n    updateChooseTip(): void {\r\n\r\n        let state = this.type == 0 ? GameCenter.game.hasPartner() : GameCenter.game.hasMine();\r\n        let data = this.type == 0 ? GameCenter.cfgPartner[GameCenter.game.partnerSelectID] : GameCenter.cfgMine[GameCenter.game.mineSelectID];\r\n        let str = data.name;\r\n\r\n        if (state) {\r\n\r\n            this.ui.sprite_choose_tip_img.spriteFrame = this.getChooseTipImg();\r\n            this.ui.node_choose_tip_img.active = true;\r\n            this.ui.node_choose_state.active = true;\r\n            this.ui.label_choose_tip_title.string = str;\r\n            this.ui.node_choose_tip_bg.color = new cc.Color(data.bgColor.r, data.bgColor.g, data.bgColor.b);\r\n            this.ui.node_choose_tip_bg.opacity = 255;\r\n\r\n        } else {\r\n            this.ui.node_choose_tip_img.active = false;\r\n            this.ui.node_choose_state.active = false;\r\n            this.ui.label_choose_tip_title.string = `${LangMng.getTxt(\"T_005\")}`;\r\n            this.ui.node_choose_tip_bg.color = new cc.Color(0, 0, 0);\r\n            this.ui.node_choose_tip_bg.opacity = 110;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getChooseTipImg(): cc.SpriteFrame {\r\n\r\n        let img = null;\r\n\r\n        switch (this.type) {\r\n            case 0:\r\n                img = GameCenter.getCurrentPartnerChooseIcon();\r\n                break;\r\n            case 1:\r\n                img = GameCenter.getCurrentPetChooseIcon();\r\n                break;\r\n        }\r\n\r\n        return img;\r\n\r\n    }\r\n\r\n    updateItemIndex(): void {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].node.zIndex = this.items.length - i;\r\n        }\r\n    }\r\n\r\n    updateItemSpinePos(): void {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n            let itemX = 0;\r\n            let itemY = (i - this._currentPageIndex) * this.itemOffsetY;\r\n            item.setSpineNodePosition(new cc.Vec2(itemX, itemY));\r\n        }\r\n    }\r\n\r\n    updateItemAni(): void {\r\n\r\n        if (this._prePageIndex >= 0 && this.items[this._prePageIndex]) {\r\n            this.items[this._prePageIndex].play(\"IDLE\");\r\n        }\r\n\r\n        if (this.items[this._currentPageIndex]) {\r\n            this.items[this._currentPageIndex].play(\"ACTION\");\r\n        }\r\n\r\n    }\r\n\r\n    updateItemIntro(): void {\r\n\r\n        if (!this.ui.node_intro_txt_group) {\r\n            return;\r\n        }\r\n\r\n        let listCfgData = this.getCfgData();\r\n        let data = listCfgData[this.items[this._currentPageIndex].id];\r\n\r\n        if (this.ui.label_intro_title.string == data.name) {\r\n            return;\r\n        }\r\n\r\n        this.ui.node_intro_txt_group.stopAllActions();\r\n        this.ui.node_intro_txt_group.runAction(cc.sequence(\r\n            cc.fadeOut(.1),\r\n            cc.callFunc(() => {\r\n                this.ui.label_intro_title.string = data.name;\r\n                this.ui.label_intro_con.string = `\\n${data.intro}`;\r\n                if (this.type == 0) {\r\n                    if (GameCenter.game.mineList[this.currentPageIndex] != 0) {\r\n                        let itemLevel = GameCenter.game.mineLevel[this.currentPageIndex];\r\n                        this.ui.label_intro_title.string += ` (${LangMng.getTxt(\"T_006\")}${itemLevel})`;\r\n                    }\r\n                }\r\n            }),\r\n            cc.delayTime(.1),\r\n            cc.fadeIn(.15).easing(cc.easeSineOut())\r\n        ));\r\n\r\n    }\r\n\r\n\r\n    updateLevel(): void {\r\n        let listCfgData = this.getCfgData();\r\n        if (!this.items[this._currentPageIndex]) { return; }\r\n        let data = listCfgData[this.items[this._currentPageIndex].id];\r\n        this.ui.label_intro_title.string = data.name;\r\n        if (this.type == 0) {\r\n            if (GameCenter.game.mineList[this.currentPageIndex] != 0) {\r\n                let itemLevel = GameCenter.game.mineLevel[this.currentPageIndex];\r\n                this.ui.label_intro_title.string += ` (${LangMng.getTxt(\"T_006\")}${itemLevel})`;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGameCenterData(): void {\r\n\r\n        if (this.referenceMode) {\r\n            return;\r\n        }\r\n\r\n        if (this.type == 0) {\r\n            GameCenter.game.mineSelectID = this._currentPageIndex;\r\n        } else if (this.type == 1) {\r\n            GameCenter.game.partnerSelectID = this._currentPageIndex;\r\n        }\r\n\r\n    }\r\n\r\n    getCfgData(): void {\r\n\r\n        let data = null;\r\n\r\n        switch (this.type) {\r\n            case 0:\r\n                data = GameCenter.cfgMine;\r\n                break;\r\n            case 1:\r\n                data = GameCenter.cfgPartner;\r\n                break;\r\n        }\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    onPageTurning(): void {\r\n\r\n        this.updateCurrentPage();\r\n        this.updateItemAni();\r\n        this.updateItemSpinePos();\r\n        this.updateItemIntro();\r\n        this.updateBtnDisplayState();\r\n\r\n        if (this.sliderPageCallBack) {\r\n            this.sliderPageCallBack();\r\n        }\r\n\r\n    }\r\n\r\n    updateBtnDisplayState(): void {\r\n        if (GameCenter.game.canGo) {\r\n            if (this.ui.node_btn_go_active) {\r\n                this.ui.node_btn_go_active.active = true;\r\n                this.ui.node_btn_go_normal.active = false;\r\n            }\r\n        } else {\r\n            if (this.ui.node_btn_go_active) {\r\n                this.ui.node_btn_go_active.active = false;\r\n                this.ui.node_btn_go_normal.active = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSliderPage(e): void {\r\n        let nodeName = e.currentTarget.name;\r\n        let goToPageIndex = nodeName == \"arrow_right\" ? this._currentPageIndex + 1 : this._currentPageIndex - 1;\r\n        this.ui.page_view.scrollToPage(goToPageIndex, .3);\r\n    }\r\n\r\n    getSliderState(): number {\r\n\r\n        let list = this.getListDate();\r\n\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i] == 1) {\r\n                this.state = 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this.state;\r\n    }\r\n\r\n    getListDate(): number[] {\r\n\r\n        let data = null;\r\n\r\n        switch (this.type) {\r\n            case 0:\r\n                data = GameCenter.game.mineList;\r\n                break;\r\n            case 1:\r\n                data = GameCenter.game.partnerList;\r\n                break;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    layoutActive(state: boolean = true): void {\r\n        this.ui.layout.updateLayout();\r\n        this.ui.layout.enabled = state;\r\n    }\r\n\r\n    arrowBtnsBindOn(): void {\r\n        this.ui.btn_slider_arrow_left.on('touchend', this.onArrowLeftClick, this);\r\n        this.ui.btn_slider_arrow_right.on('touchend', this.onArrowRightClick, this);\r\n    }\r\n\r\n    arrowBtnsBindOff(): void {\r\n        this.ui.btn_slider_arrow_left.off('touchend', this.onArrowLeftClick, this);\r\n        this.ui.btn_slider_arrow_right.off('touchend', this.onArrowRightClick, this);\r\n    }\r\n\r\n    onSliderScrolling(): void {\r\n        let layoutPos = this.ui.layout.node.getPosition();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let dx = Math.abs(layoutPos.x) - Math.abs(this.layoutX) - (i * this.pageWidth);\r\n            let cubeY = dx / this.cubeSizeProp;\r\n            this.items[i].setSpineNodePosition(new cc.Vec2(0, -cubeY));\r\n        }\r\n    }\r\n\r\n    onArrowLeftClick(e): void {\r\n        this.updateSliderPage(e);\r\n    }\r\n\r\n    onArrowRightClick(e): void {\r\n        this.updateSliderPage(e);\r\n    }\r\n\r\n    onBtnGoClick(): void {\r\n\r\n        if (!GameCenter.game.canGo) {\r\n\r\n            let txt = null;\r\n\r\n            if (!GameCenter.game.hasMine()) {\r\n                txt = LangMng.getTxt(\"T_003\");\r\n            } else if (!GameCenter.game.hasPartner()) {\r\n                txt = LangMng.getTxt(\"T_004\");\r\n            }\r\n\r\n            EventMng.emit(MainEvent.MESSAGE_SHOW, {\r\n                type: 2,\r\n                content: LangMng.getTxt(`${txt}`),\r\n                autoClose: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        ActionTransition.btnBounce(this.ui.btn_go, () => {\r\n\r\n            EventMng.emit(MainEvent.MINE_CHANGE_REQ);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    set prePageIndex(value: number) {\r\n        this._prePageIndex = value;\r\n    }\r\n\r\n    get prePageIndex(): number {\r\n        return this._prePageIndex;\r\n    }\r\n\r\n    set currentPageIndex(value: number) {\r\n        this._currentPageIndex = value;\r\n    }\r\n\r\n    get currentPageIndex(): number {\r\n        return this._currentPageIndex;\r\n    }\r\n\r\n}"]}