{"version":3,"sources":["assets\\script\\manager\\MusicMng.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameCenter from \"../data/GameCenter\";\r\n\r\nclass MusicMng {\r\n\r\n    private _data = {};\r\n    private _musicID = null;\r\n    private _volMusic;\r\n    private _volEffect;\r\n\r\n    init(): void {\r\n\r\n        this._volMusic = GameCenter.system.music_vol;\r\n        this._volEffect = GameCenter.system.effect_vol;\r\n\r\n        this.musicVolSet();\r\n        this.effectVolSet();\r\n\r\n    }\r\n\r\n    preLoad(callBack?: Function): void {\r\n        this.audioLoad(\"music/preload\", callBack);\r\n    }\r\n\r\n    load(callBack?: Function): void {\r\n        this.audioLoad(\"music/main\", callBack);\r\n    }\r\n\r\n    audioLoad(path: string, callBack?: Function): void {\r\n        cc.loader.loadResDir(path, cc.AudioClip, (err, Clip) => {\r\n            for (let key in Clip) {\r\n                this._data[Clip[key]._name] = Clip[key];\r\n            }\r\n            if (callBack) callBack();\r\n        });\r\n    }\r\n\r\n\r\n    switchMusic(): boolean {\r\n        GameCenter.system.is_open_music = !GameCenter.system.is_open_music;\r\n        this.musicVolSet();\r\n        return GameCenter.system.is_open_music;\r\n    }\r\n\r\n    musicPlay(musicName: string, playLoop = true): number {\r\n        this.musicStop();\r\n        this._musicID = cc.audioEngine.playMusic(this._data[musicName], playLoop);\r\n        return this._musicID;\r\n    }\r\n\r\n    musicStop(): void {\r\n        cc.audioEngine.stopMusic();\r\n    }\r\n\r\n    musicVolSet(vol?: number): void {\r\n\r\n        if (vol) {\r\n            this._volMusic = vol;\r\n        }\r\n\r\n        cc.audioEngine.setMusicVolume(this.getMusicState()? this._volMusic : 0);\r\n\r\n    }\r\n\r\n    getMusicState(): boolean {\r\n        return GameCenter.system.is_open_music;\r\n    }\r\n\r\n    switchEffect(): boolean {\r\n        GameCenter.system.is_open_sound = ! GameCenter.system.is_open_sound;\r\n        this.effectVolSet();\r\n        return GameCenter.system.is_open_sound;\r\n    }\r\n\r\n    effectPlay(effectName: string, playLoop: boolean = false): number {\r\n        if(!GameCenter.system.is_open_sound) return;\r\n        return cc.audioEngine.playEffect(this._data[effectName], playLoop);\r\n    }\r\n\r\n    effectStop(effectID: number): void {\r\n        cc.audioEngine.stop(effectID);\r\n    }\r\n\r\n    effectVolSet(): void {\r\n        cc.audioEngine.setEffectsVolume(GameCenter.system.is_open_sound ? this._volEffect : 0);\r\n    }\r\n\r\n    getEffectState(): boolean {\r\n        return GameCenter.system.is_open_sound;\r\n    }\r\n\r\n    btnClick(): void {\r\n        this.effectPlay(\"button_01\");\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default new MusicMng();"]}