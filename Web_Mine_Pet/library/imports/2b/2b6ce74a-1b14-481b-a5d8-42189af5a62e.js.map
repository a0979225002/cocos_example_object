{"version":3,"sources":["assets\\script\\controllers\\ui\\UIBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import EventMng from \"../../manager/EventMng\";\r\n\r\nexport interface UIClass<T extends UIBase> {\r\n    new(): T;\r\n    getUrl(): string;\r\n    getName(): string;\r\n}\r\n\r\ninterface RegisterEvent {\r\n    callback: Function,\r\n    target?: any,\r\n}\r\n\r\nconst PREFAB_UI_DIR = 'prefab/';\r\nconst { ccclass } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIBase extends cc.Component {\r\n\r\n    protected static prefabUrl;\r\n    protected static className;\r\n\r\n    protected mTag: any;\r\n    public get tag(): any {\r\n        return this.mTag;\r\n    }\r\n    public set tag(value: any) {\r\n        this.mTag = value;\r\n    }\r\n\r\n    private _notifyEventList: Map<string, Function>;\r\n    private _registerEventList: Map<string, RegisterEvent>;\r\n\r\n    public static getUrl(): string {\r\n        return PREFAB_UI_DIR + this.prefabUrl;\r\n    }\r\n\r\n    public static getName(): string {\r\n        return this.className;\r\n    }\r\n\r\n    init(params) {\r\n        this.onInit(params);\r\n    }\r\n\r\n    onLoad() {\r\n        this._notifyEventList = new Map<string, Function>();\r\n        this._registerEventList = new Map<string, RegisterEvent>();\r\n        this.onUILoad();\r\n    }\r\n\r\n    start() {\r\n        this.onStart();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.onUIDestroy();\r\n    }\r\n\r\n    onEnable() {\r\n        this.onRegisterEvent(this.node, this.touchEvent, this);\r\n        this.onShow();\r\n    }\r\n\r\n    onDisable() {\r\n\r\n        this.unRegisterEvent(this.node, this.touchEvent, this);\r\n\r\n        this.onHide();\r\n\r\n        let self = this;\r\n\r\n        this._notifyEventList.forEach((f, key) => {\r\n            EventMng.off(key, f, self);\r\n        }, this);\r\n\r\n        this._notifyEventList.clear();\r\n\r\n    }\r\n\r\n    initEvent(eventName: string, callback: Function) {\r\n        EventMng.on(eventName, callback, this);\r\n        this._notifyEventList.set(eventName, callback);\r\n    }\r\n\r\n    touchEvent(event) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onRegisterEvent(node: cc.Node, callback, target = null) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n        node.on(cc.Node.EventType.TOUCH_END, callback, target);\r\n        this._registerEventList.set(node.name, {callback: callback, target: target});\r\n    }\r\n\r\n    unRegisterEvent(node: cc.Node, callback, target = null) {\r\n        node.off(cc.Node.EventType.TOUCH_END, callback, target);\r\n    }\r\n\r\n    getCanvas() {\r\n        const node = cc.find(\"Canvas\");\r\n        return cc.v2(node.x, node.y);\r\n    }\r\n\r\n    onInit(params) { }\r\n    onUILoad() { }\r\n    onUIDestroy() { }\r\n    onStart() { }\r\n    onShow() { }\r\n    onHide() { }\r\n\r\n}"]}