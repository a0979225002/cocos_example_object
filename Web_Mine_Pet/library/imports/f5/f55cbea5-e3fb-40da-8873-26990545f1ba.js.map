{"version":3,"sources":["assets\\script\\manager\\LangMng.ts"],"names":[],"mappings":";;;;;;AAAA,iDAA4C;AAE5C;IAAA;QAEY,UAAK,GAAG,IAAI,CAAC;IAezB,CAAC;IAbG,sBAAI,GAAJ;QAEI,IAAI,QAAQ,GAAG,oBAAU,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IAEnC,CAAC;IAED,wBAAM,GAAN,UAAO,IAAY;QACf,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;QACxB,IAAI,IAAI,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC9D,CAAC;IAEL,cAAC;AAAD,CAjBA,AAiBC,IAAA;AAED,kBAAe,IAAI,OAAO,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import GameCenter from \"../data/GameCenter\";\r\n\r\nclass LangMng {\r\n\r\n    private _data = null;\r\n\r\n    init(): void {\r\n\r\n        let langMode = GameCenter.system.language;\r\n        this._data = require(langMode);\r\n\r\n    }\r\n\r\n    getTxt(code: string): string {\r\n        if (!this._data) return;\r\n        if (code == null) return code;\r\n        return this._data[code] == null ? code : this._data[code];\r\n    }\r\n\r\n}\r\n\r\nexport default new LangMng();"]}