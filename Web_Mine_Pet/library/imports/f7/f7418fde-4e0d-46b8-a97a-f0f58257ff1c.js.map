{"version":3,"sources":["assets\\script\\controllers\\ui\\UILoading.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAA8B;AAEtB,IAAA,OAAO,GAAK,EAAE,CAAC,UAAU,QAAlB,CAAmB;AAGlC;IAAuC,6BAAM;IAA7C;;IAyEA,CAAC;IAnEG,0BAAM,GAAN;QACI,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,4BAAQ,GAAR;QAEI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,wBAAI,GAAJ;QAEI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAClB,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,wBAAI,GAAJ,UAAK,KAAqB;QAArB,sBAAA,EAAA,YAAqB;QAEtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACnB,OAAO;SACV;QAED,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAE7B,CAAC;IAGD,0BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAC3B,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EACb,EAAE,CAAC,QAAQ,CAAC;QACZ,CAAC,CAAC,CACL,CAAC,CAAC;IACP,CAAC;IAGD,2BAAO,GAAP;QAAA,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAC3B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAChB,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EACf,EAAE,CAAC,QAAQ,CAAC;YACR,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CACL,CAAC,CAAC;IACP,CAAC;IAGD,0BAAM,GAAN;IAEA,CAAC;IAED,0BAAM,GAAN;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IArEgB,mBAAS,GAAG,oBAAoB,CAAC;IACjC,mBAAS,GAAG,WAAW,CAAC;IAHxB,SAAS;QAD7B,OAAO;OACa,SAAS,CAyE7B;IAAD,gBAAC;CAzED,AAyEC,CAzEsC,gBAAM,GAyE5C;kBAzEoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import UIBase from \"./UIBase\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UILoading extends UIBase {\r\n\r\n    protected static prefabUrl = \"loading_full_plane\";\r\n    protected static className = \"UILoading\";\r\n\r\n\r\n    onInit() {\r\n        cc.game.addPersistRootNode(this.node);\r\n    }\r\n\r\n    onUILoad() {\r\n\r\n        this.resize();\r\n    }\r\n\r\n    show(): void {\r\n\r\n        if (this.node.active) {\r\n            return;\r\n        }\r\n\r\n        this.node.active = true;\r\n        this.setTxt();\r\n        this.fadeIn();\r\n    }\r\n\r\n    hide(isAni: boolean = true) {\r\n\r\n        if (!this.node.active) {\r\n            return;\r\n        }\r\n\r\n        if (isAni) {\r\n            this.fadeOut();\r\n            return;\r\n        }\r\n\r\n        this.node.active = false;\r\n\r\n    }\r\n\r\n\r\n    fadeIn(): void {\r\n        this.node.opacity = 0;\r\n        this.node.stopAllActions();\r\n        this.node.runAction(cc.sequence(\r\n            cc.fadeIn(.1),\r\n            cc.callFunc(() => {\r\n            })\r\n        ));\r\n    }\r\n\r\n\r\n    fadeOut(): void {\r\n        this.node.runAction(cc.sequence(\r\n            cc.delayTime(.2),\r\n            cc.fadeOut(.16),\r\n            cc.callFunc(() => {\r\n                this.node.active = false;\r\n            })\r\n        ));\r\n    }\r\n\r\n\r\n    setTxt(): void {\r\n\r\n    }\r\n\r\n    resize(): void {\r\n        const pos = this.getCanvas();\r\n        this.node.setPosition(pos.x, pos.y);\r\n    }\r\n\r\n}\r\n"]}