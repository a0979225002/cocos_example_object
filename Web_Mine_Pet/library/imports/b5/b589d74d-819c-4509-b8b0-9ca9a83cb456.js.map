{"version":3,"sources":["assets\\script\\controllers\\mine\\collect\\ParticleCoin.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UIBase from \"../../ui/UIBase\";\r\nimport AssetsMng from \"../../../manager/AssetsMng\";\r\n\r\nconst {ccclass} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ParticleCoin extends UIBase {\r\n\r\n    node_coin_container: cc.Node;\r\n    node_icon_gold: cc.Node;\r\n    node_icon_sliver: cc.Node;\r\n\r\n    goldCoinPrefab: cc.Prefab;\r\n    sliverCoinPrefab: cc.Prefab;\r\n\r\n    centerPos: cc.Vec2 = cc.v2(0, 0);\r\n\r\n    sprayRange: number = 270;\r\n    sprayRangeMin: number = 60;\r\n    scaleVal: number = .6;\r\n\r\n    _callBack;\r\n\r\n    onUILoad(): void {\r\n\r\n        this.node_coin_container = this.node.getChildByName(\"container\");\r\n        this.node_icon_gold = this.node.getChildByName(\"icon_gold\");\r\n        this.node_icon_sliver = this.node.getChildByName(\"icon_sliver\");\r\n\r\n        this.goldCoinPrefab = AssetsMng.getAssets(\"coin_gold_prefab\");\r\n        this.sliverCoinPrefab = AssetsMng.getAssets(\"coin_sliver_prefab\");\r\n\r\n    }\r\n\r\n    createCoins(centerPoint: cc.Vec2, goldCount: number, sliverCount: number, callBack?): void {\r\n\r\n        this.centerPos = centerPoint;\r\n\r\n\r\n        this.createCoinNode(1, goldCount);\r\n        this.createCoinNode(0, sliverCount);\r\n\r\n        const timer = setTimeout(() => {\r\n            if (callBack) callBack()\r\n            clearTimeout(timer);\r\n        }, 1000);\r\n\r\n\r\n    }\r\n\r\n    createCoinNode(type: number, count: number): void {\r\n\r\n        for (let i = 0; i < count; i++) {\r\n\r\n            let prefab = type == 0 ? this.sliverCoinPrefab : this.goldCoinPrefab;\r\n\r\n            let coinNode = cc.instantiate(prefab);\r\n\r\n            let targetPos = this.getExplosionTargetPos();\r\n\r\n            coinNode.angle = Math.random() * 360;\r\n            coinNode.setPosition(this.centerPos);\r\n            coinNode.setScale(this.scaleVal);\r\n\r\n            this.node_coin_container.addChild(coinNode);\r\n\r\n\r\n            this.explosionAniPlay(coinNode, targetPos, type);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    coinIconJump(node): void {\r\n\r\n        node.runAction(cc.sequence(\r\n            cc.scaleTo(.08, 1.3).easing(cc.easeSineOut()),\r\n            cc.scaleTo(.06, 1),\r\n        ));\r\n    }\r\n\r\n    explosionAniPlay(node: cc.Node, targetPos: cc.Vec2, type: number): void {\r\n\r\n        let walletPos = type == 0 ? this.node_icon_sliver.position : this.node_icon_gold.position;\r\n        let ani = node.children[0].getComponent(cc.Animation);\r\n        let x = targetPos.x + node.x;\r\n        let y = targetPos.y + node.y;\r\n        ani.play();\r\n\r\n        node.runAction(cc.sequence(\r\n            cc.moveTo(.3, x, y).easing(cc.easeCubicActionOut()),\r\n            cc.delayTime(Math.random()),\r\n            cc.callFunc(() => {\r\n                ani.stop();\r\n            }),\r\n            cc.moveTo(.8, walletPos.x, walletPos.y).easing(cc.easeInOut(3.0)),\r\n            cc.callFunc(() => {\r\n                node.destroy();\r\n                this.coinIconJump(type == 0 ? this.node_icon_sliver : this.node_icon_gold);\r\n            })\r\n        ));\r\n\r\n    }\r\n\r\n    getExplosionTargetPos(): cc.Vec2 {\r\n        const theta = Math.random() * Math.PI * 2\r\n        let r = Math.random() * this.sprayRange + this.sprayRangeMin;\r\n        let x = r * Math.cos(theta);\r\n        let y = r * Math.sin(theta);\r\n        return cc.v2(x, y);\r\n    }\r\n\r\n\r\n}\r\n"]}