{"version":3,"sources":["assets\\script\\data\\GameCenter.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA6C;AAC7C,0CAA4C;AAC5C,gDAAkD;AAClD,yCAAoC;AACpC,+CAA0C;AAE1C;IAOI;QALA,YAAO,GAAW,OAAO,CAAC;QAC1B,eAAU,GAAW,UAAU,CAAC;QAChC,WAAM,GAAW,IAAI,CAAC;QACtB,SAAI,GAAc,IAAI,CAAC;QAInB,IAAI,CAAC,MAAM,GAAG,IAAI,gBAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,mBAAS,EAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,EAAE,CAAC;IAEhB,CAAC;IAED,yBAAI,GAAJ;QACI,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,4BAAO,GAAP,UAAQ,SAAiB,EAAE,GAAW;QAElC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAClB,OAAO,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IAEhC,CAAC;IAED,4CAAuB,GAAvB;QACI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,QAAQ,GAAG,mBAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAClD,OAAO,QAAQ,CAAC,cAAc,CAAC,KAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAG,CAAC,CAAC;IACjG,CAAC;IAED,gDAA2B,GAA3B;QACI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACnC,IAAI,QAAQ,GAAG,mBAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAClD,OAAO,QAAQ,CAAC,cAAc,CAAC,aAAW,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAG,CAAC,CAAC;IAClF,CAAC;IAEL,iBAAC;AAAD,CA9CA,AA8CC,IAAA;AAED,kBAAe,IAAI,UAAU,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import AssetsMng from \"../manager/AssetsMng\";\r\nimport * as CfgMine from \"./config/CfgMine\";\r\nimport * as CfgPartner from \"./config/CfgPartner\";\r\nimport System from \"./model/System\";\r\nimport GameModel from \"./model/GameModel\";\r\n\r\nclass GameCenter {\r\n\r\n    cfgMine: object = CfgMine;\r\n    cfgPartner: object = CfgPartner;\r\n    system: System = null;\r\n    game: GameModel = null;\r\n\r\n    constructor() {\r\n\r\n        this.system = new System();\r\n        this.game = new GameModel();\r\n\r\n        this.init();\r\n\r\n    }\r\n\r\n    init(): void {\r\n        const models = [this.system, this.game];\r\n        for (let i = 0; i < models.length; i++) {\r\n            models[i].getData = this.getData.bind(this);\r\n        }\r\n    }\r\n\r\n    getData(modelName: string, val: string) {\r\n\r\n        if (!this[modelName]) {\r\n            return null;\r\n        }\r\n\r\n        return this[modelName][val];\r\n\r\n    }\r\n\r\n    getCurrentPetChooseIcon() {\r\n        let id = this.game.mineSelectID;\r\n        let level = this.game.mineLevel[id];\r\n        let assetImg = AssetsMng.getAssets(`pet_1.plist`);\r\n        return assetImg.getSpriteFrame(`${this.cfgMine[id].levelName[Math.floor((level - 1) / 3)]}`);\r\n    }\r\n\r\n    getCurrentPartnerChooseIcon() {\r\n        let id = this.game.partnerSelectID;\r\n        let assetImg = AssetsMng.getAssets(`pet_2.plist`);\r\n        return assetImg.getSpriteFrame(`display_${this.cfgPartner[id].levelName[0]}`);\r\n    }\r\n\r\n}\r\n\r\nexport default new GameCenter();"]}