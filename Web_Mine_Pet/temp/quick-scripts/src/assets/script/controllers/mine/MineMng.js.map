{"version":3,"sources":["assets\\script\\controllers\\mine\\MineMng.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAA8C;AAC9C,iDAA4C;AAC5C,kEAAiE;AACjE,0DAAwD;AACxD,uCAAkC;AAClC,4DAAuD;AACvD,2CAAsC;AACtC,2CAAsC;AAE9B,IAAA,OAAO,GAAK,EAAE,CAAC,UAAU,QAAlB,CAAmB;AAGlC;IAAqC,2BAAM;IAA3C;QAAA,qEAwEC;QAtEG,QAAE,GAAgB,IAAI,CAAC;QAIf,mBAAa,GAAW,CAAC,CAAC;;IAkEtC,CAAC;IAhEG,0BAAQ,GAAR;QACI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,YAAY,CAAC,oBAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,oBAAU,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,wBAAM,GAAN;QACI,IAAI,CAAC,SAAS,CAAC,sBAAS,CAAC,oBAAoB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACtE,CAAC;IAED,0BAAQ,GAAR;QACI,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;QAC9D,IAAI,aAAa,IAAI,CAAC,EAAG;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAC9C;IACL,CAAC;IAGD,sBAAI,GAAJ,UAAK,QAAwB;QAAxB,yBAAA,EAAA,eAAwB;QACzB,mCAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAGD,sBAAI,GAAJ,UAAK,QAAwB;QAAxB,yBAAA,EAAA,eAAwB;QACzB,mCAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAGD,8BAAY,GAAZ,UAAa,EAAU;QAGnB,IAAI,IAAI,CAAC,aAAa,IAAI,EAAE,EAAE;YAC1B,OAAO;SACV;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE;YACV,kBAAQ,CAAC,IAAI,CAAC,sBAAS,CAAC,YAAY,EAAE;gBAClC,IAAI,EAAE,CAAC;gBACP,OAAO,EAAE,iBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACjC,SAAS,EAAE,IAAI;aAClB,CAAC,CAAC;YACH,OAAO;SACV;QAED,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAE3C,CAAC;IAED,4BAAU,GAAV,UAAW,EAAE;QACT,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,sBAAI,iCAAY;aAIhB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;aAND,UAAiB,KAAa;YAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAlEgB,OAAO;QAD3B,OAAO;OACa,OAAO,CAwE3B;IAAD,cAAC;CAxED,AAwEC,CAxEoC,gBAAM,GAwE1C;kBAxEoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["import EventMng from \"../../manager/EventMng\";\r\nimport LangMng from \"../../manager/LangMng\";\r\nimport { ActionTransition } from \"../../common/ActionTransition\";\r\nimport { MainEvent } from \"../../data/const/EventConst\";\r\nimport UIBase from \"../ui/UIBase\";\r\nimport DataMineMng from \"../../data/scene/DataMineMng\";\r\nimport MineMngNav from \"./MineMngNav\";\r\nimport MineMngCon from \"./MineMngCon\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MineMng extends UIBase {\r\n\r\n    ui: DataMineMng = null;\r\n    tabNav: MineMngNav;\r\n    con: MineMngCon;\r\n\r\n    private _currentIndex: number = 0;\r\n\r\n    onUILoad(): void {\r\n        this.ui = this.node.addComponent(DataMineMng);\r\n        this.tabNav = this.ui.tab_nav_holder.addComponent(MineMngNav);\r\n        this.con = this.ui.con_holder.addComponent(MineMngCon);\r\n        this.viewInit();\r\n    }\r\n\r\n    onShow() {\r\n        this.initEvent(MainEvent.MINE_MNG_PAGE_SWITCH, this.onPageSwitch);\r\n    }\r\n\r\n    viewInit(): void {\r\n        let mineListState = this.con.pages[0].slider.getSliderState();\r\n        if (mineListState == 0 ) {\r\n            this.tabNav.navBtns[2].node.active = false;\r\n        }\r\n    }\r\n\r\n\r\n    show(aniState: boolean = true): void {\r\n        ActionTransition.pageFadeIn(this.node, aniState);\r\n    }\r\n\r\n\r\n    hide(aniState: boolean = true): void {\r\n        ActionTransition.pageFadeOut(this.node, aniState);\r\n    }\r\n\r\n\r\n    onPageSwitch(id: number): void {\r\n\r\n\r\n        if (this._currentIndex == id) {\r\n            return;\r\n        }\r\n\r\n        let hasPage = this.getHasPage(id);\r\n        if (!hasPage) {\r\n            EventMng.emit(MainEvent.MESSAGE_SHOW, {\r\n                type: 2,\r\n                content: LangMng.getTxt(\"S_9001\"),\r\n                autoClose: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.currentIndex = id;\r\n        this.tabNav.btnSwitch(this.currentIndex);\r\n        this.con.pageSwitch(this.currentIndex);\r\n\r\n    }\r\n\r\n    getHasPage(id): boolean {\r\n        return !!this.con.pages[id];\r\n    }\r\n\r\n    set currentIndex(value: number) {\r\n        this._currentIndex = value;\r\n    }\r\n\r\n    get currentIndex(): number {\r\n        return this._currentIndex;\r\n    }\r\n\r\n}"]}