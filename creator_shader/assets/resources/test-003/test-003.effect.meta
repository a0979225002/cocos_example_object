{
  "ver": "1.0.25",
  "uuid": "491a7365-dfc3-45b4-b83d-76c1414aeee3",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n vec3 hsv2rgb(vec3 c){\n   vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n   vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n }\nvoid main() {\n  vec2 uv = vec2(1. - v_uv0.x,v_uv0.y);vec2 st = uv;;\n    vec3 color = vec3(0.0,.0,.1);\n    uv = (uv - 0.5) * 2.;\n    float v = atan(uv.y, uv.x);\n    float r = length(uv);\n    v = (v + 3.14159265358979323846) / 2. / 3.14159265358979323846;\n    color = hsv2rgb(vec3(v,r,1.));\n    float lightv = mod((v + u_time*.3),1.);\n    color += .4 * (vec3(smoothstep(.3,.4,lightv) - smoothstep(.4,.5,lightv)));\n    color -= (1.-smoothstep(.5,.4,length(uv))) * 1.5;\n    color -= smoothstep(.4,.33,length(uv)) * 4.;\n    gl_FragColor = vec4(color,1.0);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec2 u_mouse;\n  float u_time;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n vec3 hsv2rgb(vec3 c){\n   vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n   vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n }\nvoid main() {\n  vec2 uv = vec2(1. - v_uv0.x,v_uv0.y);vec2 st = uv;;\n    vec3 color = vec3(0.0,.0,.1);\n    uv = (uv - 0.5) * 2.;\n    float v = atan(uv.y, uv.x);\n    float r = length(uv);\n    v = (v + 3.14159265358979323846) / 2. / 3.14159265358979323846;\n    color = hsv2rgb(vec3(v,r,1.));\n    float lightv = mod((v + u_time*.3),1.);\n    color += .4 * (vec3(smoothstep(.3,.4,lightv) - smoothstep(.4,.5,lightv)));\n    color -= (1.-smoothstep(.5,.4,length(uv))) * 1.5;\n    color -= smoothstep(.4,.33,length(uv)) * 4.;\n    gl_FragColor = vec4(color,1.0);\n}"
      }
    }
  ],
  "subMetas": {}
}