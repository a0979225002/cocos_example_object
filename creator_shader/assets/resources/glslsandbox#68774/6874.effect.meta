{
  "ver": "1.0.25",
  "uuid": "6dc41881-9089-43a1-b064-c7eb8e52028c",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 col = vec2(0.);\n    float t = u_time*.1;\n    vec2 uv = (fragCoord-vec2(960.,640.).xy)/vec2(960.,640.).y+vec2(t,t*2.0);\n    float factor = 1.5;\n    vec2 v1;\n    for(int i=0;i<12;i++)\n    {\n        uv *= -factor*factor;\n        v1 = uv.yx/factor;\n        uv += sin(v1+col+t*10.0)/factor;\n        col += vec2(sin(uv.x-uv.y+v1.x-col.y),sin(uv.y-uv.x+v1.y-col.x));\n    }\n    fragColor = vec4(vec3(col.x+4.0,col.x-col.y/2.0,col.x/5.0)/2.0,1.0);\n}\nvoid main(void)\n{\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec4 u_Position;\n  float u_Radius;\n  float u_time;\n  float u_Vague;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 col = vec2(0.);\n    float t = u_time*.1;\n    vec2 uv = (fragCoord-vec2(960.,640.).xy)/vec2(960.,640.).y+vec2(t,t*2.0);\n    float factor = 1.5;\n    vec2 v1;\n    for(int i=0;i<12;i++)\n    {\n        uv *= -factor*factor;\n        v1 = uv.yx/factor;\n        uv += sin(v1+col+t*10.0)/factor;\n        col += vec2(sin(uv.x-uv.y+v1.x-col.y),sin(uv.y-uv.x+v1.y-col.x));\n    }\n    fragColor = vec4(vec3(col.x+4.0,col.x-col.y/2.0,col.x/5.0)/2.0,1.0);\n}\nvoid main(void)\n{\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}"
      }
    }
  ],
  "subMetas": {}
}