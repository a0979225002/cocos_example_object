{
  "__type__": "cc.EffectAsset",
  "_name": "Regional_gray",
  "_objFlags": 0,
  "_native": "",
  "properties": null,
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "properties": {
            "texture": {
              "value": "white",
              "type": 29
            },
            "u_resolution": {
              "value": [
                0,
                0
              ],
              "type": 14
            },
            "u_time": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_Position": {
              "value": [
                1,
                1,
                0,
                0
              ],
              "type": 16
            },
            "u_Radius": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_Vague": {
              "value": [
                1
              ],
              "type": 13
            }
          },
          "program": "Regional_gray|vs|fs"
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 2098244866,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform Constants1 {\n  vec2 u_resolution;\n  float u_Radius;\n  float u_time;\n  vec4 u_Position;\n  float u_Vague;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvec4 lerp(vec4 a, vec4 b, float w) {\n  return a + w*(b-a);\n}\nfloat saturate(float x)\n{\n  return max(0.0, min(1.0, x));\n}\nvoid main () {\n    vec4 col = texture(texture, v_uv0);\n    float val = 0.299*col.r+0.578*col.g+0.114*col.b;\n    vec3 grayScale = vec3(val, val, val);\n    float d = saturate((u_Radius - distance(u_Position.xyz, v_wp.xyz)) / u_Vague);\n    col = lerp(vec4(grayScale,1.0),col, d);\n    gl_FragColor = col;\n}"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform float u_Radius;\nuniform vec4 u_Position;\nuniform float u_Vague;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvec4 lerp(vec4 a, vec4 b, float w) {\n  return a + w*(b-a);\n}\nfloat saturate(float x)\n{\n  return max(0.0, min(1.0, x));\n}\nvoid main () {\n    vec4 col = texture2D(texture, v_uv0);\n    float val = 0.299*col.r+0.578*col.g+0.114*col.b;\n    vec3 grayScale = vec3(val, val, val);\n    float d = saturate((u_Radius - distance(u_Position.xyz, v_wp.xyz)) / u_Vague);\n    col = lerp(vec4(grayScale,1.0),col, d);\n    gl_FragColor = col;\n}"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplers": []
        }
      },
      "defines": [
        {
          "name": "USE_TEXTURE",
          "type": "boolean",
          "defines": []
        }
      ],
      "blocks": [
        {
          "name": "Constants1",
          "members": [
            {
              "name": "u_resolution",
              "type": 14,
              "count": 1
            },
            {
              "name": "u_Radius",
              "type": 13,
              "count": 1
            },
            {
              "name": "u_time",
              "type": 13,
              "count": 1
            },
            {
              "name": "u_Position",
              "type": 16,
              "count": 1
            },
            {
              "name": "u_Vague",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        }
      ],
      "record": null,
      "name": "Regional_gray|vs|fs"
    }
  ]
}