{
  "__type__": "cc.EffectAsset",
  "_name": "ScrollBox",
  "_objFlags": 0,
  "_native": "",
  "properties": null,
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "properties": {
            "texture": {
              "value": "white",
              "type": 29
            },
            "texture2": {
              "value": "white",
              "type": 29
            },
            "u_time": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_Position": {
              "value": [
                1,
                1,
                0,
                0
              ],
              "type": 16
            },
            "u_Radius": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_Vague": {
              "value": [
                1
              ],
              "type": 13
            }
          },
          "program": "ScrollBox|vs|fs"
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 1822103586,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n#if USE_TEXTURE\n   v_uv0 = a_uv0;\n#endif\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec4 u_Position;\n  float u_Radius;\n  float u_time;\n  float u_Vague;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n float box(in vec2 _st, in vec2 _pos,in vec2 _size){\n   vec2 ret = step(_pos,_st);\n   ret *= step(_st,_pos + _size);\n   return ret.x * ret.y;\n }\n vec2 rotate2D(vec2 _st, float _angle){\n   _st -= 0.5;\n   _st =  mat2(cos(_angle),-sin(_angle),\n               sin(_angle),cos(_angle)) * _st;\n   _st += 0.5;\n   return _st;\n }\n float box(vec2 _st, vec2 _size, float _smoothEdges){\n   _size = vec2(0.5)-_size*0.5;\n   vec2 aa = vec2(_smoothEdges*0.5);\n   vec2 uv = smoothstep(_size,_size+aa,_st);\n   uv *= smoothstep(_size,_size+aa,vec2(1.0)-_st);\n   return uv.x*uv.y;\n }\n vec2 brickTile(vec2 _st, float _zoom){\n   _st *= _zoom;\n   _st.x += step(1., mod(_st.y,2.0)) * -u_time;\n   _st.x += step(mod(_st.y,2.0),1. ) * u_time;\n   vec2 temp = _st;\n   _st = fract(_st);\n   _st = rotate2D(_st,3.14159265358979323846* -u_time * step(1., mod(temp.y,2.0)));\n   return _st;\n }\n void main(void){\n   vec2 st = gl_FragCoord.xy/vec2(960.,640.).xy;\n   st.x *= vec2(960.,640.).x/vec2(960.,640.).y;\n   vec3 color = vec3(0.0);\n   vec2 temp = st;\n   st = brickTile(st,5.0);\n   color = vec3(box(st,vec2(0.9),0.01));\n   gl_FragColor = vec4(color,1.0);\n }"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n#if USE_TEXTURE\n   v_uv0 = a_uv0;\n#endif\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n float box(in vec2 _st, in vec2 _pos,in vec2 _size){\n   vec2 ret = step(_pos,_st);\n   ret *= step(_st,_pos + _size);\n   return ret.x * ret.y;\n }\n vec2 rotate2D(vec2 _st, float _angle){\n   _st -= 0.5;\n   _st =  mat2(cos(_angle),-sin(_angle),\n               sin(_angle),cos(_angle)) * _st;\n   _st += 0.5;\n   return _st;\n }\n float box(vec2 _st, vec2 _size, float _smoothEdges){\n   _size = vec2(0.5)-_size*0.5;\n   vec2 aa = vec2(_smoothEdges*0.5);\n   vec2 uv = smoothstep(_size,_size+aa,_st);\n   uv *= smoothstep(_size,_size+aa,vec2(1.0)-_st);\n   return uv.x*uv.y;\n }\n vec2 brickTile(vec2 _st, float _zoom){\n   _st *= _zoom;\n   _st.x += step(1., mod(_st.y,2.0)) * -u_time;\n   _st.x += step(mod(_st.y,2.0),1. ) * u_time;\n   vec2 temp = _st;\n   _st = fract(_st);\n   _st = rotate2D(_st,3.14159265358979323846* -u_time * step(1., mod(temp.y,2.0)));\n   return _st;\n }\n void main(void){\n   vec2 st = gl_FragCoord.xy/vec2(960.,640.).xy;\n   st.x *= vec2(960.,640.).x/vec2(960.,640.).y;\n   vec3 color = vec3(0.0);\n   vec2 temp = st;\n   st = brickTile(st,5.0);\n   color = vec3(box(st,vec2(0.9),0.01));\n   gl_FragColor = vec4(color,1.0);\n }"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplers": []
        }
      },
      "defines": [
        {
          "name": "USE_TEXTURE",
          "type": "boolean",
          "defines": []
        }
      ],
      "blocks": [
        {
          "name": "Constants1",
          "members": [
            {
              "name": "u_Position",
              "type": 16,
              "count": 1
            },
            {
              "name": "u_Radius",
              "type": 13,
              "count": 1
            },
            {
              "name": "u_time",
              "type": 13,
              "count": 1
            },
            {
              "name": "u_Vague",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        },
        {
          "name": "texture2",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 31
        }
      ],
      "record": null,
      "name": "ScrollBox|vs|fs"
    }
  ]
}