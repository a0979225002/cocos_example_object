{
  "__type__": "cc.EffectAsset",
  "_name": "S350",
  "_objFlags": 0,
  "_native": "",
  "properties": null,
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "properties": {
            "texture": {
              "value": "white",
              "type": 29
            },
            "texture2": {
              "value": "white",
              "type": 29
            },
            "u_time": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_Position": {
              "value": [
                1,
                1,
                0,
                0
              ],
              "type": 16
            },
            "u_Radius": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_Vague": {
              "value": [
                1
              ],
              "type": 13
            }
          },
          "program": "S350|vs|fs"
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 353668602,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1\n{\n  vec4 u_Position;\n  float u_Radius;\n  float u_time;\n  float u_Vague;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvec2 hash2( vec2 x )\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\nfloat gnoise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( dot( hash2( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                           dot( hash2( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                       mix( dot( hash2( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                           dot( hash2( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);}\nfloat noise( in vec2 p )\n{\n  return gnoise(p);\n}\nfloat noise_sum(vec2 p){\n    float f = 0.0;\n    p = p * 4.0;\n  f += 1.0000 * noise(p); p = 2.0 * p;\n  f += 0.5000 * noise(p); p = 2.0 * p;\n  f += 0.2500 * noise(p); p = 2.0 * p;\n  f += 0.1250 * noise(p); p = 2.0 * p;\n  f += 0.0625 * noise(p); p = 2.0 * p;\n    return f;\n}\nfloat glow(float d, float str, float thickness){\n    return thickness / pow(d, str);\n}\nvoid main() {\n    vec2 uv = gl_FragCoord.xy/vec2(960.,640.).xy;\n    uv.x *= vec2(960.,640.).x/vec2(960.,640.).y;\n    uv= uv*2.0-1.0;\n    vec2 st = gl_FragCoord.xy/vec2(960.,640.).xy;\n    st.x *= vec2(960.,640.).x/vec2(960.,640.).y;\n    st*=1.0;\n    vec3 x;\n    float pi=3.14159;\n    float theta=2.0*pi*u_time/2.144;\n    vec2 point=vec2(sin(theta), cos(theta));\n    float dir= dot(point, normalize(uv));\n    float dist = length(uv);\n    float circle_dist = abs(dist-0.512);\n    x = vec3(noise_sum(st*.4+.245*vec2(sin(theta*0.25),cos(theta*0.25))));\n    float breathing=sin(u_time*2.0*pi/5.0)*0.5+0.5;\n    float strength =(0.2*breathing*dir+0.180);\n    float thickness=(0.5*breathing+0.084);\n    float glow_circle = glow(circle_dist, strength, thickness);\n    vec3 col1 = vec3(0.112,0.571,0.980);\n  vec3 col2 = vec3(.1, .1, .1)*5.520;\n    gl_FragColor = vec4( mix(x, col2, glow_circle*0.5+0.5), 1.0 );\n}"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n  v_wp = cc_matWorld * vec4(a_position, 1);\n    #if USE_TEXTURE\n    v_uv0 = a_uv0;\n    #endif\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nvec2 hash2( vec2 x )\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\nfloat gnoise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( dot( hash2( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                           dot( hash2( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                       mix( dot( hash2( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                           dot( hash2( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);}\nfloat noise( in vec2 p )\n{\n  return gnoise(p);\n}\nfloat noise_sum(vec2 p){\n    float f = 0.0;\n    p = p * 4.0;\n  f += 1.0000 * noise(p); p = 2.0 * p;\n  f += 0.5000 * noise(p); p = 2.0 * p;\n  f += 0.2500 * noise(p); p = 2.0 * p;\n  f += 0.1250 * noise(p); p = 2.0 * p;\n  f += 0.0625 * noise(p); p = 2.0 * p;\n    return f;\n}\nfloat glow(float d, float str, float thickness){\n    return thickness / pow(d, str);\n}\nvoid main() {\n    vec2 uv = gl_FragCoord.xy/vec2(960.,640.).xy;\n    uv.x *= vec2(960.,640.).x/vec2(960.,640.).y;\n    uv= uv*2.0-1.0;\n    vec2 st = gl_FragCoord.xy/vec2(960.,640.).xy;\n    st.x *= vec2(960.,640.).x/vec2(960.,640.).y;\n    st*=1.0;\n    vec3 x;\n    float pi=3.14159;\n    float theta=2.0*pi*u_time/2.144;\n    vec2 point=vec2(sin(theta), cos(theta));\n    float dir= dot(point, normalize(uv));\n    float dist = length(uv);\n    float circle_dist = abs(dist-0.512);\n    x = vec3(noise_sum(st*.4+.245*vec2(sin(theta*0.25),cos(theta*0.25))));\n    float breathing=sin(u_time*2.0*pi/5.0)*0.5+0.5;\n    float strength =(0.2*breathing*dir+0.180);\n    float thickness=(0.5*breathing+0.084);\n    float glow_circle = glow(circle_dist, strength, thickness);\n    vec3 col1 = vec3(0.112,0.571,0.980);\n  vec3 col2 = vec3(.1, .1, .1)*5.520;\n    gl_FragColor = vec4( mix(x, col2, glow_circle*0.5+0.5), 1.0 );\n}"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplers": []
        }
      },
      "defines": [
        {
          "name": "USE_TEXTURE",
          "type": "boolean",
          "defines": []
        }
      ],
      "blocks": [
        {
          "name": "Constants1",
          "members": [
            {
              "name": "u_Position",
              "type": 16,
              "count": 1
            },
            {
              "name": "u_Radius",
              "type": 13,
              "count": 1
            },
            {
              "name": "u_time",
              "type": 13,
              "count": 1
            },
            {
              "name": "u_Vague",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        },
        {
          "name": "texture2",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 31
        }
      ],
      "record": null,
      "name": "S350|vs|fs"
    }
  ]
}