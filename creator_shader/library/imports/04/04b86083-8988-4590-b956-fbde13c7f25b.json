{
  "__type__": "cc.EffectAsset",
  "_name": "UISmoke",
  "_objFlags": 0,
  "_native": "",
  "properties": null,
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "properties": {
            "texture": {
              "value": "white",
              "type": 29
            },
            "texture2": {
              "value": "white",
              "type": 29
            },
            "u_time": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_mouse": {
              "value": [
                1,
                1
              ],
              "type": 14
            }
          },
          "program": "UISmoke|vs|fs"
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 2737613154,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec2 u_mouse;\n  float u_time;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\nfloat fbm (in vec2 st) {\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    for (int i = 0; i < 5; i++) {\n      value += amplitude * noise(st);\n        st *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n float Remap(float a, float b, float c, float d, float t) {\n   return ((t-a)/(b-a))*(d-c)+c;\n }\nvoid main() {\n  vec2 uv = vec2(1. - v_uv0.x,v_uv0.y);vec2 st = uv;;\n    vec3 color = vec3(0.0);\n    float uvoff = noise(vec2(0.,u_time));\n    uvoff = Remap(0.,1.,-1.,1.,uvoff);\n    vec2 fbmuv = vec2(uv.x,uv.y - .8);\n    color += fbm(fbmuv * 4. +fbm(fbmuv*4.+vec2(0.,u_time)));\n    color *= smoothstep(-.3,.8,uv.y);\n    vec4 tex = texture2D(texture, uv + vec2(0.,color.x * .05));\n    tex = texture2D(texture, uv + vec2(0.,0.));\n    vec3 cl = normalize(vec3(253,100,13));\n    color *= cl;\n    #if SHOW_TEX\n    vec3 oldcolor = color;\n    color = tex.xyz;\n    color = mix(color,oldcolor,oldcolor.x );\n    #endif\n    gl_FragColor = vec4(color,tex.a);\n}"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\nfloat fbm (in vec2 st) {\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    for (int i = 0; i < 5; i++) {\n      value += amplitude * noise(st);\n        st *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n float Remap(float a, float b, float c, float d, float t) {\n   return ((t-a)/(b-a))*(d-c)+c;\n }\nvoid main() {\n  vec2 uv = vec2(1. - v_uv0.x,v_uv0.y);vec2 st = uv;;\n    vec3 color = vec3(0.0);\n    float uvoff = noise(vec2(0.,u_time));\n    uvoff = Remap(0.,1.,-1.,1.,uvoff);\n    vec2 fbmuv = vec2(uv.x,uv.y - .8);\n    color += fbm(fbmuv * 4. +fbm(fbmuv*4.+vec2(0.,u_time)));\n    color *= smoothstep(-.3,.8,uv.y);\n    vec4 tex = texture2D(texture, uv + vec2(0.,color.x * .05));\n    tex = texture2D(texture, uv + vec2(0.,0.));\n    vec3 cl = normalize(vec3(253,100,13));\n    color *= cl;\n    #if SHOW_TEX\n    vec3 oldcolor = color;\n    color = tex.xyz;\n    color = mix(color,oldcolor,oldcolor.x );\n    #endif\n    gl_FragColor = vec4(color,tex.a);\n}"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplers": []
        }
      },
      "defines": [
        {
          "name": "SHOW_TEX",
          "type": "boolean",
          "defines": []
        }
      ],
      "blocks": [
        {
          "name": "Constants1",
          "members": [
            {
              "name": "u_mouse",
              "type": 14,
              "count": 1
            },
            {
              "name": "u_time",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        },
        {
          "name": "texture2",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 31
        }
      ],
      "record": null,
      "name": "UISmoke|vs|fs"
    }
  ]
}