{
  "__type__": "cc.EffectAsset",
  "_name": "69541.0",
  "_objFlags": 0,
  "_native": "",
  "properties": null,
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "properties": {
            "texture": {
              "value": "white",
              "type": 29
            },
            "texture2": {
              "value": "white",
              "type": 29
            },
            "u_time": {
              "value": [
                1
              ],
              "type": 13
            },
            "u_mouse": {
              "value": [
                1,
                1
              ],
              "type": 14
            }
          },
          "program": "69541.0|vs|fs"
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 1972341929,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform Constants1 {\n  vec2 u_mouse;\n  float u_time;\n};\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nfloat rand (vec2 p) {\n    return fract(sin(dot(p.xy,\n                         vec2(6.8245,7.1248)))*\n        9.1283);\n}\nfloat particle(vec2 uv, float identifier, vec2 anchor, vec2 velocity, float creationTime) {\n    float particleTime = max(0., u_time - creationTime);\n    float size = max(0., 0.9 - particleTime) * 0.024;\n    vec2 velocityOffset = velocity * particleTime;\n    vec2 gravityOffset = vec2(0.,-.56) * pow(particleTime, 1.798);\n    vec2 point = anchor + velocityOffset + gravityOffset;\n    float dist = distance(uv, point);\n    float hit = smoothstep(size, 0., dist);\n    return hit;\n}\nvec3 currentColor() {\n  float c = u_time * 0.2;\n  float r = sin(c * 3.14159265359) / 2. + .5;\n  float g = sin((c + .6) * 3.14159265359) / 2. + .5;\n  float b = sin((c + 1.2) * 3.14159265359) / 2. + .5;\n  return vec3(r, 0.,0.);\n}\nvoid mainImage( )\n{\n    vec2 uv = gl_FragCoord.xy/vec2(960.,640.).xx;\n    vec3 col = vec3(0.);\n    for (float i = 0.0; i < 320.0; i++) {\n      float seed = 0.12345679 + floor(i / 320.0 + u_time);\n      vec2 anchor = vec2(0.5, 0.3);\n      vec2 velocity = vec2(mix(-.5, .5, rand(vec2(seed, i))), mix(-.5, .5, rand(vec2(i, seed) / 3.)));\n      float creationTime = u_time - fract(i / 320.0 + u_time);\n      col += particle(uv, 0., anchor, velocity, creationTime) * currentColor();\n    }\n    col = smoothstep(.6, .9, col);\n    gl_FragColor = vec4(col, 1.);\n}\nvoid main()\n{\n    mainImage();\n}"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\n void main () {\n   mat4 mvp;\n   mvp = cc_matViewProj;\n   v_color = a_color;\n   gl_Position = mvp * vec4(a_position, 1);\n   v_wp = cc_matWorld * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n }",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform float u_time;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_wp;\nfloat rand (vec2 p) {\n    return fract(sin(dot(p.xy,\n                         vec2(6.8245,7.1248)))*\n        9.1283);\n}\nfloat particle(vec2 uv, float identifier, vec2 anchor, vec2 velocity, float creationTime) {\n    float particleTime = max(0., u_time - creationTime);\n    float size = max(0., 0.9 - particleTime) * 0.024;\n    vec2 velocityOffset = velocity * particleTime;\n    vec2 gravityOffset = vec2(0.,-.56) * pow(particleTime, 1.798);\n    vec2 point = anchor + velocityOffset + gravityOffset;\n    float dist = distance(uv, point);\n    float hit = smoothstep(size, 0., dist);\n    return hit;\n}\nvec3 currentColor() {\n  float c = u_time * 0.2;\n  float r = sin(c * 3.14159265359) / 2. + .5;\n  float g = sin((c + .6) * 3.14159265359) / 2. + .5;\n  float b = sin((c + 1.2) * 3.14159265359) / 2. + .5;\n  return vec3(r, 0.,0.);\n}\nvoid mainImage( )\n{\n    vec2 uv = gl_FragCoord.xy/vec2(960.,640.).xx;\n    vec3 col = vec3(0.);\n    for (float i = 0.0; i < 320.0; i++) {\n      float seed = 0.12345679 + floor(i / 320.0 + u_time);\n      vec2 anchor = vec2(0.5, 0.3);\n      vec2 velocity = vec2(mix(-.5, .5, rand(vec2(seed, i))), mix(-.5, .5, rand(vec2(i, seed) / 3.)));\n      float creationTime = u_time - fract(i / 320.0 + u_time);\n      col += particle(uv, 0., anchor, velocity, creationTime) * currentColor();\n    }\n    col = smoothstep(.6, .9, col);\n    gl_FragColor = vec4(col, 1.);\n}\nvoid main()\n{\n    mainImage();\n}"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplers": []
        }
      },
      "defines": [],
      "blocks": [
        {
          "name": "Constants1",
          "members": [
            {
              "name": "u_mouse",
              "type": 14,
              "count": 1
            },
            {
              "name": "u_time",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        },
        {
          "name": "texture2",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 31
        }
      ],
      "record": null,
      "name": "69541.0|vs|fs"
    }
  ]
}