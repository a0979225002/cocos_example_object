{"version":3,"sources":["assets\\Script\\drawBoard\\DrawBoardBuilder.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DrawBoard from \"./DrawBoard\";\r\nimport IDrawBordInitializeData from \"./IDrawBordInitializeData\";\r\nimport DrawBoardModel from \"./DrawBoardModel\";\r\n\r\n/**\r\n * @Author 蕭立品\r\n * @Description TODO\r\n * @Date 2022-08-09 下午 03:45\r\n * @Version 1.0\r\n */\r\n\r\nexport default class DrawBoardBuilder implements IDrawBordInitializeData {\r\n\r\n    /**\r\n     * 繪圖板寬度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _width: number;\r\n\r\n    /**\r\n     * 繪圖板高度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _height: number;\r\n\r\n    /**\r\n     * 動態創建的圖片對象,再會版中繪製的圖案數據,將應用到這個貼圖中\r\n     * @type {cc.Texture2D}\r\n     * @protected\r\n     */\r\n    private _texture: cc.Texture2D;\r\n\r\n    /**\r\n     * 紀錄最近一次的像素顏色(十六進制顏色值),繪製時未指定顏色時,將使用該值\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _recentColor: cc.Color;\r\n\r\n    /**\r\n     * 線條寬度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _lineWidth: number;\r\n\r\n    /**\r\n     * 線段結尾是否是圓角\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    private _previousLineCircleEnd: boolean;\r\n\r\n    /**\r\n     * 當前繪圖板顯示物件\r\n     * @type {cc.Node}\r\n     * @private\r\n     */\r\n    private _drawNode: cc.Node;\r\n\r\n    /**\r\n     * 當前繪圖的圖片\r\n     * @type {cc.Sprite}\r\n     */\r\n    private _drawSprite: cc.Sprite;\r\n    private _board: cc.Node;\r\n\r\n\r\n    /**\r\n     * 設置畫板大小\r\n     * @param {number} width - 畫板寬度\r\n     * @param {number} height - 畫板高度\r\n     * @returns {this}\r\n     */\r\n    public setBoardSize(width: number, height: number): this {\r\n        this._width = width;\r\n        this._height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 設置畫板繪製時使用的顏色\r\n     * @param {cc.Color} color\r\n     */\r\n    public setColor(color: cc.Color): this {\r\n        this._recentColor = color;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 設置線條寬度\r\n     * @param {number} width\r\n     * @returns {this}\r\n     */\r\n    public setLineWidth(width: number): this {\r\n        this._lineWidth = width;\r\n        return this\r\n    }\r\n\r\n\r\n    /**\r\n     * 線段結尾是否為圓角\r\n     * @param {boolean} canCircleEnd\r\n     */\r\n    public setLineCircleEnd(canCircleEnd: boolean): this {\r\n        this._previousLineCircleEnd = canCircleEnd;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 動態創建的圖片對象,繪製的圖案數據,將應用到這個貼圖中\r\n     * @param {cc.Node} targetNode - 當作顯示圖案的容器\r\n     * @private\r\n     */\r\n    private setDraw(targetNode: cc.Node): void {\r\n        this._drawNode = new cc.Node();\r\n        this._drawNode.width = this._width;\r\n        this._drawNode.height = this._height;\r\n        this._drawSprite = this._drawNode.addComponent(cc.Sprite);\r\n        this._drawSprite.spriteFrame = new cc.SpriteFrame();\r\n        targetNode.addChild(this._drawNode);\r\n    }\r\n\r\n    /**\r\n     * 初始化 Texture\r\n     * @private\r\n     */\r\n    private initTexture(drawBoardModel: DrawBoardModel) {\r\n        // console.log(this._texture);\r\n\r\n        const pixelColor: Uint8Array = drawBoardModel.pixelColor\r\n        this._texture.initWithData(\r\n            pixelColor,\r\n            cc.Texture2D.PixelFormat.RGBA8888,\r\n            this._width,\r\n            this._height\r\n        );\r\n        this._texture.setFlipY(true);\r\n        this._drawSprite.spriteFrame.setTexture(this.texture);\r\n    }\r\n\r\n    /**\r\n     * 建構畫布\r\n     * @param {cc.Node} targetNode\r\n     * @returns {DrawBoard}\r\n     */\r\n    public build(targetNode: cc.Node): DrawBoard {\r\n        this._board = targetNode;\r\n        this._texture = new cc.Texture2D();\r\n        this.setDraw(targetNode);\r\n        const drawBoardModel = new DrawBoardModel(this);\r\n        this.initTexture(drawBoardModel);\r\n        return new DrawBoard(drawBoardModel);\r\n    }\r\n\r\n    /**\r\n     * 繪圖板寬度\r\n     * @returns {number}\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * 繪圖板高度\r\n     * @returns {number}\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 動態創建的圖片對象,再會版中繪製的圖案數據,將應用到這個貼圖中\r\n     * @returns {cc.RenderTexture}\r\n     */\r\n    get texture(): cc.Texture2D {\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * 紀錄最近一次的像素顏色(十六進制顏色值),繪製時未指定顏色時,將使用該值\r\n     * @returns {cc.Color}\r\n     */\r\n    get color(): cc.Color {\r\n        return this._recentColor;\r\n    }\r\n\r\n    /**\r\n     * 線條寬度\r\n     * @returns {number}\r\n     */\r\n    get previousLineWidth(): number {\r\n        return this._lineWidth;\r\n    }\r\n\r\n    /**\r\n     * 線段結尾是否是圓角\r\n     * @returns {boolean}\r\n     */\r\n    get previousLineCircleEnd(): boolean {\r\n        return this._previousLineCircleEnd;\r\n    }\r\n\r\n    /**\r\n     * 當前繪圖板顯示物件\r\n     * @returns {cc.Node}\r\n     */\r\n    get drawNode(): cc.Node {\r\n        return this._drawNode;\r\n    }\r\n\r\n    /**\r\n     * 當前繪圖的圖片\r\n     * @returns {cc.Sprite}\r\n     */\r\n    get drawSprite(): cc.Sprite {\r\n        return this._drawSprite;\r\n    }\r\n\r\n    /**\r\n     * 當前綁定的畫板\r\n     * @returns {cc.Node}\r\n     */\r\n    get board(): cc.Node {\r\n        return this._board;\r\n    }\r\n}\r\n"]}