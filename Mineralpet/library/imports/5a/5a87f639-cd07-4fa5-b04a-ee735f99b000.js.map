{"version":3,"sources":["assets\\Script\\drawBoard\\DrawBoardModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import IColorCount from \"./IColorCount\";\r\nimport IDrawBordInitializeData from \"./IDrawBordInitializeData\";\r\nimport { IVec2 } from \"./IVec2\";\r\n\r\n/**\r\n * @Author 蕭立品\r\n * @Description TODO\r\n * @Date 2022-08-09 下午 03:46\r\n * @Version 1.0\r\n */\r\nexport default class DrawBoardModel {\r\n\r\n    /**\r\n     * 當前綁定的畫板\r\n     * @type {cc.Node}\r\n     * @private\r\n     */\r\n    private _board: cc.Node;\r\n\r\n    /**\r\n     * 繪圖板寬度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _width: number;\r\n\r\n    /**\r\n     * 繪圖板高度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _height: number;\r\n\r\n    /**\r\n     * 動態創建的圖片對象,再會版中繪製的圖案數據,將應用到這個貼圖中\r\n     * @type {cc.Texture2D}\r\n     * @protected\r\n     */\r\n    private _texture: cc.Texture2D;\r\n\r\n    /**\r\n     * 紀錄每個像素點\r\n     * @type {Array<Array<number>>}\r\n     * @private\r\n     */\r\n    private _pointColor: Array<Array<number>>;\r\n\r\n    /**\r\n     * 紀錄每個像素點能否繪製,false表示不能繪製,true表示能繪製\r\n     * @type {Array<Array<boolean>>}\r\n     * @private\r\n     */\r\n    private _maskPoint: Array<Array<boolean>>;\r\n\r\n    /**\r\n     * 儲存像素用內存區\r\n     * @type {ArrayBuffer}\r\n     * @private\r\n     */\r\n    private _pixelBuffer: ArrayBuffer\r\n\r\n    /**\r\n     * 顏色分量數組,提供渲染使用\r\n     * @type {Uint8Array}\r\n     * @private\r\n     */\r\n    private _pixelColor: Uint8Array;\r\n\r\n    /**\r\n     * 紀錄各種顏色像素數量\r\n     * @type {IColorCount}\r\n     * @private\r\n     */\r\n    private _colorCount: IColorCount;\r\n\r\n    /**\r\n     * 紀錄最近一次的像素顏色,繪製時未指定顏色時,將使用該值\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _recentColor: number;\r\n\r\n    /**\r\n     * 臨時儲存的顏色值\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _temporaryColor: number;\r\n\r\n    /**\r\n     * 臨時儲存的顏色值 R\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private temporaryR: number;\r\n\r\n    /**\r\n     * 臨時儲存的顏色值 G\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private temporaryG: number;\r\n\r\n    /**\r\n     * 臨時儲存的顏色值 B\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private temporaryB: number;\r\n\r\n    /**\r\n     * 臨時儲存的顏色值 A\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private temporaryA: number;\r\n\r\n    /**\r\n     * 上一次繪製的直線的終點\r\n     * @type {MyVec2}\r\n     * @private\r\n     */\r\n    private _previousLineEndPos: IVec2;\r\n    private _previousLineEndPosT: IVec2;\r\n    private _previousLineEndPosB: IVec2;\r\n\r\n    /**\r\n     * 上一次绘制的直线的端点样式\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    private _previousLineCircleEnd: boolean;\r\n\r\n    /**\r\n     * 上一次繪製的直線的寬度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _previousLineWidth: number;\r\n\r\n\r\n    /**\r\n     * 畫布資料\r\n     * @param {IDrawBordInitializeData} drawBordInitializeData - 初始資料\r\n     */\r\n    constructor(drawBordInitializeData: IDrawBordInitializeData) {\r\n        this.setInitData(drawBordInitializeData);\r\n        this.initParameter(drawBordInitializeData);\r\n    }\r\n\r\n    /**\r\n     * 賦予初始化數據\r\n     * @param {IDrawBordInitializeData} drawBordInitializeData\r\n     */\r\n    private setInitData(drawBordInitializeData: IDrawBordInitializeData) {\r\n        this._board = drawBordInitializeData.board;\r\n        this._width = Math.round(drawBordInitializeData.width);                           //繪圖板寬度\r\n        this._height = Math.round(drawBordInitializeData.height);                         //繪圖板高度\r\n        this._texture = drawBordInitializeData.texture;                                     //動態創建的圖片對象,再會版中繪製的圖案數據,將應用到這個貼圖中\r\n        setTimeout(() => {\r\n            console.log(this._texture);\r\n\r\n        }, 1000);\r\n        this._previousLineWidth = drawBordInitializeData.previousLineWidth;                 //上一次繪製的直線的寬度\r\n        this._previousLineCircleEnd = drawBordInitializeData.previousLineCircleEnd;         //上一次绘制的直线的端点样式\r\n        this._pointColor = new Array<Array<number>>();                                      //初始像素點\r\n        this._maskPoint = new Array<Array<boolean>>();                                      //紀錄每個像素點能否繪製,false表示不能繪製,true表示能繪製\r\n    }\r\n\r\n    /**\r\n     * 初始化參數\r\n     */\r\n    private initParameter(drawBordInitializeData?: IDrawBordInitializeData) {\r\n        this.initPointColor();\r\n        this.initMaskPoint();\r\n        this.initPixelColor();\r\n        this.initLineData();\r\n        this.setColor(drawBordInitializeData.color);\r\n    }\r\n\r\n    /**\r\n     * 將世界座標轉換為該物件座標\r\n     * @param {cc.Vec2} position\r\n     * @returns {cc.Vec2}\r\n     */\r\n    public transitionPosition(position: cc.Vec2) {\r\n        const board: cc.Node = this._board;\r\n        const loc: cc.Vec2 = board.convertToNodeSpaceAR(position);\r\n        loc.x += this._width / 2;\r\n        loc.y += this._height / 2;\r\n        return loc;\r\n    }\r\n\r\n    /**\r\n     * 初始化像素點\r\n     * @private\r\n     */\r\n    private initPointColor() {\r\n        //初始化所有像素位置\r\n        for (let x = 0; x < this._width; ++x) {\r\n            if (!this._pointColor[x]) {\r\n                this._pointColor[x] = [];\r\n            }\r\n            for (let y = 0; y < this._height; ++y) {\r\n                this._pointColor[x][y] = 0;\r\n            }\r\n        }\r\n        this._colorCount = {};\r\n        this._colorCount[0] = this._width * this._height;\r\n    }\r\n\r\n    /**\r\n     * 初始化遮罩區\r\n     * @private\r\n     */\r\n    private initMaskPoint() {\r\n        //初始化可繪製的範圍\r\n        for (let x = 0; x < this._width; x++) {\r\n            if (!this._maskPoint[x]) {\r\n                this._maskPoint[x] = [];\r\n            }\r\n            for (let y = 0; y < this._height; ++y) {\r\n                this._maskPoint[x][y] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化像素顏色\r\n     * @private\r\n     */\r\n    private initPixelColor() {\r\n        this._pixelBuffer = new ArrayBuffer(this.width * this.height * 4);\r\n        this._pixelColor = new Uint8Array(this._pixelBuffer);\r\n        this.pixelColor.fill(0);\r\n    }\r\n\r\n    /**\r\n     * 初始當前繪製的線條\r\n     * @private\r\n     */\r\n    private initLineData() {\r\n        this._previousLineEndPos = new MyVec2();\r\n        this._previousLineEndPosT = new MyVec2();\r\n        this._previousLineEndPosB = new MyVec2();\r\n        this._previousLineCircleEnd = true;\r\n    }\r\n\r\n    /**\r\n     * 清空數據\r\n     */\r\n    public reset() {\r\n        this.resetPointColor();\r\n        this.resetMaskPoint();\r\n        this.resetPixelColor();\r\n    }\r\n\r\n    /**\r\n     * 重製當前紀錄的點數據\r\n     * @private\r\n     */\r\n    private resetPointColor() {\r\n\r\n        for (let x = this._width - 1; x >= 0; --x) {\r\n            for (let y = this._height - 1; y >= 0; --y) {\r\n                this._pointColor[x][y] = 0;\r\n            }\r\n        }\r\n        for (let key in this._colorCount) {\r\n            this._colorCount[key] = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重製當前無法繪畫的點位置\r\n     * @private\r\n     */\r\n    private resetMaskPoint() {\r\n        for (let x = this._width - 1; x >= 0; --x) {\r\n            for (let y = this._height - 1; y >= 0; --y) {\r\n                this._maskPoint[x][y] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重製當前所有點位置的顏色\r\n     * @private\r\n     */\r\n    private resetPixelColor() {\r\n        this._pixelColor.fill(0);\r\n    }\r\n\r\n    /**\r\n     * 設置畫板使用的顏色\r\n     * @param {cc.Color} color\r\n     */\r\n    public setColor(color: cc.Color) {\r\n        this._recentColor = this.convertToNumber(color);\r\n        const hexColor = this.convertToNumber(color);\r\n        if (!this._colorCount[hexColor]) {\r\n            this._colorCount[hexColor] = 0;\r\n        }\r\n        this._temporaryColor = this._recentColor;\r\n        this.temporaryR = color.r;\r\n        this.temporaryG = color.g;\r\n        this.temporaryB = color.b;\r\n        this.temporaryA = color.a;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 將RGBA顏色分量轉換為一個數值表示的顏色，顏色分量為0~255之間的值\r\n     * @param {cc.Color} color\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    private convertToNumber(color: cc.Color): number {\r\n        //顏色值將用於數組索引，不能為負數，故紅色分量為奇數時將減1變為偶數\r\n        return ((color.r & 0xfe) << 23) | (color.g << 16) | (color.b << 8) | color.a;\r\n    }\r\n\r\n    /**\r\n     * 創建自訂義 v2 數據\r\n     * @param {number} x - x軸位置 (默認 = 0)\r\n     * @param {number} y - y軸位置 (默認 = 0)\r\n     * @returns {IVec2}\r\n     */\r\n    buildMyVec2(x?: number, y?: number): IVec2 {\r\n        return new MyVec2(x, y);\r\n    }\r\n\r\n    /**\r\n     * 繪製任意矩形\r\n     * @private\r\n     */\r\n    public drawTriangle(positionList: IVec2[]) {\r\n        positionList.sort((a, b) => {\r\n            return a.x - b.x;\r\n        });\r\n        let p1 = positionList[0];\r\n        let p2 = positionList[1];\r\n        let p3 = positionList[2];\r\n        if (p1.x == p2.x) {\r\n            if (p1.x == p3.x) return;\r\n            if (p1.y < p2.y) {\r\n                p1 = positionList[1];\r\n                p2 = positionList[0];\r\n            }\r\n            this.drawVerticalTriangle(p1, p2, p3);\r\n            return;\r\n        }\r\n        let k = (p3.y - p1.y) / (p3.x - p1.x);\r\n        let p4 = new MyVec2(p2.x, Math.round(p1.y + (p2.x - p1.x) * k));\r\n        if (p4.y == p2.y) return;\r\n        if (p4.y < p2.y) {\r\n            this.drawVerticalTriangle(p2, p4, p1);\r\n            this.drawVerticalTriangle(p2, p4, p3);\r\n        } else {\r\n            this.drawVerticalTriangle(p4, p2, p1);\r\n            this.drawVerticalTriangle(p4, p2, p3);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 繪製一條邊與Y軸平行的三角形\r\n     * @param p1    三角形垂直邊的 上 頂點坐標\r\n     * @param p2    三角形垂直邊的 下 頂點坐標\r\n     * @param p3    三角形 左側或右側 頂點坐標\r\n     */\r\n    public drawVerticalTriangle(p1: IVec2, p2: IVec2, p3: IVec2) {\r\n        if (p3.x == p1.x) return;\r\n        let k1 = (p3.y - p1.y) / (p3.x - p1.x);\r\n        let k2 = (p3.y - p2.y) / (p3.x - p2.x);\r\n        let maxX = p3.x, minX = p1.x;\r\n        if (maxX < minX) {\r\n            maxX = p1.x;\r\n            minX = p3.x;\r\n        }\r\n        minX = this.minX(minX);\r\n        maxX = this.maxX(maxX);\r\n        for (let x = minX; x <= maxX; ++x) {\r\n            let maxY = this.clampY(Math.round(p1.y + (x - p1.x) * k1));\r\n            let minY = this.clampY(Math.round(p2.y + (x - p2.x) * k2));\r\n            this.drawColPixel(minY, maxY, x);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 連續繪製一列的像素點\r\n     * @param {number} startY    起點Y坐標\r\n     * @param {number} endY      終點Y坐標\r\n     * @param {number} x        X坐標\r\n     */\r\n    private drawColPixel(startY: number, endY: number, x: number) {\r\n        let index = (startY * this.width + x) * 4;\r\n        for (let y = startY; y <= endY; ++y) {\r\n            this.updateNowDrawColorData(index, x, y);\r\n            index += this.width * 4;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新當前繪製的數據\r\n     * @param {number} index - 當前要改變的像素分量\r\n     * @param {number} x - 像素 X 軸位置\r\n     * @param {number} y - 像素 Y 軸位置\r\n     * @private\r\n     */\r\n    private updateNowDrawColorData(index: number, x: number, y: number) {\r\n        if (this.maskPoint[x][y] != false && this.pointColor[x][y] != this._temporaryColor) {\r\n            this.pixelColor[index] = this.temporaryR;\r\n            this.pixelColor[index + 1] = this.temporaryG;\r\n            this.pixelColor[index + 2] = this.temporaryB;\r\n            this.pixelColor[index + 3] = this.temporaryA;\r\n            let c = this.pointColor[x][y];\r\n            this.colorCount[c]--;\r\n            this.colorCount[this._temporaryColor]++;\r\n            this.pointColor[x][y] = this._temporaryColor;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 繪製圓形\r\n     * @param {number} x - X軸位置\r\n     * @param {number} y - Y軸位置\r\n     * @param {number} radius - 半徑\r\n     * @private\r\n     */\r\n    public drawCircle(x: number, y: number, radius: number) {\r\n        radius = Math.round(radius);\r\n        if (radius == 0) return;\r\n        //三角形的斜邊的平方\r\n        let dis = radius * radius;\r\n        let minY = this.clampY(y - radius);\r\n        let maxY = this.clampY(y + radius);\r\n        for (let j = minY; j <= maxY; ++j) {\r\n            let r = j - y;\r\n            r = Math.round(Math.sqrt(dis - r * r));\r\n            let minX = this.clampX(x - r);\r\n            let maxX = this.clampX(x + r);\r\n            this.drawRowPixel(minX, maxX, j);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 连续绘制一行中的像素点\r\n     * @param startX    起点X坐标\r\n     * @param endX      终点X坐标\r\n     * @param y         Y坐标\r\n     */\r\n    private drawRowPixel(startX: number, endX: number, y: number) {\r\n        let index = (y * this.width + startX) * 4;\r\n        for (let x = startX; x <= endX; ++x) {\r\n            this.updateNowDrawColorData(index, x, y);\r\n            index += 4;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 繪製直線，不包含線段端點樣式\r\n     * @param {IVec2} p1 - 線段起點坐標\r\n     * @param {IVec2} p2 - 線段終點坐標\r\n     * @param {number} width - 線段寬度\r\n     * @param {number} offsetX - X軸偏移位置\r\n     * @param {number} offsetY - Y軸偏移位置\r\n     * @param {number} slopeRate - 斜率\r\n     * @private\r\n     */\r\n    public drawLine(p1: IVec2, p2: IVec2, width: number, offsetX: number, offsetY: number, slopeRate: number) {\r\n        if (p1.y == p2.y) {\r\n            //水平直線\r\n            let x = p1.x < p2.x ? p1.x : p2.x;\r\n            this.drawRect(new MyVec2(x, Math.round(p1.y - width * 0.5)), Math.abs(p1.x - p2.x), width);\r\n        } else if (p1.x == p2.x) {\r\n            //垂直直線\r\n            let y = p1.y < p2.y ? p1.y : p2.y;\r\n            this.drawRect(new MyVec2(Math.round(p1.x - width * 0.5), y), width, Math.abs(p1.y - p2.y));\r\n        } else {\r\n            //傾斜直線\r\n            let inverseK = (p1.x - p2.x) / (p1.y - p2.y);\r\n            let p1t = new MyVec2(p1.x - offsetX, p1.y + offsetY);\r\n            let p1b = new MyVec2(p1.x + offsetX, p1.y - offsetY);\r\n            let p2t = new MyVec2(p2.x - offsetX, p2.y + offsetY);\r\n            let p2b = new MyVec2(p2.x + offsetX, p2.y - offsetY);\r\n            let p1c = new MyVec2();\r\n            let p2c = new MyVec2();\r\n            let height = Math.round(width * slopeRate);\r\n            if (p2.y > p1.y) {\r\n                if (p1b.x < p2t.x) {\r\n                    p1c.x = p1b.x;\r\n                    p1c.y = p1b.y + height;\r\n                    p2c.x = p2t.x;\r\n                    p2c.y = p2t.y - height;\r\n                    this.drawVerticalTriangle(p1c, p1b, p1t);\r\n                    this.drawParallelogram(p1b, p2c, height);\r\n                    this.drawVerticalTriangle(p2t, p2c, p2b);\r\n                } else {\r\n                    p1c.x = p1b.x;\r\n                    p1c.y = Math.round(p2t.y - (p1c.x - p2t.x) * inverseK);\r\n                    p2c.x = p2t.x;\r\n                    p2c.y = Math.round(p1b.y + (p1b.x - p2c.x) * inverseK);\r\n                    this.drawVerticalTriangle(p2t, p2c, p1t);\r\n                    this.drawParallelogram(p2c, p1b, p2t.y - p2c.y);\r\n                    this.drawVerticalTriangle(p1c, p1b, p2b);\r\n                }\r\n            } else {\r\n                if (p1t.x < p2b.x) {\r\n                    p1c.x = p1t.x;\r\n                    p1c.y = p1t.y - height;\r\n                    p2c.x = p2b.x;\r\n                    p2c.y = p2b.y + height;\r\n                    this.drawVerticalTriangle(p1t, p1c, p1b);\r\n                    this.drawParallelogram(p1c, p2b, height);\r\n                    this.drawVerticalTriangle(p2c, p2b, p2t);\r\n                } else {\r\n                    p1c.x = p1t.x;\r\n                    p1c.y = Math.round(p2b.y - (p1c.x - p2b.x) * inverseK);\r\n                    p2c.x = p2b.x;\r\n                    p2c.y = Math.round(p1t.y + (p1t.x - p2c.x) * inverseK);\r\n                    this.drawVerticalTriangle(p2c, p2b, p1b);\r\n                    this.drawParallelogram(p2b, p1c, p1t.y - p1c.y);\r\n                    this.drawVerticalTriangle(p1t, p1c, p2t);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 繪製矩形\r\n     * @param {IVec2} p - 矩形左下頂點的坐標\r\n     * @param {number} w - 矩形寬度\r\n     * @param {number} h - 矩形高度\r\n     * @private\r\n     */\r\n    private drawRect(p: IVec2, w: number, h: number) {\r\n        let minX = this.clampX(p.x);\r\n        let maxX = this.clampX(p.x + w);\r\n        let minY = this.clampY(p.y);\r\n        let maxY = this.clampY(p.y + h);\r\n        for (let y = minY; y <= maxY; ++y) {\r\n            this.drawRowPixel(minX, maxX, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 繪製平行四邊形，平行四邊形的左右兩邊與Y軸平行\r\n     * @param p1        左下頂點坐標\r\n     * @param p2        右下頂點坐標\r\n     * @param height    垂直邊高度\r\n     */\r\n    private drawParallelogram(p1: IVec2, p2: IVec2, height: number) {\r\n        if (p1.x == p2.x) return;\r\n        let k = (p2.y - p1.y) / (p2.x - p1.x);\r\n        let minX = this.minX(p1.x);\r\n        let maxX = this.maxX(p2.x);\r\n        for (let x = minX; x <= maxX; ++x) {\r\n            let minY = p1.y + Math.round((x - p1.x) * k);\r\n            let maxY = minY + height;\r\n            minY = this._minY(minY);\r\n            maxY = this._maxY(maxY);\r\n            this.drawColPixel(minY, maxY, x);\r\n        }\r\n    }\r\n\r\n    //內部繪製方法\r\n    private minX(x: number): number {\r\n        return x >= 0 ? x : 0;\r\n    }\r\n\r\n    private maxX(x: number): number {\r\n        return x < this._width ? x : this._width - 1;\r\n    }\r\n\r\n    private _minY(y: number): number {\r\n        return y >= 0 ? y : 0;\r\n    }\r\n\r\n    private _maxY(y: number): number {\r\n        return y < this._height ? y : this._height - 1;\r\n    }\r\n\r\n    private clampX(x: number): number {\r\n        if (x < 0) return 0;\r\n        if (x >= this._width) return this._width - 1;\r\n        return x;\r\n    }\r\n\r\n    private clampY(y: number): number {\r\n        if (y < 0) return 0;\r\n        if (y >= this._height) return this._height - 1;\r\n        return y;\r\n    }\r\n\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    get texture(): cc.Texture2D {\r\n        return this._texture;\r\n    }\r\n\r\n    get pointColor(): Array<Array<number>> {\r\n        return this._pointColor;\r\n    }\r\n\r\n    get maskPoint(): Array<Array<boolean>> {\r\n        return this._maskPoint;\r\n    }\r\n\r\n    get pixelBuffer(): ArrayBuffer {\r\n        return this._pixelBuffer;\r\n    }\r\n\r\n    get pixelColor(): Uint8Array {\r\n        return this._pixelColor;\r\n    }\r\n\r\n    get colorCount(): IColorCount {\r\n        return this._colorCount;\r\n    }\r\n\r\n    get recentColor(): number {\r\n        return this._recentColor;\r\n    }\r\n\r\n    get temporaryColor(): number {\r\n        return this._temporaryColor;\r\n    }\r\n\r\n    get previousLineEndPos(): MyVec2 {\r\n        return this._previousLineEndPos;\r\n    }\r\n\r\n    get previousLineEndPosT(): MyVec2 {\r\n        return this._previousLineEndPosT;\r\n    }\r\n\r\n    get previousLineEndPosB(): MyVec2 {\r\n        return this._previousLineEndPosB;\r\n    }\r\n\r\n    get previousLineCircleEnd(): boolean {\r\n        return this._previousLineCircleEnd;\r\n    }\r\n\r\n    get previousLineWidth(): number {\r\n        return this._previousLineWidth;\r\n    }\r\n\r\n    get board(): cc.Node {\r\n        return this._board;\r\n    }\r\n}\r\n\r\n/**\r\n * 自訂義 Vec2\r\n */\r\nclass MyVec2 implements IVec2 {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public set(p: number | MyVec2, y?: number) {\r\n        if (typeof p === \"number\") {\r\n            this.x = p;\r\n            this.y = y;\r\n        } else {\r\n            this.x = p.x;\r\n            this.y = p.y;\r\n        }\r\n    }\r\n}\r\n"]}