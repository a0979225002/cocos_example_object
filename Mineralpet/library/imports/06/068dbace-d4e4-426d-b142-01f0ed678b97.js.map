{"version":3,"sources":["assets\\Script\\drawBoard\\DrawBoard.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DrawBoardModel from \"./DrawBoardModel\";\r\n\r\n/**\r\n * @Author 蕭立品\r\n * @Description 畫板\r\n * @Date 2022-08-09 上午 11:44\r\n * @Version 1.0\r\n */\r\nexport default class DrawBoard {\r\n\r\n    private model: DrawBoardModel;\r\n\r\n    /**\r\n     * 創建畫板\r\n     * @param {drawBordData} drawBordData - 初始化資料\r\n     */\r\n    constructor(drawBordData: DrawBoardModel) {\r\n        this.model = drawBordData;\r\n    }\r\n\r\n\r\n    /**\r\n     * 移動畫筆到指定的位置,使用 lineTo() 可以將該點與中點連成一條線\r\n     * @param {cc.Vec2} position\r\n     */\r\n    public moveTo(position: cc.Vec2) {\r\n        const loc = this.model.transitionPosition(position);\r\n        const x = Math.round(loc.x);\r\n        const y = Math.round(loc.y);\r\n        this.model.previousLineEndPos.set(x, y);\r\n        this.model.previousLineEndPosT.set(x, y);\r\n        this.model.previousLineEndPosB.set(x, y);\r\n    }\r\n\r\n\r\n    /**\r\n     * 繪製到指定坐標的直線，起點為上一次繪製的直線的終點，使用默認的顏色、寬度和線段端點樣式\r\n     * @param {cc.Vec2} position\r\n     */\r\n    public lineTo(position: cc.Vec2) {\r\n        const loc = this.model.transitionPosition(position);\r\n        const x = Math.round(loc.x);\r\n        const y = Math.round(loc.y);\r\n        if (this.model.previousLineEndPos.x == x && this.model.previousLineEndPos.y == y) return;\r\n        const width = this.model.previousLineWidth;\r\n        const circleEnd = this.model.previousLineCircleEnd;\r\n        let beforeX = this.model.previousLineEndPos.x;\r\n        let beforeY = this.model.previousLineEndPos.y;\r\n        let afterX = x;\r\n        let afterY = y;\r\n        if (beforeX > afterX) {\r\n            //強制轉換,讓after 永遠大於 before\r\n            beforeX = afterX;\r\n            beforeY = afterY;\r\n            afterX = this.model.previousLineEndPos.x;\r\n            afterY = this.model.previousLineEndPos.y;\r\n        }\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n        let rateK = 1;\r\n        if (beforeX == afterX) {\r\n            offsetX = Math.round(width * 0.5);\r\n        } else if (beforeY == afterY) {\r\n            offsetY = Math.round(width * 0.5);\r\n        } else {\r\n            let k = (afterY - beforeY) / (afterX - beforeX);\r\n            rateK = Math.sqrt(k * k + 1);\r\n            offsetY = width * 0.5 / rateK;\r\n            offsetX = Math.round(offsetY * k);\r\n            offsetY = Math.round(offsetY);\r\n        }\r\n        if (!circleEnd) {\r\n            //如果當前繪製頂點無須圓角\r\n            if (this.model.previousLineEndPos.x != this.model.previousLineEndPosT.x\r\n                || this.model.previousLineEndPos.y != this.model.previousLineEndPosT.y) {\r\n                let p1 = this.model.buildMyVec2(this.model.previousLineEndPos.x - offsetX, this.model.previousLineEndPos.y + offsetY);\r\n                let p2 = this.model.buildMyVec2(this.model.previousLineEndPos.x + offsetX, this.model.previousLineEndPos.y - offsetY);\r\n                this.model.drawTriangle([p1, p2, this.model.previousLineEndPosT]);\r\n                this.model.drawTriangle([p1, p2, this.model.previousLineEndPosB]);\r\n            }\r\n        } else {\r\n            this.model.drawCircle(beforeX, beforeY, width * 0.5);\r\n            this.model.drawCircle(afterX, afterY, width * 0.5);\r\n        }\r\n        const p1 = this.model.buildMyVec2(beforeX, beforeY);\r\n        const p2 = this.model.buildMyVec2(afterX, afterY);\r\n        this.model.drawLine(p1, p2, width, offsetX, offsetY, rateK);\r\n\r\n        this.model.previousLineEndPos.set(x, y);\r\n        this.model.previousLineEndPosT.set(x - offsetX, y + offsetY);\r\n        this.model.previousLineEndPosB.set(x + offsetX, y - offsetY);\r\n    }\r\n\r\n    /**\r\n     * 獲取當前畫板中紀錄的每個像素位置顏色的數據\r\n     * @returns {Uint8Array}\r\n     */\r\n    public getPixelColorData(): Uint8Array {\r\n        return this.model.pixelColor;\r\n    }\r\n\r\n    /**\r\n     * 將畫布上玩家繪製的筆跡響應到圖片中\r\n     */\r\n    public updateTexture(): void {\r\n        const pixelColor = this.getPixelColorData();\r\n        const texture = this.model.texture;\r\n        console.log(this.model.texture);\r\n\r\n        const opts = texture[\"_getOpts\"]();\r\n        opts.image = pixelColor;\r\n        opts.images = [opts.image];\r\n        texture.update(opts);\r\n    }\r\n\r\n    /**\r\n     * 清空畫布\r\n     */\r\n    public empitDrawBord() {\r\n        this.model.reset();\r\n    }\r\n}\r\n"]}