{
  "ver": "1.0.25",
  "uuid": "d211e50b-58af-4038-bb30-3692a11a8d91",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nuniform float time;\n#if USE_TEXTURE\n  varying vec2 v_uv0;\n  uniform sampler2D u_normalMap;\n  uniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 color = v_color;\n  float value = texture2D(u_normalMap, v_uv0).r;\n  if (value < time) {\n    discard;\n  }\n  color *= texture2D(texture, v_uv0);\n  if (value < time + 0.05) {\n    color = vec4(0.9, 0.6, 0.3, color.a);\n  }\n  gl_FragColor = color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec4 v_color;\nuniform ARGS{\n  float time;\n};\n#if USE_TEXTURE\n  in vec2 v_uv0;\n  uniform sampler2D u_normalMap;\n  uniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 color = v_color;\n  float value = texture2D(u_normalMap, v_uv0).r;\n  if (value < time) {\n    discard;\n  }\n  color *= texture2D(texture, v_uv0);\n  if (value < time + 0.05) {\n    color = vec4(0.9, 0.6, 0.3, color.a);\n  }\n  gl_FragColor = color;\n}"
      }
    }
  ],
  "subMetas": {}
}