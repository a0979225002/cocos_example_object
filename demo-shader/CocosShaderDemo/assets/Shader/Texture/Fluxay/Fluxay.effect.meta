{
  "ver": "1.0.22",
  "uuid": "d8d4e3a8-e6dc-408d-bba5-ab3e7df20cc2",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n\nuniform float time;\nvoid main () {\n  float time = time * .5+5.;\n  vec2 uv = v_uv0.xy;\n\n  vec2 p = mod(uv*6.12, 6.12)-250.0;\n\n  vec2 i = vec2(p);\n  float c = 0.8;\n  float inten = .0045;\n\n  for (int n = 0; n < 5; n++) \n  {\n      float t =  time * (1.0 - (3.5 / float(n+1)));\n      i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(1.5*t + i.x));\n      c += 1.0/length(vec2(p.x / (cos(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n  }\n  c /= float(5);\n  c = 1.17-pow(c, 1.4);\n  vec4 tex = texture2D(texture,uv);\n  vec3 color = vec3(pow(abs(c), 20.0));\n  color = clamp(color + vec3(0.0, 0.0, .0), 0.0, tex.a);\n\n  float alpha = c*tex[3];  \n  tex[0] = tex[0] + color[0]*alpha; \n  tex[1] = tex[1] + color[1]*alpha; \n  tex[2] = tex[2] + color[2]*alpha; \n  gl_FragColor = v_color * tex;\n}\n"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\nin vec2 a_uv0;\nout vec2 v_uv0;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\n\nuniform TIME {\n  float time;\n}\n\nvoid main () {\n  float time = time * .5+5.;\n  vec2 uv = v_uv0.xy;\n\n  vec2 p = mod(uv*6.12, 6.12)-250.0;\n\n  vec2 i = vec2(p);\n  float c = 0.8;\n  float inten = .0045;\n\n  for (int n = 0; n < 5; n++) \n  {\n      float t =  time * (1.0 - (3.5 / float(n+1)));\n      i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(1.5*t + i.x));\n      c += 1.0/length(vec2(p.x / (cos(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n  }\n  c /= float(5);\n  c = 1.17-pow(c, 1.4);\n  vec4 tex = texture2D(texture,uv);\n  vec3 color = vec3(pow(abs(c), 20.0));\n  color = clamp(color + vec3(0.0, 0.0, .0), 0.0, tex.a);\n\n  float alpha = c*tex[3];  \n  tex[0] = tex[0] + color[0]*alpha; \n  tex[1] = tex[1] + color[1]*alpha; \n  tex[2] = tex[2] + color[2]*alpha; \n  gl_FragColor = v_color * tex;\n}\n"
      }
    }
  ],
  "subMetas": {}
}