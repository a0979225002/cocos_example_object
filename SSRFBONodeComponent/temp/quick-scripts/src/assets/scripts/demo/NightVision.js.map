{"version":3,"sources":["assets\\scripts\\demo\\NightVision.js"],"names":["cc","Class","Component","properties","spine","Node","dragon","binocular","onLoad","debug","setDisplayStats","start","tween","by","position","v2","self","node","on","EventType","TOUCH_MOVE","event","canvas","find","location","convertToNodeSpaceAR","touch","getLocation"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAEJ,EAAE,CAACK,IADF;AAERC,IAAAA,MAAM,EAAEN,EAAE,CAACK,IAFH;AAGRE,IAAAA,SAAS,EAAEP,EAAE,CAACK,IAHN,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBQ,GAHP;AAwBL;AAEAG,EAAAA,MA1BK,oBA0BK;AACNR,IAAAA,EAAE,CAACS,KAAH,CAASC,eAAT,CAAyB,IAAzB;AACH,GA5BI;AA8BLC,EAAAA,KA9BK,mBA8BI;AACLX,IAAAA,EAAE,CAACY,KAAH,CAAS,KAAKR,KAAd,EACKS,EADL,CACQ,EADR,EACY;AAAEC,MAAAA,QAAQ,EAAEd,EAAE,CAACe,EAAH,CAAM,GAAN,EAAW,CAAX;AAAZ,KADZ,EAEKJ,KAFL;AAIAX,IAAAA,EAAE,CAACY,KAAH,CAAS,KAAKN,MAAd,EACKO,EADL,CACQ,EADR,EACY;AAAEC,MAAAA,QAAQ,EAAEd,EAAE,CAACe,EAAH,CAAM,IAAN,EAAY,CAAZ;AAAZ,KADZ,EAEKJ,KAFL;AAIA,QAAIK,IAAI,GAAG,IAAX,CATK,CAUL;;AACA,SAAKC,IAAL,CAAUC,EAAV,CAAalB,EAAE,CAACK,IAAH,CAAQc,SAAR,CAAkBC,UAA/B,EAA2C,UAAUC,KAAV,EAAiB;AACxD,UAAIC,MAAM,GAAGtB,EAAE,CAACuB,IAAH,CAAQ,QAAR,CAAb;AACA,UAAIC,QAAQ,GAAGF,MAAM,CAACG,oBAAP,CAA4BJ,KAAK,CAACK,KAAN,CAAYC,WAAZ,EAA5B,CAAf;AACAX,MAAAA,IAAI,CAACT,SAAL,CAAeO,QAAf,GAA0BU,QAA1B;AACH,KAJD,EAIG,IAJH,EAXK,CAgBL;AACA;AACH;AAhDI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        spine: cc.Node,\n        dragon: cc.Node,\n        binocular: cc.Node,\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        cc.debug.setDisplayStats(true);\n    },\n\n    start () {\n        cc.tween(this.spine)\n            .by(15, { position: cc.v2(900, 0) })\n            .start();\n\n        cc.tween(this.dragon)\n            .by(20, { position: cc.v2(1100, 0) })\n            .start();\n            \n        let self = this;\n        // this.node.on(cc.Node.EventType.TOUCH_START, this._touchStartCallback, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\n            var canvas = cc.find(\"Canvas\");\n            var location = canvas.convertToNodeSpaceAR(event.touch.getLocation());\n            self.binocular.position = location;\n        }, this);\n        // this.node.on(cc.Node.EventType.TOUCH_END, this._touchEndCallback, this);\n        // this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchCancelCallback, this);\n    }\n});\n"]}