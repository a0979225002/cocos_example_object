// 
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
}%

CCProgram vs %{
    precision highp float;
    #include <cc-global>
    #include <cc-local>

    in vec3 a_position;
    
    #if USE_TEXTURE
        in vec2 a_uv0;
        out vec2 v_uv0;
    #endif

    in vec4 a_color;
    out vec4 v_color;

    void main () {
        mat4 mvp;
        #if CC_USE_MODEL
            mvp = cc_matViewProj * cc_matWorld;
        #else
            mvp = cc_matViewProj;
        #endif
        
         #if USE_TEXTURE
            v_uv0 = a_uv0;
        #endif

        v_color = a_color;
        gl_Position = mvp * vec4(a_position, 1);
    }
}%

CCProgram fs %{
    precision highp float;
    #include <cc-global>

    #if USE_TEXTURE
        in vec2 v_uv0;
        uniform sampler2D texture;
    #endif

    in vec4 v_color;

    void main () {
        vec2 uv = v_uv0;
        vec4 c = vec4(1, 1, 1, 1);
        #if USE_TEXTURE
            c = texture2D(texture, v_uv0);
        #endif
        //
        if (uv.y < 0.5) {
            if (uv.x < 0.5) {
                gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0) * c; // up left to red
            }
            else {
                gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0) * c; // up right to green
            }
        }
        else {
            if (uv.x < 0.5) {
                gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0) * c; // down left to blue
            }
            else {
                gl_FragColor = vec4(0.0, 1.0, 1.0, 1.0) * c; // down right to black
            }
        }
    }
}%
