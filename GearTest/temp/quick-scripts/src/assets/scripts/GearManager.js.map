{"version":3,"sources":["assets\\scripts\\GearManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,uCAAiC;AAE3B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,+BAAY;IAArD;;IA6BA,CAAC;IA3BG,2BAAK,GAAL;QACI,wBAAwB;QACxB,sBAAsB;QACtB,yBAAyB;QACzB,IAAI,SAAS,GAAG,IAAI,CAAC,uBAAuB,CAAC,kBAAQ,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACvC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC3B,eAAe;YACf,IAAI,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACnF,sBAAsB;YACtB,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;YAC7C,qCAAqC;YACrC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC,oDAAoD;YACpD,IAAI,MAAM,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACvD,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACxB,wBAAwB;YACxB,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;SACtD;IACL,CAAC;IA1BgB,WAAW;QAD/B,OAAO;OACa,WAAW,CA6B/B;IAAD,kBAAC;CA7BD,AA6BC,CA7BwC,EAAE,CAAC,SAAS,GA6BpD;kBA7BoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport GearItem from './GearItem'\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GearManager extends cc.Component {\r\n\r\n    start() {\r\n        //这里仅按节点顺序依次传递，用于演示齿轮对齐。\r\n        //实际项目应根据距离与半径来判断是否接触，\r\n        //再以有动力的齿轮为根节点生成节点树，依次传递。\r\n        let gearItems = this.getComponentsInChildren(GearItem);\r\n        let pos1 = new cc.Vec2();\r\n        let pos2 = new cc.Vec2();\r\n        for (let i = 1; i < gearItems.length; ++i) {\r\n            let prev = gearItems[i - 1];\r\n            let cur = gearItems[i];\r\n            prev.node.getPosition(pos1);\r\n            cur.node.getPosition(pos2);\r\n            //齿轮2相对齿轮1位置的角度\r\n            let angle = cc.misc.radiansToDegrees(Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x));\r\n            //齿轮1从0度转至与齿轮2相切，经过的角度\r\n            let angle2 = angle - (prev.node.angle % 360);\r\n            //齿轮1旋转整数齿后，接近相切，又转动f齿（0到1），才正式与齿轮2相切\r\n            let f = (angle2 / (360 / prev.num)) % 1;\r\n            //齿轮2的0度位置旋转至与齿轮1相切（angle+180度）后，再转动0.5齿（使凹凸相对），再转动f\r\n            let angle3 = angle + 180 + (360 / cur.num) * (0.5 + f);\r\n            cur.node.angle = angle3;\r\n            //齿轮2速度与齿轮1速度，与它们的齿轮数成反比\r\n            cur.velocity = -prev.velocity * prev.num / cur.num;\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}