{
  "ver": "1.0.23",
  "uuid": "6dceba53-4ded-44c2-88d0-811d641f79a6",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\nvarying vec4 v_color;\n\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n\nuniform vec4 outColor2;\nuniform vec4 outColor1;\nuniform vec2 offset;\nuniform float zoom;\nuniform float c_real;\nuniform float c_image;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n\n  #if USE_TEXTURE\n    float real = (v_uv0.x-0.5)/zoom + offset.x;\n    float image = (v_uv0.y-0.5)/zoom + offset.y;\n    float c_real = real;\n    float c_image = image;\n    float r2 = 0.0;\n    float conut = 0.0;\n    for(float i = 0.0; i < 9999.0; i++){\n      float tmp_real = real;\n      real = (tmp_real*tmp_real) - (image*image) + c_real;\n      image = 2.0*tmp_real*image + c_image;\n      r2 = real*real + image*image;\n      conut = i;\n      if(r2 >= 4.0){\n        break;\n      }\n    }\n    if(r2 < 4.0){\n      o = v_color;\n    }else{\n      o = vec4(mix(outColor1.rgb, outColor2.rgb, fract(conut*0.07)), 1);\n    }\n  #endif\n\n  gl_FragColor = o;\n}\n"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\nin vec4 v_color;\n\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n\nuniform LAMYOUMG_COM {\n  vec4 outColor2;\n  vec4 outColor1;\n  vec2 offset;\n  float zoom;\n  float c_real;\n  float c_image;\n} \n\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n\n  #if USE_TEXTURE\n    float real = (v_uv0.x-0.5)/zoom + offset.x;\n    float image = (v_uv0.y-0.5)/zoom + offset.y;\n    float c_real = real;\n    float c_image = image;\n    float r2 = 0.0;\n    float conut = 0.0;\n    for(float i = 0.0; i < 9999.0; i++){\n      float tmp_real = real;\n      real = (tmp_real*tmp_real) - (image*image) + c_real;\n      image = 2.0*tmp_real*image + c_image;\n      r2 = real*real + image*image;\n      conut = i;\n      if(r2 >= 4.0){\n        break;\n      }\n    }\n    if(r2 < 4.0){\n      o = v_color;\n    }else{\n      o = vec4(mix(outColor1.rgb, outColor2.rgb, fract(conut*0.07)), 1);\n    }\n  #endif\n\n  gl_FragColor = o;\n}\n"
      }
    }
  ],
  "subMetas": {}
}