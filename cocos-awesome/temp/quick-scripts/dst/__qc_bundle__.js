
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/Scene/Bullet_Tracking/Bullet_Tracking');
require('./assets/Scene/Change_clothes/Change_clothes');
require('./assets/Scene/Circle_avatar/Circle_avatar');
require('./assets/Scene/Coin_fly_to_wallet/Coin_fly_to_wallet');
require('./assets/Scene/Dissolve_color/Dissolve_color');
require('./assets/Scene/Follow_spot/Follow_spot');
require('./assets/Scene/Home/BackHomeBtn');
require('./assets/Scene/Home/Home');
require('./assets/Scene/Infinite_bg_scroll/Infinite_bg_scroll');
require('./assets/Scene/Joystick/Joystick');
require('./assets/Scene/Magnifying_mirror/Magnifying_mirror');
require('./assets/Scene/Metaball/Metaball');
require('./assets/Scene/Metaball/Untitled-1');
require('./assets/Scene/Mosaic/Mosaic');
require('./assets/Scene/Moving_ghost/Moving_ghost');
require('./assets/Scene/Photo_gallery/Photo_gallery');
require('./assets/Scene/Scratch_ticket/Scratch_ticket');
require('./assets/Scene/Screen_vibrating/Screen_vibrating');
require('./assets/Scene/Specular_gloss/Specular_gloss');
require('./assets/Scene/Typer/Typer');
require('./assets/Scene/Water_spread/Water_spread');
require('./assets/migration/use_reversed_rotateBy');
require('./assets/migration/use_v2.1-2.2.1_cc.Toggle_event');
require('./assets/src/MySceneStyle');
require('./assets/src/SystemCenter');
require('./assets/src/dist/tcc/fcc-template');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/migration/use_reversed_rotateBy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '88ed3/xkXpAZb4Su0r9Dicc', 'use_reversed_rotateBy');
// migration/use_reversed_rotateBy.js

"use strict";

/*
 * This script is automatically generated by Cocos Creator and is only used for projects compatible with v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 versions.
 * You do not need to manually add this script in any other project.
 * If you don't use cc.Action in your project, you can delete this script directly.
 * If your project is hosted in VCS such as git, submit this script together.
 *
 * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 版本的工程，
 * 你无需在任何其它项目中手动添加此脚本。
 * 如果你的项目中没用到 Action，可直接删除该脚本。
 * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。
 */
cc.RotateBy._reverse = true;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbWlncmF0aW9uXFx1c2VfcmV2ZXJzZWRfcm90YXRlQnkuanMiXSwibmFtZXMiOlsiY2MiLCJSb3RhdGVCeSIsIl9yZXZlcnNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7OztBQVlBQSxFQUFFLENBQUNDLFFBQUgsQ0FBWUMsUUFBWixHQUF1QixJQUF2QiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogVGhpcyBzY3JpcHQgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgQ29jb3MgQ3JlYXRvciBhbmQgaXMgb25seSB1c2VkIGZvciBwcm9qZWN0cyBjb21wYXRpYmxlIHdpdGggdjIuMS4wL3YyLjEuMS92Mi4zLjAvdjIuMy4xL3YyLjMuMiB2ZXJzaW9ucy5cclxuICogWW91IGRvIG5vdCBuZWVkIHRvIG1hbnVhbGx5IGFkZCB0aGlzIHNjcmlwdCBpbiBhbnkgb3RoZXIgcHJvamVjdC5cclxuICogSWYgeW91IGRvbid0IHVzZSBjYy5BY3Rpb24gaW4geW91ciBwcm9qZWN0LCB5b3UgY2FuIGRlbGV0ZSB0aGlzIHNjcmlwdCBkaXJlY3RseS5cclxuICogSWYgeW91ciBwcm9qZWN0IGlzIGhvc3RlZCBpbiBWQ1Mgc3VjaCBhcyBnaXQsIHN1Ym1pdCB0aGlzIHNjcmlwdCB0b2dldGhlci5cclxuICpcclxuICog5q2k6ISa5pys55SxIENvY29zIENyZWF0b3Ig6Ieq5Yqo55Sf5oiQ77yM5LuF55So5LqO5YW85a65IHYyLjEuMC92Mi4xLjEvdjIuMy4wL3YyLjMuMS92Mi4zLjIg54mI5pys55qE5bel56iL77yMXHJcbiAqIOS9oOaXoOmcgOWcqOS7u+S9leWFtuWug+mhueebruS4reaJi+WKqOa3u+WKoOatpOiEmuacrOOAglxyXG4gKiDlpoLmnpzkvaDnmoTpobnnm67kuK3msqHnlKjliLAgQWN0aW9u77yM5Y+v55u05o6l5Yig6Zmk6K+l6ISa5pys44CCXHJcbiAqIOWmguaenOS9oOeahOmhueebruacieaJmOeuoeS6jiBnaXQg562J54mI5pys5bqT77yM6K+35bCG5q2k6ISa5pys5LiA5bm25LiK5Lyg44CCXHJcbiAqL1xyXG5cclxuY2MuUm90YXRlQnkuX3JldmVyc2UgPSB0cnVlO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Coin_fly_to_wallet/Coin_fly_to_wallet.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e54affUF7NGeZytNFcwLhOd', 'Coin_fly_to_wallet');
// Scene/Coin_fly_to_wallet/Coin_fly_to_wallet.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Coin_fly_to_wallet = /** @class */ (function (_super) {
    __extends(Coin_fly_to_wallet, _super);
    function Coin_fly_to_wallet() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startPoint = null;
        _this.endPoint = null;
        _this.coinPrefab = null;
        _this.coinPool = null;
        return _this;
    }
    Coin_fly_to_wallet.prototype.onLoad = function () {
        this.coinPool = new cc.NodePool();
        this.initCoinPool();
    };
    Coin_fly_to_wallet.prototype.initCoinPool = function (count) {
        if (count === void 0) { count = 20; }
        for (var i = 0; i < count; i++) {
            var coin = cc.instantiate(this.coinPrefab);
            this.coinPool.put(coin);
        }
    };
    Coin_fly_to_wallet.prototype.playAnim = function () {
        var randomCount = Math.random() * 15 + 10;
        var stPos = this.startPoint.getPosition();
        var edPos = this.endPoint.getPosition();
        this.playCoinFlyAnim(randomCount, stPos, edPos);
    };
    Coin_fly_to_wallet.prototype.playCoinFlyAnim = function (count, stPos, edPos, r) {
        var _this = this;
        if (r === void 0) { r = 130; }
        // 确保当前节点池有足够的金币
        var poolSize = this.coinPool.size();
        var reCreateCoinCount = poolSize > count ? 0 : count - poolSize;
        this.initCoinPool(reCreateCoinCount);
        // 生成圆，并且对圆上的点进行排序
        var points = this.getCirclePoints(r, stPos, count);
        var coinNodeList = points.map(function (pos) {
            var coin = _this.coinPool.get();
            coin.setPosition(stPos);
            _this.node.addChild(coin);
            return {
                node: coin,
                stPos: stPos,
                mdPos: pos,
                edPos: edPos,
                dis: pos.sub(edPos).mag()
            };
        });
        coinNodeList = coinNodeList.sort(function (a, b) {
            if (a.dis - b.dis > 0)
                return 1;
            if (a.dis - b.dis < 0)
                return -1;
            return 0;
        });
        // 执行金币落袋的动画
        coinNodeList.forEach(function (item, idx) {
            item.node.runAction(cc.sequence(cc.moveTo(0.3, item.mdPos), cc.delayTime(idx * 0.01), cc.moveTo(0.5, item.edPos), cc.callFunc(function () {
                _this.coinPool.put(item.node);
            })));
        });
    };
    /**
     * 以某点为圆心，生成圆周上等分点的坐标
     *
     * @param {number} r 半径
     * @param {cc.Vec2} pos 圆心坐标
     * @param {number} count 等分点数量
     * @param {number} [randomScope=80] 等分点的随机波动范围
     * @returns {cc.Vec2[]} 返回等分点坐标
     */
    Coin_fly_to_wallet.prototype.getCirclePoints = function (r, pos, count, randomScope) {
        if (randomScope === void 0) { randomScope = 60; }
        var points = [];
        var radians = (Math.PI / 180) * Math.round(360 / count);
        for (var i = 0; i < count; i++) {
            var x = pos.x + r * Math.sin(radians * i);
            var y = pos.y + r * Math.cos(radians * i);
            points.unshift(cc.v3(x + Math.random() * randomScope, y + Math.random() * randomScope, 0));
        }
        return points;
    };
    var _b, _c, _d;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Coin_fly_to_wallet.prototype, "startPoint", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Node) === "function" ? _c : Object)
    ], Coin_fly_to_wallet.prototype, "endPoint", void 0);
    __decorate([
        property(cc.Prefab),
        __metadata("design:type", typeof (_d = typeof cc !== "undefined" && cc.Prefab) === "function" ? _d : Object)
    ], Coin_fly_to_wallet.prototype, "coinPrefab", void 0);
    Coin_fly_to_wallet = __decorate([
        ccclass
    ], Coin_fly_to_wallet);
    return Coin_fly_to_wallet;
}(cc.Component));
exports.default = Coin_fly_to_wallet;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Follow_spot/Follow_spot.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7e731+dUkRK/aXycXJn8OCg', 'Follow_spot');
// Scene/Follow_spot/Follow_spot.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Follow_spot = /** @class */ (function (_super) {
    __extends(Follow_spot, _super);
    function Follow_spot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bg = null;
        _this.material = null;
        _this.center = [0.1, 0.5];
        return _this;
    }
    Follow_spot.prototype.onLoad = function () {
        this.material = this.bg.getComponent(cc.Sprite).getMaterial(0);
        this.material.setProperty('wh_ratio', this.bg.width / this.bg.height);
        this.material.setProperty('center', this.center);
        this.bg.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
    };
    Follow_spot.prototype.touchMoveEvent = function (evt) {
        this.center[0] += evt.getDeltaX() / this.bg.width;
        this.center[1] -= evt.getDeltaY() / this.bg.height;
        this.material.setProperty('center', this.center);
    };
    var _b;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Follow_spot.prototype, "bg", void 0);
    Follow_spot = __decorate([
        ccclass
    ], Follow_spot);
    return Follow_spot;
}(cc.Component));
exports.default = Follow_spot;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXEZvbGxvd19zcG90XFxGb2xsb3dfc3BvdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUF5QywrQkFBWTtJQUFyRDtRQUFBLHFFQW1CQztRQWpCQyxRQUFFLEdBQVksSUFBSSxDQUFDO1FBQ25CLGNBQVEsR0FBZ0IsSUFBSSxDQUFDO1FBQzdCLFlBQU0sR0FBYSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQzs7SUFlaEMsQ0FBQztJQWJDLDRCQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVqRCxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRUQsb0NBQWMsR0FBZCxVQUFlLEdBQXdCO1FBQ3JDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO1FBQ2xELElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO1FBQ25ELElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7SUFoQkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDZCxFQUFFLG9CQUFGLEVBQUUsQ0FBQyxJQUFJOzJDQUFRO0lBRkEsV0FBVztRQUQvQixPQUFPO09BQ2EsV0FBVyxDQW1CL0I7SUFBRCxrQkFBQztDQW5CRCxBQW1CQyxDQW5Cd0MsRUFBRSxDQUFDLFNBQVMsR0FtQnBEO2tCQW5Cb0IsV0FBVyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb2xsb3dfc3BvdCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgYmc6IGNjLk5vZGUgPSBudWxsO1xyXG4gIG1hdGVyaWFsOiBjYy5NYXRlcmlhbCA9IG51bGw7XHJcbiAgY2VudGVyOiBudW1iZXJbXSA9IFswLjEsIDAuNV07XHJcblxyXG4gIG9uTG9hZCgpIHtcclxuICAgIHRoaXMubWF0ZXJpYWwgPSB0aGlzLmJnLmdldENvbXBvbmVudChjYy5TcHJpdGUpLmdldE1hdGVyaWFsKDApO1xyXG4gICAgdGhpcy5tYXRlcmlhbC5zZXRQcm9wZXJ0eSgnd2hfcmF0aW8nLCB0aGlzLmJnLndpZHRoIC8gdGhpcy5iZy5oZWlnaHQpO1xyXG4gICAgdGhpcy5tYXRlcmlhbC5zZXRQcm9wZXJ0eSgnY2VudGVyJywgdGhpcy5jZW50ZXIpO1xyXG5cclxuICAgIHRoaXMuYmcub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgdGhpcy50b3VjaE1vdmVFdmVudCwgdGhpcyk7XHJcbiAgfVxyXG5cclxuICB0b3VjaE1vdmVFdmVudChldnQ6IGNjLkV2ZW50LkV2ZW50VG91Y2gpIHtcclxuICAgIHRoaXMuY2VudGVyWzBdICs9IGV2dC5nZXREZWx0YVgoKSAvIHRoaXMuYmcud2lkdGg7XHJcbiAgICB0aGlzLmNlbnRlclsxXSAtPSBldnQuZ2V0RGVsdGFZKCkgLyB0aGlzLmJnLmhlaWdodDtcclxuICAgIHRoaXMubWF0ZXJpYWwuc2V0UHJvcGVydHkoJ2NlbnRlcicsIHRoaXMuY2VudGVyKTtcclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Bullet_Tracking/Bullet_Tracking.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '82433YSgYFI4Kmfyazc1Wwg', 'Bullet_Tracking');
// Scene/Bullet_Tracking/Bullet_Tracking.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Bullet_Tracking = /** @class */ (function (_super) {
    __extends(Bullet_Tracking, _super);
    function Bullet_Tracking() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.launch_btn = null;
        _this.bullet = null;
        _this.target = null;
        _this.fireFlag = false;
        _this.bulletSpeed = 200;
        return _this;
    }
    Bullet_Tracking.prototype.onLoad = function () {
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
    };
    Bullet_Tracking.prototype.touchMoveEvent = function (evt) {
        this.target.x += evt.getDeltaX();
        this.target.y += evt.getDeltaY();
    };
    Bullet_Tracking.prototype.fire = function () {
        this.bullet.getComponent(cc.Sprite).enabled = true;
        this.bullet.getChildByName('boom').active = false;
        this.bullet.setPosition(this.launch_btn.position);
        this.bullet.active = true;
        this.fireFlag = true;
    };
    Bullet_Tracking.prototype.hitTheTarget = function () {
        var _this = this;
        this.fireFlag = false;
        this.bullet.getComponent(cc.Sprite).enabled = false;
        this.bullet.getChildByName('boom').active = true;
        this.scheduleOnce(function () {
            _this.bullet.getChildByName('boom').active = false;
        }, 0.2);
    };
    Bullet_Tracking.prototype.update = function (dt) {
        if (!this.fireFlag)
            return;
        var targetPos = this.target.getPosition();
        var bulletPos = this.bullet.getPosition();
        var normalizeVec = targetPos.subtract(bulletPos).normalize();
        this.bullet.x += normalizeVec.x * this.bulletSpeed * dt;
        this.bullet.y += normalizeVec.y * this.bulletSpeed * dt;
        // 角度变化以y轴正方向为起点，逆时针角度递增
        this.bullet.angle = cc.v2(0, 1).signAngle(normalizeVec) * 180 / Math.PI;
        var rect = this.target.getBoundingBox();
        if (rect.contains(bulletPos))
            this.hitTheTarget();
    };
    var _b, _c, _d;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Bullet_Tracking.prototype, "launch_btn", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Node) === "function" ? _c : Object)
    ], Bullet_Tracking.prototype, "bullet", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_d = typeof cc !== "undefined" && cc.Node) === "function" ? _d : Object)
    ], Bullet_Tracking.prototype, "target", void 0);
    Bullet_Tracking = __decorate([
        ccclass
    ], Bullet_Tracking);
    return Bullet_Tracking;
}(cc.Component));
exports.default = Bullet_Tracking;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXEJ1bGxldF9UcmFja2luZ1xcQnVsbGV0X1RyYWNraW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQTZDLG1DQUFZO0lBQXpEO1FBQUEscUVBcURDO1FBbkRDLGdCQUFVLEdBQVksSUFBSSxDQUFDO1FBRzNCLFlBQU0sR0FBWSxJQUFJLENBQUM7UUFHdkIsWUFBTSxHQUFZLElBQUksQ0FBQztRQVd2QixjQUFRLEdBQVksS0FBSyxDQUFDO1FBa0IxQixpQkFBVyxHQUFHLEdBQUcsQ0FBQzs7SUFnQnBCLENBQUM7SUEzQ0MsZ0NBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFRCx3Q0FBYyxHQUFkLFVBQWUsR0FBd0I7UUFDckMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQyxDQUFDO0lBR0QsOEJBQUksR0FBSjtRQUNFLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ25ELElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDbEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDMUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDdkIsQ0FBQztJQUVELHNDQUFZLEdBQVo7UUFBQSxpQkFPQztRQU5DLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDakQsSUFBSSxDQUFDLFlBQVksQ0FBQztZQUNoQixLQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BELENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNWLENBQUM7SUFHRCxnQ0FBTSxHQUFOLFVBQU8sRUFBRTtRQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUTtZQUFFLE9BQU87UUFFM0IsSUFBSSxTQUFTLEdBQVksSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuRCxJQUFJLFNBQVMsR0FBWSxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25ELElBQUksWUFBWSxHQUFZLFNBQVMsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFFdEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksWUFBWSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztRQUN4RCxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxZQUFZLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3hELHdCQUF3QjtRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7UUFFeEUsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDO1lBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3BELENBQUM7O0lBbEREO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7c0RBQ04sRUFBRSxvQkFBRixFQUFFLENBQUMsSUFBSTt1REFBUTtJQUczQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUNWLEVBQUUsb0JBQUYsRUFBRSxDQUFDLElBQUk7bURBQVE7SUFHdkI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDVixFQUFFLG9CQUFGLEVBQUUsQ0FBQyxJQUFJO21EQUFRO0lBUkosZUFBZTtRQURuQyxPQUFPO09BQ2EsZUFBZSxDQXFEbkM7SUFBRCxzQkFBQztDQXJERCxBQXFEQyxDQXJENEMsRUFBRSxDQUFDLFNBQVMsR0FxRHhEO2tCQXJEb0IsZUFBZSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRfVHJhY2tpbmcgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gIGxhdW5jaF9idG46IGNjLk5vZGUgPSBudWxsO1xyXG5cclxuICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICBidWxsZXQ6IGNjLk5vZGUgPSBudWxsO1xyXG5cclxuICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICB0YXJnZXQ6IGNjLk5vZGUgPSBudWxsO1xyXG5cclxuICBvbkxvYWQoKSB7XHJcbiAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgdGhpcy50b3VjaE1vdmVFdmVudCwgdGhpcyk7XHJcbiAgfVxyXG5cclxuICB0b3VjaE1vdmVFdmVudChldnQ6IGNjLkV2ZW50LkV2ZW50VG91Y2gpIHtcclxuICAgIHRoaXMudGFyZ2V0LnggKz0gZXZ0LmdldERlbHRhWCgpO1xyXG4gICAgdGhpcy50YXJnZXQueSArPSBldnQuZ2V0RGVsdGFZKCk7XHJcbiAgfVxyXG5cclxuICBmaXJlRmxhZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIGZpcmUoKSB7XHJcbiAgICB0aGlzLmJ1bGxldC5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5lbmFibGVkID0gdHJ1ZTtcclxuICAgIHRoaXMuYnVsbGV0LmdldENoaWxkQnlOYW1lKCdib29tJykuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB0aGlzLmJ1bGxldC5zZXRQb3NpdGlvbih0aGlzLmxhdW5jaF9idG4ucG9zaXRpb24pO1xyXG4gICAgdGhpcy5idWxsZXQuYWN0aXZlID0gdHJ1ZTtcclxuICAgIHRoaXMuZmlyZUZsYWcgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgaGl0VGhlVGFyZ2V0KCkge1xyXG4gICAgdGhpcy5maXJlRmxhZyA9IGZhbHNlO1xyXG4gICAgdGhpcy5idWxsZXQuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgdGhpcy5idWxsZXQuZ2V0Q2hpbGRCeU5hbWUoJ2Jvb20nKS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgdGhpcy5zY2hlZHVsZU9uY2UoKCkgPT4ge1xyXG4gICAgICB0aGlzLmJ1bGxldC5nZXRDaGlsZEJ5TmFtZSgnYm9vbScpLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgfSwgMC4yKTtcclxuICB9XHJcblxyXG4gIGJ1bGxldFNwZWVkID0gMjAwO1xyXG4gIHVwZGF0ZShkdCkge1xyXG4gICAgaWYgKCF0aGlzLmZpcmVGbGFnKSByZXR1cm47XHJcblxyXG4gICAgbGV0IHRhcmdldFBvczogY2MuVmVjMiA9IHRoaXMudGFyZ2V0LmdldFBvc2l0aW9uKCk7XHJcbiAgICBsZXQgYnVsbGV0UG9zOiBjYy5WZWMyID0gdGhpcy5idWxsZXQuZ2V0UG9zaXRpb24oKTtcclxuICAgIGxldCBub3JtYWxpemVWZWM6IGNjLlZlYzIgPSB0YXJnZXRQb3Muc3VidHJhY3QoYnVsbGV0UG9zKS5ub3JtYWxpemUoKTtcclxuXHJcbiAgICB0aGlzLmJ1bGxldC54ICs9IG5vcm1hbGl6ZVZlYy54ICogdGhpcy5idWxsZXRTcGVlZCAqIGR0O1xyXG4gICAgdGhpcy5idWxsZXQueSArPSBub3JtYWxpemVWZWMueSAqIHRoaXMuYnVsbGV0U3BlZWQgKiBkdDtcclxuICAgIC8vIOinkuW6puWPmOWMluS7pXnovbTmraPmlrnlkJHkuLrotbfngrnvvIzpgIbml7bpkojop5LluqbpgJLlop5cclxuICAgIHRoaXMuYnVsbGV0LmFuZ2xlID0gY2MudjIoMCwgMSkuc2lnbkFuZ2xlKG5vcm1hbGl6ZVZlYykgKiAxODAgLyBNYXRoLlBJO1xyXG5cclxuICAgIGxldCByZWN0ID0gdGhpcy50YXJnZXQuZ2V0Qm91bmRpbmdCb3goKTtcclxuICAgIGlmIChyZWN0LmNvbnRhaW5zKGJ1bGxldFBvcykpIHRoaXMuaGl0VGhlVGFyZ2V0KCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Dissolve_color/Dissolve_color.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '184ab+BIeVCTLvd8FH6B+h3', 'Dissolve_color');
// Scene/Dissolve_color/Dissolve_color.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Dissolve_color = /** @class */ (function (_super) {
    __extends(Dissolve_color, _super);
    function Dissolve_color() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tip = null;
        _this.materialList = [];
        _this.fadePct = 0; // 溶解百分比
        _this.activeFlag = false; // 溶解进行中
        _this.symbol = 1; // 色彩叠加的正负
        _this.speed = 0.5; // 色彩叠加的速度
        return _this;
    }
    Dissolve_color.prototype.start = function () {
        this.materialList.push(this.node.getChildByName('ghost').getComponent(cc.Sprite).getMaterial(0), this.node.getChildByName('man').getComponent(cc.Sprite).getMaterial(0));
    };
    Dissolve_color.prototype.toggle = function () {
        if (this.activeFlag)
            return;
        this.activeFlag = true;
    };
    Dissolve_color.prototype.update = function (dt) {
        var _this = this;
        if (!this.activeFlag)
            return;
        this.materialList.forEach(function (material) { return material.setProperty('fade_pct', _this.fadePct); });
        if (this.fadePct >= 0 && this.fadePct <= 1) {
            this.fadePct += this.symbol * dt * this.speed;
            this.tip.string = "溶解程度 " + this.fadePct.toFixed(1);
        }
        else {
            this.fadePct = this.fadePct > 1 ? 1 : 0;
            this.symbol = -this.symbol;
            this.activeFlag = false;
        }
    };
    var _b;
    __decorate([
        property(cc.Label),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Label) === "function" ? _b : Object)
    ], Dissolve_color.prototype, "tip", void 0);
    Dissolve_color = __decorate([
        ccclass
    ], Dissolve_color);
    return Dissolve_color;
}(cc.Component));
exports.default = Dissolve_color;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXERpc3NvbHZlX2NvbG9yXFxEaXNzb2x2ZV9jb2xvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUE0QyxrQ0FBWTtJQUF4RDtRQUFBLHFFQWtDQztRQWhDQyxTQUFHLEdBQWEsSUFBSSxDQUFDO1FBQ3JCLGtCQUFZLEdBQWtCLEVBQUUsQ0FBQztRQUNqQyxhQUFPLEdBQVcsQ0FBQyxDQUFDLENBQUMsUUFBUTtRQUM3QixnQkFBVSxHQUFZLEtBQUssQ0FBQyxDQUFDLFFBQVE7UUFDckMsWUFBTSxHQUFXLENBQUMsQ0FBQyxDQUFDLFVBQVU7UUFDOUIsV0FBSyxHQUFXLEdBQUcsQ0FBQyxDQUFDLFVBQVU7O0lBMkJqQyxDQUFDO0lBekJDLDhCQUFLLEdBQUw7UUFDRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQ3hFLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUN2RSxDQUFDO0lBQ0osQ0FBQztJQUVELCtCQUFNLEdBQU47UUFDRSxJQUFJLElBQUksQ0FBQyxVQUFVO1lBQUUsT0FBTztRQUM1QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUN6QixDQUFDO0lBRUQsK0JBQU0sR0FBTixVQUFPLEVBQUU7UUFBVCxpQkFZQztRQVhDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtZQUFFLE9BQU87UUFDN0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsVUFBQyxRQUFRLElBQUssT0FBQSxRQUFRLENBQUMsV0FBVyxDQUFDLFVBQVUsRUFBRSxLQUFJLENBQUMsT0FBTyxDQUFDLEVBQTlDLENBQThDLENBQUMsQ0FBQztRQUV4RixJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxFQUFFO1lBQzFDLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDckQ7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQzNCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7SUEvQkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztzREFDZCxFQUFFLG9CQUFGLEVBQUUsQ0FBQyxLQUFLOytDQUFRO0lBRkYsY0FBYztRQURsQyxPQUFPO09BQ2EsY0FBYyxDQWtDbEM7SUFBRCxxQkFBQztDQWxDRCxBQWtDQyxDQWxDMkMsRUFBRSxDQUFDLFNBQVMsR0FrQ3ZEO2tCQWxDb0IsY0FBYyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNzb2x2ZV9jb2xvciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgQHByb3BlcnR5KGNjLkxhYmVsKVxyXG4gIHRpcDogY2MuTGFiZWwgPSBudWxsO1xyXG4gIG1hdGVyaWFsTGlzdDogY2MuTWF0ZXJpYWxbXSA9IFtdO1xyXG4gIGZhZGVQY3Q6IG51bWJlciA9IDA7IC8vIOa6tuino+eZvuWIhuavlFxyXG4gIGFjdGl2ZUZsYWc6IGJvb2xlYW4gPSBmYWxzZTsgLy8g5rq26Kej6L+b6KGM5LitXHJcbiAgc3ltYm9sOiBudW1iZXIgPSAxOyAvLyDoibLlvanlj6DliqDnmoTmraPotJ9cclxuICBzcGVlZDogbnVtYmVyID0gMC41OyAvLyDoibLlvanlj6DliqDnmoTpgJ/luqZcclxuXHJcbiAgc3RhcnQoKSB7XHJcbiAgICB0aGlzLm1hdGVyaWFsTGlzdC5wdXNoKFxyXG4gICAgICB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoJ2dob3N0JykuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuZ2V0TWF0ZXJpYWwoMCksXHJcbiAgICAgIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZSgnbWFuJykuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuZ2V0TWF0ZXJpYWwoMClcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGUoKSB7XHJcbiAgICBpZiAodGhpcy5hY3RpdmVGbGFnKSByZXR1cm47XHJcbiAgICB0aGlzLmFjdGl2ZUZsYWcgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGR0KSB7XHJcbiAgICBpZiAoIXRoaXMuYWN0aXZlRmxhZykgcmV0dXJuO1xyXG4gICAgdGhpcy5tYXRlcmlhbExpc3QuZm9yRWFjaCgobWF0ZXJpYWwpID0+IG1hdGVyaWFsLnNldFByb3BlcnR5KCdmYWRlX3BjdCcsIHRoaXMuZmFkZVBjdCkpO1xyXG5cclxuICAgIGlmICh0aGlzLmZhZGVQY3QgPj0gMCAmJiB0aGlzLmZhZGVQY3QgPD0gMSkge1xyXG4gICAgICB0aGlzLmZhZGVQY3QgKz0gdGhpcy5zeW1ib2wgKiBkdCAqIHRoaXMuc3BlZWQ7XHJcbiAgICAgIHRoaXMudGlwLnN0cmluZyA9IFwi5rq26Kej56iL5bqmIFwiICsgdGhpcy5mYWRlUGN0LnRvRml4ZWQoMSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmZhZGVQY3QgPSB0aGlzLmZhZGVQY3QgPiAxID8gMSA6IDA7XHJcbiAgICAgIHRoaXMuc3ltYm9sID0gLXRoaXMuc3ltYm9sO1xyXG4gICAgICB0aGlzLmFjdGl2ZUZsYWcgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Joystick/Joystick.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ea7dbuck+9ApJnQTq/C4vpv', 'Joystick');
// Scene/Joystick/Joystick.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Roller = /** @class */ (function (_super) {
    __extends(Roller, _super);
    function Roller() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.controlDot = null;
        _this.joystick = null;
        _this.movableStar = null;
        _this.movableFlag = false;
        _this.radian = 0;
        _this.speed = 150;
        return _this;
    }
    Roller.prototype.onLoad = function () {
        this.initTouchEvent();
    };
    Roller.prototype.initTouchEvent = function () {
        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStartEvent, this);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEndEvent, this);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEndEvent, this);
    };
    Roller.prototype.touchStartEvent = function (event) {
        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());
        var distance = touchPos.len();
        var radius = this.node.width / 2 - this.controlDot.width / 2;
        // 以x轴正方向为基准，计算偏移量
        this.radian = cc.v2(1, 0).signAngle(touchPos);
        var offsetX = Math.cos(this.radian) * radius;
        var offsetY = Math.sin(this.radian) * radius;
        this.controlDot.setPosition(radius > distance ? touchPos : cc.v2(offsetX, offsetY));
        this.movableFlag = true;
    };
    Roller.prototype.touchMoveEvent = function (event) {
        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());
        var distance = touchPos.len();
        var radius = this.node.width / 2 - this.controlDot.width / 2;
        this.radian = cc.v2(1, 0).signAngle(touchPos);
        var offsetX = Math.cos(this.radian) * radius;
        var offsetY = Math.sin(this.radian) * radius;
        this.controlDot.setPosition(radius > distance ? touchPos : cc.v2(offsetX, offsetY));
    };
    Roller.prototype.touchEndEvent = function () {
        this.movableFlag = false;
        this.controlDot.setPosition(cc.v2(0, 0));
    };
    Roller.prototype.update = function (dt) {
        if (!this.movableFlag)
            return;
        this.movableStar.x += Math.cos(this.radian) * dt * this.speed;
        this.movableStar.y += Math.sin(this.radian) * dt * this.speed;
    };
    var _b, _c, _d;
    __decorate([
        property({ type: cc.Node, tooltip: '操控杆的控制点' }),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Roller.prototype, "controlDot", void 0);
    __decorate([
        property({ type: cc.Node, tooltip: '操控杆' }),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Node) === "function" ? _c : Object)
    ], Roller.prototype, "joystick", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_d = typeof cc !== "undefined" && cc.Node) === "function" ? _d : Object)
    ], Roller.prototype, "movableStar", void 0);
    Roller = __decorate([
        ccclass
    ], Roller);
    return Roller;
}(cc.Component));
exports.default = Roller;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXEpveXN0aWNrXFxKb3lzdGljay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUFvQywwQkFBWTtJQUFoRDtRQUFBLHFFQTBEQztRQXhEQyxnQkFBVSxHQUFZLElBQUksQ0FBQztRQUUzQixjQUFRLEdBQVksSUFBSSxDQUFDO1FBRXpCLGlCQUFXLEdBQVksSUFBSSxDQUFDO1FBRTVCLGlCQUFXLEdBQVksS0FBSyxDQUFDO1FBQzdCLFlBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsV0FBSyxHQUFXLEdBQUcsQ0FBQzs7SUFnRHRCLENBQUM7SUEvQ0MsdUJBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsK0JBQWMsR0FBZDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3hFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3BFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pFLENBQUM7SUFFRCxnQ0FBZSxHQUFmLFVBQWdCLEtBQUs7UUFDbkIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztRQUNuRSxJQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDaEMsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUUvRCxrQkFBa0I7UUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQy9DLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQztRQUMvQyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFcEYsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7SUFDMUIsQ0FBQztJQUVELCtCQUFjLEdBQWQsVUFBZSxLQUFLO1FBQ2xCLElBQUksUUFBUSxHQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDNUUsSUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2hDLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQy9DLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQztRQUUvQyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDdEYsQ0FBQztJQUVELDhCQUFhLEdBQWI7UUFDRSxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCx1QkFBTSxHQUFOLFVBQU8sRUFBRTtRQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVztZQUFFLE9BQU87UUFDOUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDOUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDaEUsQ0FBQzs7SUF2REQ7UUFEQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7c0RBQ3BDLEVBQUUsb0JBQUYsRUFBRSxDQUFDLElBQUk7OENBQVE7SUFFM0I7UUFEQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7c0RBQ2xDLEVBQUUsb0JBQUYsRUFBRSxDQUFDLElBQUk7NENBQVE7SUFFekI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDTCxFQUFFLG9CQUFGLEVBQUUsQ0FBQyxJQUFJOytDQUFRO0lBTlQsTUFBTTtRQUQxQixPQUFPO09BQ2EsTUFBTSxDQTBEMUI7SUFBRCxhQUFDO0NBMURELEFBMERDLENBMURtQyxFQUFFLENBQUMsU0FBUyxHQTBEL0M7a0JBMURvQixNQUFNIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvbGxlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgQHByb3BlcnR5KHsgdHlwZTogY2MuTm9kZSwgdG9vbHRpcDogJ+aTjeaOp+adhueahOaOp+WItueCuScgfSlcclxuICBjb250cm9sRG90OiBjYy5Ob2RlID0gbnVsbDtcclxuICBAcHJvcGVydHkoeyB0eXBlOiBjYy5Ob2RlLCB0b29sdGlwOiAn5pON5o6n5p2GJyB9KVxyXG4gIGpveXN0aWNrOiBjYy5Ob2RlID0gbnVsbDtcclxuICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICBtb3ZhYmxlU3RhcjogY2MuTm9kZSA9IG51bGw7XHJcblxyXG4gIG1vdmFibGVGbGFnOiBib29sZWFuID0gZmFsc2U7XHJcbiAgcmFkaWFuOiBudW1iZXIgPSAwO1xyXG4gIHNwZWVkOiBudW1iZXIgPSAxNTA7XHJcbiAgb25Mb2FkKCkge1xyXG4gICAgdGhpcy5pbml0VG91Y2hFdmVudCgpO1xyXG4gIH1cclxuXHJcbiAgaW5pdFRvdWNoRXZlbnQoKSB7XHJcbiAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsIHRoaXMudG91Y2hTdGFydEV2ZW50LCB0aGlzKTtcclxuICAgIHRoaXMubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9NT1ZFLCB0aGlzLnRvdWNoTW92ZUV2ZW50LCB0aGlzKTtcclxuICAgIHRoaXMubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsIHRoaXMudG91Y2hFbmRFdmVudCwgdGhpcyk7XHJcbiAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfQ0FOQ0VMLCB0aGlzLnRvdWNoRW5kRXZlbnQsIHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgdG91Y2hTdGFydEV2ZW50KGV2ZW50KSB7XHJcbiAgICBsZXQgdG91Y2hQb3MgPSB0aGlzLm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIoZXZlbnQuZ2V0TG9jYXRpb24oKSk7XHJcbiAgICBjb25zdCBkaXN0YW5jZSA9IHRvdWNoUG9zLmxlbigpO1xyXG4gICAgY29uc3QgcmFkaXVzID0gdGhpcy5ub2RlLndpZHRoIC8gMiAtIHRoaXMuY29udHJvbERvdC53aWR0aCAvIDI7XHJcblxyXG4gICAgLy8g5LuleOi9tOato+aWueWQkeS4uuWfuuWHhu+8jOiuoeeul+WBj+enu+mHj1xyXG4gICAgdGhpcy5yYWRpYW4gPSBjYy52MigxLCAwKS5zaWduQW5nbGUodG91Y2hQb3MpO1xyXG4gICAgY29uc3Qgb2Zmc2V0WCA9IE1hdGguY29zKHRoaXMucmFkaWFuKSAqIHJhZGl1cztcclxuICAgIGNvbnN0IG9mZnNldFkgPSBNYXRoLnNpbih0aGlzLnJhZGlhbikgKiByYWRpdXM7XHJcbiAgICB0aGlzLmNvbnRyb2xEb3Quc2V0UG9zaXRpb24ocmFkaXVzID4gZGlzdGFuY2UgPyB0b3VjaFBvcyA6IGNjLnYyKG9mZnNldFgsIG9mZnNldFkpKTtcclxuXHJcbiAgICB0aGlzLm1vdmFibGVGbGFnID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIHRvdWNoTW92ZUV2ZW50KGV2ZW50KSB7XHJcbiAgICBsZXQgdG91Y2hQb3M6IGNjLlZlYzIgPSB0aGlzLm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIoZXZlbnQuZ2V0TG9jYXRpb24oKSk7XHJcbiAgICBjb25zdCBkaXN0YW5jZSA9IHRvdWNoUG9zLmxlbigpO1xyXG4gICAgY29uc3QgcmFkaXVzID0gdGhpcy5ub2RlLndpZHRoIC8gMiAtIHRoaXMuY29udHJvbERvdC53aWR0aCAvIDI7XHJcblxyXG4gICAgdGhpcy5yYWRpYW4gPSBjYy52MigxLCAwKS5zaWduQW5nbGUodG91Y2hQb3MpO1xyXG4gICAgY29uc3Qgb2Zmc2V0WCA9IE1hdGguY29zKHRoaXMucmFkaWFuKSAqIHJhZGl1cztcclxuICAgIGNvbnN0IG9mZnNldFkgPSBNYXRoLnNpbih0aGlzLnJhZGlhbikgKiByYWRpdXM7XHJcblxyXG4gICAgdGhpcy5jb250cm9sRG90LnNldFBvc2l0aW9uKHJhZGl1cyA+IGRpc3RhbmNlID8gdG91Y2hQb3MgOiBjYy52MihvZmZzZXRYLCBvZmZzZXRZKSk7XHJcbiAgfVxyXG5cclxuICB0b3VjaEVuZEV2ZW50KCkge1xyXG4gICAgdGhpcy5tb3ZhYmxlRmxhZyA9IGZhbHNlO1xyXG4gICAgdGhpcy5jb250cm9sRG90LnNldFBvc2l0aW9uKGNjLnYyKDAsIDApKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZShkdCkge1xyXG4gICAgaWYgKCF0aGlzLm1vdmFibGVGbGFnKSByZXR1cm47XHJcbiAgICB0aGlzLm1vdmFibGVTdGFyLnggKz0gTWF0aC5jb3ModGhpcy5yYWRpYW4pICogZHQgKiB0aGlzLnNwZWVkO1xyXG4gICAgdGhpcy5tb3ZhYmxlU3Rhci55ICs9IE1hdGguc2luKHRoaXMucmFkaWFuKSAqIGR0ICogdGhpcy5zcGVlZDtcclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Metaball/Untitled-1.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '01faeFEzd1DBLuu0h9EGT7t', 'Untitled-1');
// Scene/Metaball/Untitled-1.js

"use strict";

//原始=>响应式
var toProxy = new WeakMap(); //响应式=》原始

var toRaw = new WeakMap(); //响应式

function reactive() {}

function computed() {}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXE1ldGFiYWxsXFxVbnRpdGxlZC0xLmpzIl0sIm5hbWVzIjpbInRvUHJveHkiLCJXZWFrTWFwIiwidG9SYXciLCJyZWFjdGl2ZSIsImNvbXB1dGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0EsSUFBSUEsT0FBTyxHQUFHLElBQUlDLE9BQUosRUFBZCxFQUVBOztBQUNBLElBQUlDLEtBQUssR0FBRyxJQUFJRCxPQUFKLEVBQVosRUFFQTs7QUFFQSxTQUFTRSxRQUFULEdBQW9CLENBQUU7O0FBRXRCLFNBQVNDLFFBQVQsR0FBb0IsQ0FBRSIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy/ljp/lp4s9PuWTjeW6lOW8j1xyXG5sZXQgdG9Qcm94eSA9IG5ldyBXZWFrTWFwKCk7XHJcblxyXG4vL+WTjeW6lOW8jz3jgIvljp/lp4tcclxubGV0IHRvUmF3ID0gbmV3IFdlYWtNYXAoKTtcclxuXHJcbi8v5ZON5bqU5byPXHJcblxyXG5mdW5jdGlvbiByZWFjdGl2ZSgpIHt9XHJcblxyXG5mdW5jdGlvbiBjb21wdXRlZCgpIHt9XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Home/Home.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e1b90/rohdEk4SdmmEZANaD', 'Home');
// Scene/Home/Home.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var BackHomeBtn_1 = require("./BackHomeBtn");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LOAD_SCENE_MIN_SEC = 1.2;
var sceneList;
(function (sceneList) {
    sceneList["Water_spread"] = "\u6C34\u6CE2\u6269\u6563\u6548\u679C\uFF08shader\uFF09";
    sceneList["Specular_gloss"] = "\u955C\u9762\u5149\u6CFD\u6548\u679C\uFF08shader\uFF09";
    sceneList["Dissolve_color"] = "\u6EB6\u89E3\u6548\u679C\uFF08shader\uFF09";
    sceneList["Follow_spot"] = "\u8FFD\u5149\u6548\u679C\uFF08shader\uFF09";
    sceneList["Metaball"] = "\u878D\u7403\u6548\u679C\uFF08shader\uFF09";
    sceneList["Circle_avatar"] = "\u5706\u5F62\u5934\u50CF\uFF08shader\uFF09";
    sceneList["Scratch_ticket"] = "\u522E\u522E\u5361\u5B9E\u73B0";
    sceneList["Coin_fly_to_wallet"] = "\u91D1\u5E01\u843D\u888B\u6548\u679C";
    sceneList["Moving_ghost"] = "\u79FB\u52A8\u6B8B\u5F71\u6548\u679C";
    sceneList["Magnifying_mirror"] = "\u653E\u5927\u955C\u6548\u679C";
    sceneList["Typer"] = "\u6253\u5B57\u673A\u6548\u679C";
    sceneList["Bullet_Tracking"] = "\u5B50\u5F39\u8DDF\u8E2A\u6548\u679C";
    sceneList["Infinite_bg_scroll"] = "\u80CC\u666F\u65E0\u9650\u6EDA\u52A8";
    sceneList["Change_clothes"] = "\u6362\u88C5";
    sceneList["Screen_vibrating"] = "\u9707\u5C4F\u6548\u679C+\u52A8\u753B\u6062\u590D\u7B2C\u4E00\u5E27";
    sceneList["Joystick"] = "\u9065\u63A7\u6746";
    sceneList["Filter"] = "\u989C\u8272\u6EE4\u955C";
    sceneList["Mosaic"] = "\u9A6C\u8D5B\u514B/\u50CF\u7D20\u98CE\uFF08shader\uFF09";
    sceneList["Photo_gallery"] = "\u6E10\u53D8\u8FC7\u6E21\u7684\u76F8\u518C\uFF08shader\uFF09";
})(sceneList || (sceneList = {}));
var Home = /** @class */ (function (_super) {
    __extends(Home, _super);
    function Home() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.loadingNode = null;
        _this.loadingProgress = null;
        _this.scrollContent = null;
        _this.scrollItemPrefab = null;
        _this.beginLoad = false;
        _this.finishLoadFlag = false;
        _this.loadTime = 0;
        _this.loadSceneName = '';
        return _this;
    }
    Home.prototype.onLoad = function () {
        this.initScrollItem();
    };
    Home.prototype.start = function () {
        this.judgeJump();
    };
    Home.prototype.judgeJump = function () {
        var sceneName = this.getQueryStringByName('sceneName');
        var isSameVisit = window['isSameVisit'];
        if (!sceneName)
            return;
        if (isSameVisit)
            return;
        if (sceneList[sceneName]) {
            window['isSameVisit'] = true;
            this.loadScene(sceneName);
        }
    };
    Home.prototype.getQueryStringByName = function (name) {
        var result = window.location.search.match(new RegExp('[?&]' + name + '=([^&]+)', 'i'));
        return result == null || result.length < 1 ? '' : result[1];
    };
    Home.prototype.initScrollItem = function () {
        var _this = this;
        var _loop_1 = function (key) {
            var scrollItem = cc.instantiate(this_1.scrollItemPrefab);
            scrollItem.getChildByName('label').getComponent(cc.Label).string = sceneList[key];
            scrollItem.on(cc.Node.EventType.TOUCH_END, function () {
                cc.tween(scrollItem)
                    .to(0.1, { scale: 1.05 })
                    .to(0.1, { scale: 1 })
                    .start();
                _this.loadScene(key);
            }, this_1);
            this_1.scrollContent.addChild(scrollItem);
        };
        var this_1 = this;
        for (var key in sceneList) {
            _loop_1(key);
        }
    };
    Home.prototype.loadScene = function (key) {
        var _this = this;
        if (this.beginLoad)
            return;
        this.loadingProgress.progress = 0;
        this.loadingNode.active = true;
        this.beginLoad = true;
        this.loadSceneName = key;
        cc.director.preloadScene(key, function (completedCount, totalCount) {
            // 还是做假进度条吧，缓存之后太快了，一闪而过的体验不好
            // this.loadingProgress.progress = completedCount / totalCount;
        }, function (error, asset) {
            if (!error) {
                _this.finishLoadFlag = true;
            }
            else {
                _this.loadingNode.active = false;
                _this.beginLoad = false;
                _this.loadTime = 0;
            }
        });
    };
    Home.prototype.update = function (dt) {
        if (!this.beginLoad)
            return;
        if (this.loadTime >= LOAD_SCENE_MIN_SEC && this.finishLoadFlag) {
            this.loadingProgress.progress = 1;
            BackHomeBtn_1.default.instance.toggleActive(true);
            cc.director.loadScene(this.loadSceneName);
        }
        else {
            this.loadTime += dt;
            this.loadingProgress.progress = Math.min(this.loadTime / LOAD_SCENE_MIN_SEC, this.finishLoadFlag ? 1 : 0.9);
        }
    };
    var _b, _c, _d, _e;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Home.prototype, "loadingNode", void 0);
    __decorate([
        property(cc.ProgressBar),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.ProgressBar) === "function" ? _c : Object)
    ], Home.prototype, "loadingProgress", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_d = typeof cc !== "undefined" && cc.Node) === "function" ? _d : Object)
    ], Home.prototype, "scrollContent", void 0);
    __decorate([
        property(cc.Prefab),
        __metadata("design:type", typeof (_e = typeof cc !== "undefined" && cc.Prefab) === "function" ? _e : Object)
    ], Home.prototype, "scrollItemPrefab", void 0);
    Home = __decorate([
        ccclass
    ], Home);
    return Home;
}(cc.Component));
exports.default = Home;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXEhvbWVcXEhvbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQXdDO0FBQ2xDLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBQzVDLElBQU0sa0JBQWtCLEdBQVcsR0FBRyxDQUFDO0FBQ3ZDLElBQUssU0FvQko7QUFwQkQsV0FBSyxTQUFTO0lBQ1osb0ZBQWlDLENBQUE7SUFDakMsc0ZBQW1DLENBQUE7SUFDbkMsMEVBQWlDLENBQUE7SUFDakMsdUVBQThCLENBQUE7SUFDOUIsb0VBQTJCLENBQUE7SUFDM0IseUVBQWdDLENBQUE7SUFDaEMsOERBQTBCLENBQUE7SUFDMUIsd0VBQStCLENBQUE7SUFDL0Isa0VBQXlCLENBQUE7SUFDekIsaUVBQTZCLENBQUE7SUFDN0IscURBQWlCLENBQUE7SUFDakIscUVBQTRCLENBQUE7SUFDNUIsd0VBQStCLENBQUE7SUFDL0IsNENBQXVCLENBQUE7SUFDdkIscUdBQW1DLENBQUE7SUFDbkMsNENBQWtCLENBQUE7SUFDbEIsZ0RBQWlCLENBQUE7SUFDakIsK0VBQTRCLENBQUE7SUFDNUIsMkZBQW1DLENBQUE7QUFDckMsQ0FBQyxFQXBCSSxTQUFTLEtBQVQsU0FBUyxRQW9CYjtBQUdEO0lBQWtDLHdCQUFZO0lBQTlDO1FBQUEscUVBa0dDO1FBaEdDLGlCQUFXLEdBQVksSUFBSSxDQUFDO1FBRTVCLHFCQUFlLEdBQW1CLElBQUksQ0FBQztRQUV2QyxtQkFBYSxHQUFZLElBQUksQ0FBQztRQUU5QixzQkFBZ0IsR0FBYyxJQUFJLENBQUM7UUFpRG5DLGVBQVMsR0FBWSxLQUFLLENBQUM7UUFDM0Isb0JBQWMsR0FBWSxLQUFLLENBQUM7UUFDaEMsY0FBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixtQkFBYSxHQUFXLEVBQUUsQ0FBQzs7SUFzQzdCLENBQUM7SUF4RkMscUJBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsb0JBQUssR0FBTDtRQUNFLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsd0JBQVMsR0FBVDtRQUNFLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN6RCxJQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFMUMsSUFBSSxDQUFDLFNBQVM7WUFBRSxPQUFPO1FBQ3ZCLElBQUksV0FBVztZQUFFLE9BQU87UUFFeEIsSUFBSSxTQUFTLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDeEIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQztZQUM3QixJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVELG1DQUFvQixHQUFwQixVQUFxQixJQUFJO1FBQ3ZCLElBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxHQUFHLFVBQVUsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3ZGLE9BQU8sTUFBTSxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVELDZCQUFjLEdBQWQ7UUFBQSxpQkFtQkM7Z0NBbEJVLEdBQUc7WUFDVixJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLE9BQUssZ0JBQWdCLENBQUMsQ0FBQztZQUV2RCxVQUFVLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNsRixVQUFVLENBQUMsRUFBRSxDQUNYLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFDM0I7Z0JBQ0UsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7cUJBQ2pCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUM7cUJBQ3hCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUM7cUJBQ3JCLEtBQUssRUFBRSxDQUFDO2dCQUNYLEtBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdEIsQ0FBQyxTQUVGLENBQUM7WUFFRixPQUFLLGFBQWEsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7OztRQWhCMUMsS0FBSyxJQUFJLEdBQUcsSUFBSSxTQUFTO29CQUFoQixHQUFHO1NBaUJYO0lBQ0gsQ0FBQztJQU1ELHdCQUFTLEdBQVQsVUFBVSxHQUFHO1FBQWIsaUJBdUJDO1FBdEJDLElBQUksSUFBSSxDQUFDLFNBQVM7WUFBRSxPQUFPO1FBQzNCLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUM7UUFFekIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQ3RCLEdBQUcsRUFDSCxVQUFDLGNBQWMsRUFBRSxVQUFVO1lBQ3pCLDZCQUE2QjtZQUM3QiwrREFBK0Q7UUFDakUsQ0FBQyxFQUNELFVBQUMsS0FBSyxFQUFFLEtBQUs7WUFDWCxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUNWLEtBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO2FBQzVCO2lCQUFNO2dCQUNMLEtBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztnQkFDaEMsS0FBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Z0JBQ3ZCLEtBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO2FBQ25CO1FBQ0gsQ0FBQyxDQUNGLENBQUM7SUFDSixDQUFDO0lBRUQscUJBQU0sR0FBTixVQUFPLEVBQUU7UUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVM7WUFBRSxPQUFPO1FBRTVCLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxrQkFBa0IsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQzlELElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztZQUNsQyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDeEMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQzNDO2FBQU07WUFDTCxJQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztZQUNwQixJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUM3RztJQUNILENBQUM7O0lBL0ZEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7c0RBQ0wsRUFBRSxvQkFBRixFQUFFLENBQUMsSUFBSTs2Q0FBUTtJQUU1QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDO3NEQUNSLEVBQUUsb0JBQUYsRUFBRSxDQUFDLFdBQVc7aURBQVE7SUFFdkM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDSCxFQUFFLG9CQUFGLEVBQUUsQ0FBQyxJQUFJOytDQUFRO0lBRTlCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7c0RBQ0YsRUFBRSxvQkFBRixFQUFFLENBQUMsTUFBTTtrREFBUTtJQVJoQixJQUFJO1FBRHhCLE9BQU87T0FDYSxJQUFJLENBa0d4QjtJQUFELFdBQUM7Q0FsR0QsQUFrR0MsQ0FsR2lDLEVBQUUsQ0FBQyxTQUFTLEdBa0c3QztrQkFsR29CLElBQUkiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFja0hvbWVCdG4gZnJvbSAnLi9CYWNrSG9tZUJ0bic7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcbmNvbnN0IExPQURfU0NFTkVfTUlOX1NFQzogbnVtYmVyID0gMS4yO1xyXG5lbnVtIHNjZW5lTGlzdCB7XHJcbiAgJ1dhdGVyX3NwcmVhZCcgPSAn5rC05rOi5omp5pWj5pWI5p6c77yIc2hhZGVy77yJJyxcclxuICAnU3BlY3VsYXJfZ2xvc3MnID0gJ+mVnOmdouWFieazveaViOaenO+8iHNoYWRlcu+8iScsXHJcbiAgJ0Rpc3NvbHZlX2NvbG9yJyA9ICfmurbop6PmlYjmnpzvvIhzaGFkZXLvvIknLFxyXG4gICdGb2xsb3dfc3BvdCcgPSAn6L+95YWJ5pWI5p6c77yIc2hhZGVy77yJJyxcclxuICAnTWV0YWJhbGwnID0gJ+iejeeQg+aViOaenO+8iHNoYWRlcu+8iScsXHJcbiAgJ0NpcmNsZV9hdmF0YXInID0gJ+WchuW9ouWktOWDj++8iHNoYWRlcu+8iScsXHJcbiAgJ1NjcmF0Y2hfdGlja2V0JyA9ICfliK7liK7ljaHlrp7njrAnLFxyXG4gICdDb2luX2ZseV90b193YWxsZXQnID0gJ+mHkeW4geiQveiii+aViOaenCcsXHJcbiAgJ01vdmluZ19naG9zdCcgPSAn56e75Yqo5q6L5b2x5pWI5p6cJyxcclxuICAnTWFnbmlmeWluZ19taXJyb3InID0gJ+aUvuWkp+mVnOaViOaenCcsXHJcbiAgJ1R5cGVyJyA9ICfmiZPlrZfmnLrmlYjmnpwnLFxyXG4gICdCdWxsZXRfVHJhY2tpbmcnID0gJ+WtkOW8uei3n+i4quaViOaenCcsXHJcbiAgJ0luZmluaXRlX2JnX3Njcm9sbCcgPSAn6IOM5pmv5peg6ZmQ5rua5YqoJyxcclxuICAnQ2hhbmdlX2Nsb3RoZXMnID0gJ+aNouijhScsXHJcbiAgJ1NjcmVlbl92aWJyYXRpbmcnID0gJ+mch+Wxj+aViOaenCvliqjnlLvmgaLlpI3nrKzkuIDluKcnLFxyXG4gICdKb3lzdGljaycgPSAn6YGl5o6n5p2GJyxcclxuICAnRmlsdGVyJyA9ICfpopzoibLmu6TplZwnLFxyXG4gICdNb3NhaWMnID0gJ+mprOi1m+WFiy/lg4/ntKDpo47vvIhzaGFkZXLvvIknLFxyXG4gICdQaG90b19nYWxsZXJ5JyA9ICfmuJDlj5jov4fmuKHnmoTnm7jlhozvvIhzaGFkZXLvvIknXHJcbn1cclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhvbWUgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gIGxvYWRpbmdOb2RlOiBjYy5Ob2RlID0gbnVsbDtcclxuICBAcHJvcGVydHkoY2MuUHJvZ3Jlc3NCYXIpXHJcbiAgbG9hZGluZ1Byb2dyZXNzOiBjYy5Qcm9ncmVzc0JhciA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgc2Nyb2xsQ29udGVudDogY2MuTm9kZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLlByZWZhYilcclxuICBzY3JvbGxJdGVtUHJlZmFiOiBjYy5QcmVmYWIgPSBudWxsO1xyXG5cclxuICBvbkxvYWQoKSB7XHJcbiAgICB0aGlzLmluaXRTY3JvbGxJdGVtKCk7XHJcbiAgfVxyXG5cclxuICBzdGFydCgpIHtcclxuICAgIHRoaXMuanVkZ2VKdW1wKCk7XHJcbiAgfVxyXG5cclxuICBqdWRnZUp1bXAoKSB7XHJcbiAgICBjb25zdCBzY2VuZU5hbWUgPSB0aGlzLmdldFF1ZXJ5U3RyaW5nQnlOYW1lKCdzY2VuZU5hbWUnKTtcclxuICAgIGNvbnN0IGlzU2FtZVZpc2l0ID0gd2luZG93Wydpc1NhbWVWaXNpdCddO1xyXG5cclxuICAgIGlmICghc2NlbmVOYW1lKSByZXR1cm47XHJcbiAgICBpZiAoaXNTYW1lVmlzaXQpIHJldHVybjtcclxuXHJcbiAgICBpZiAoc2NlbmVMaXN0W3NjZW5lTmFtZV0pIHtcclxuICAgICAgd2luZG93Wydpc1NhbWVWaXNpdCddID0gdHJ1ZTtcclxuICAgICAgdGhpcy5sb2FkU2NlbmUoc2NlbmVOYW1lKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldFF1ZXJ5U3RyaW5nQnlOYW1lKG5hbWUpIHtcclxuICAgIGxldCByZXN1bHQgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLm1hdGNoKG5ldyBSZWdFeHAoJ1s/Jl0nICsgbmFtZSArICc9KFteJl0rKScsICdpJykpO1xyXG4gICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsIHx8IHJlc3VsdC5sZW5ndGggPCAxID8gJycgOiByZXN1bHRbMV07XHJcbiAgfVxyXG5cclxuICBpbml0U2Nyb2xsSXRlbSgpIHtcclxuICAgIGZvciAobGV0IGtleSBpbiBzY2VuZUxpc3QpIHtcclxuICAgICAgbGV0IHNjcm9sbEl0ZW0gPSBjYy5pbnN0YW50aWF0ZSh0aGlzLnNjcm9sbEl0ZW1QcmVmYWIpO1xyXG5cclxuICAgICAgc2Nyb2xsSXRlbS5nZXRDaGlsZEJ5TmFtZSgnbGFiZWwnKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IHNjZW5lTGlzdFtrZXldO1xyXG4gICAgICBzY3JvbGxJdGVtLm9uKFxyXG4gICAgICAgIGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCxcclxuICAgICAgICAoKSA9PiB7XHJcbiAgICAgICAgICBjYy50d2VlbihzY3JvbGxJdGVtKVxyXG4gICAgICAgICAgICAudG8oMC4xLCB7IHNjYWxlOiAxLjA1IH0pXHJcbiAgICAgICAgICAgIC50bygwLjEsIHsgc2NhbGU6IDEgfSlcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICAgICAgICB0aGlzLmxvYWRTY2VuZShrZXkpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGhpc1xyXG4gICAgICApO1xyXG5cclxuICAgICAgdGhpcy5zY3JvbGxDb250ZW50LmFkZENoaWxkKHNjcm9sbEl0ZW0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYmVnaW5Mb2FkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgZmluaXNoTG9hZEZsYWc6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBsb2FkVGltZTogbnVtYmVyID0gMDtcclxuICBsb2FkU2NlbmVOYW1lOiBzdHJpbmcgPSAnJztcclxuICBsb2FkU2NlbmUoa2V5KSB7XHJcbiAgICBpZiAodGhpcy5iZWdpbkxvYWQpIHJldHVybjtcclxuICAgIHRoaXMubG9hZGluZ1Byb2dyZXNzLnByb2dyZXNzID0gMDtcclxuICAgIHRoaXMubG9hZGluZ05vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgIHRoaXMuYmVnaW5Mb2FkID0gdHJ1ZTtcclxuICAgIHRoaXMubG9hZFNjZW5lTmFtZSA9IGtleTtcclxuXHJcbiAgICBjYy5kaXJlY3Rvci5wcmVsb2FkU2NlbmUoXHJcbiAgICAgIGtleSxcclxuICAgICAgKGNvbXBsZXRlZENvdW50LCB0b3RhbENvdW50KSA9PiB7XHJcbiAgICAgICAgLy8g6L+Y5piv5YGa5YGH6L+b5bqm5p2h5ZCn77yM57yT5a2Y5LmL5ZCO5aSq5b+r5LqG77yM5LiA6Zeq6ICM6L+H55qE5L2T6aqM5LiN5aW9XHJcbiAgICAgICAgLy8gdGhpcy5sb2FkaW5nUHJvZ3Jlc3MucHJvZ3Jlc3MgPSBjb21wbGV0ZWRDb3VudCAvIHRvdGFsQ291bnQ7XHJcbiAgICAgIH0sXHJcbiAgICAgIChlcnJvciwgYXNzZXQpID0+IHtcclxuICAgICAgICBpZiAoIWVycm9yKSB7XHJcbiAgICAgICAgICB0aGlzLmZpbmlzaExvYWRGbGFnID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5sb2FkaW5nTm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgIHRoaXMuYmVnaW5Mb2FkID0gZmFsc2U7XHJcbiAgICAgICAgICB0aGlzLmxvYWRUaW1lID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZHQpIHtcclxuICAgIGlmICghdGhpcy5iZWdpbkxvYWQpIHJldHVybjtcclxuXHJcbiAgICBpZiAodGhpcy5sb2FkVGltZSA+PSBMT0FEX1NDRU5FX01JTl9TRUMgJiYgdGhpcy5maW5pc2hMb2FkRmxhZykge1xyXG4gICAgICB0aGlzLmxvYWRpbmdQcm9ncmVzcy5wcm9ncmVzcyA9IDE7XHJcbiAgICAgIEJhY2tIb21lQnRuLmluc3RhbmNlLnRvZ2dsZUFjdGl2ZSh0cnVlKTtcclxuICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKHRoaXMubG9hZFNjZW5lTmFtZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmxvYWRUaW1lICs9IGR0O1xyXG4gICAgICB0aGlzLmxvYWRpbmdQcm9ncmVzcy5wcm9ncmVzcyA9IE1hdGgubWluKHRoaXMubG9hZFRpbWUgLyBMT0FEX1NDRU5FX01JTl9TRUMsIHRoaXMuZmluaXNoTG9hZEZsYWcgPyAxIDogMC45KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Infinite_bg_scroll/Infinite_bg_scroll.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '58a09IoQgtOp59qWxU/tUY+', 'Infinite_bg_scroll');
// Scene/Infinite_bg_scroll/Infinite_bg_scroll.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Infinite_bg_scroll = /** @class */ (function (_super) {
    __extends(Infinite_bg_scroll, _super);
    function Infinite_bg_scroll() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bg1 = null;
        _this.bg2 = null;
        _this.speed = 500;
        return _this;
    }
    Infinite_bg_scroll.prototype.onLoad = function () {
        var viewSize = cc.view.getVisibleSize();
        this.bg2.getComponent(cc.Widget).left = viewSize.width;
        this.bg2.getComponent(cc.Widget).right = -viewSize.width;
    };
    Infinite_bg_scroll.prototype.update = function (dt) {
        var temp = dt * this.speed;
        if (this.bg2.x - temp <= 0) {
            this.bg1.x = this.bg2.x;
            this.bg2.x = this.bg1.x + this.bg1.width;
        }
        this.bg1.x -= temp;
        this.bg2.x -= temp;
    };
    var _b, _c;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Infinite_bg_scroll.prototype, "bg1", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Node) === "function" ? _c : Object)
    ], Infinite_bg_scroll.prototype, "bg2", void 0);
    Infinite_bg_scroll = __decorate([
        ccclass
    ], Infinite_bg_scroll);
    return Infinite_bg_scroll;
}(cc.Component));
exports.default = Infinite_bg_scroll;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXEluZmluaXRlX2JnX3Njcm9sbFxcSW5maW5pdGVfYmdfc2Nyb2xsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQWdELHNDQUFZO0lBQTVEO1FBQUEscUVBdUJDO1FBckJDLFNBQUcsR0FBWSxJQUFJLENBQUM7UUFFcEIsU0FBRyxHQUFZLElBQUksQ0FBQztRQUVwQixXQUFLLEdBQVcsR0FBRyxDQUFDOztJQWlCdEIsQ0FBQztJQWhCQyxtQ0FBTSxHQUFOO1FBQ0UsSUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMxQyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUE7UUFDdEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUE7SUFDMUQsQ0FBQztJQUVELG1DQUFNLEdBQU4sVUFBTyxFQUFFO1FBQ1AsSUFBTSxJQUFJLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDN0IsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxFQUFFO1lBQzFCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO1NBQzFDO1FBRUQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQztJQUNyQixDQUFDOztJQXBCRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUNiLEVBQUUsb0JBQUYsRUFBRSxDQUFDLElBQUk7bURBQVE7SUFFcEI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDYixFQUFFLG9CQUFGLEVBQUUsQ0FBQyxJQUFJO21EQUFRO0lBSkQsa0JBQWtCO1FBRHRDLE9BQU87T0FDYSxrQkFBa0IsQ0F1QnRDO0lBQUQseUJBQUM7Q0F2QkQsQUF1QkMsQ0F2QitDLEVBQUUsQ0FBQyxTQUFTLEdBdUIzRDtrQkF2Qm9CLGtCQUFrQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbmZpbml0ZV9iZ19zY3JvbGwgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gIGJnMTogY2MuTm9kZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgYmcyOiBjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgc3BlZWQ6IG51bWJlciA9IDUwMDtcclxuICBvbkxvYWQoKSB7XHJcbiAgICBjb25zdCB2aWV3U2l6ZSA9IGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKTtcclxuICAgIHRoaXMuYmcyLmdldENvbXBvbmVudChjYy5XaWRnZXQpLmxlZnQgPSB2aWV3U2l6ZS53aWR0aFxyXG4gICAgdGhpcy5iZzIuZ2V0Q29tcG9uZW50KGNjLldpZGdldCkucmlnaHQgPSAtdmlld1NpemUud2lkdGhcclxuICB9XHJcblxyXG4gIHVwZGF0ZShkdCkge1xyXG4gICAgY29uc3QgdGVtcCA9IGR0ICogdGhpcy5zcGVlZDtcclxuICAgIGlmICh0aGlzLmJnMi54IC0gdGVtcCA8PSAwKSB7XHJcbiAgICAgIHRoaXMuYmcxLnggPSB0aGlzLmJnMi54O1xyXG4gICAgICB0aGlzLmJnMi54ID0gdGhpcy5iZzEueCArIHRoaXMuYmcxLndpZHRoO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuYmcxLnggLT0gdGVtcDtcclxuICAgIHRoaXMuYmcyLnggLT0gdGVtcDtcclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Magnifying_mirror/Magnifying_mirror.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ac762bfY29KOIBc8dW/z/gl', 'Magnifying_mirror');
// Scene/Magnifying_mirror/Magnifying_mirror.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MagnifyingMirror = /** @class */ (function (_super) {
    __extends(MagnifyingMirror, _super);
    function MagnifyingMirror() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.mirror = null;
        _this.mirrorCameraNode = null;
        _this.tempCameraSpriteNode = null;
        _this.viewSize = null;
        _this.touchStartPos = null;
        _this.mirrorOriginPos = null;
        return _this;
    }
    MagnifyingMirror.prototype.onLoad = function () {
        this.viewSize = cc.view.getVisibleSize();
        this.initCamera();
        this.mirrorCameraNode.setPosition(this.mirror.getPosition());
        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStartEvent, this);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
    };
    MagnifyingMirror.prototype.touchStartEvent = function (event) {
        this.touchStartPos = event.getLocation();
        this.mirrorOriginPos = this.mirror.getPosition();
    };
    MagnifyingMirror.prototype.touchMoveEvent = function (event) {
        var touchPos = event.getLocation();
        var pos = this.mirrorOriginPos.add(touchPos.subtract(this.touchStartPos));
        this.mirror.setPosition(pos);
        this.mirrorCameraNode.setPosition(pos);
    };
    MagnifyingMirror.prototype.initCamera = function () {
        var visibleRect = cc.view.getVisibleSize();
        var texture = new cc.RenderTexture();
        texture.initWithSize(visibleRect.width, visibleRect.height);
        var spriteFrame = new cc.SpriteFrame();
        spriteFrame.setTexture(texture);
        this.mirrorCameraNode.getComponent(cc.Camera).targetTexture = texture;
        this.tempCameraSpriteNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;
        this.tempCameraSpriteNode.scaleY = -1;
    };
    var _b, _c, _d;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], MagnifyingMirror.prototype, "mirror", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Node) === "function" ? _c : Object)
    ], MagnifyingMirror.prototype, "mirrorCameraNode", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_d = typeof cc !== "undefined" && cc.Node) === "function" ? _d : Object)
    ], MagnifyingMirror.prototype, "tempCameraSpriteNode", void 0);
    MagnifyingMirror = __decorate([
        ccclass
    ], MagnifyingMirror);
    return MagnifyingMirror;
}(cc.Component));
exports.default = MagnifyingMirror;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXE1hZ25pZnlpbmdfbWlycm9yXFxNYWduaWZ5aW5nX21pcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUE4QyxvQ0FBWTtJQUExRDtRQUFBLHFFQThDQztRQTVDRyxZQUFNLEdBQVksSUFBSSxDQUFDO1FBRXZCLHNCQUFnQixHQUFZLElBQUksQ0FBQztRQUVqQywwQkFBb0IsR0FBWSxJQUFJLENBQUM7UUFHckMsY0FBUSxHQUFZLElBQUksQ0FBQztRQVV6QixtQkFBYSxHQUFZLElBQUksQ0FBQztRQUM5QixxQkFBZSxHQUFZLElBQUksQ0FBQzs7SUEwQnBDLENBQUM7SUFwQ0csaUNBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN6QyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFFN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUlELDBDQUFlLEdBQWYsVUFBZ0IsS0FBSztRQUNuQixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN6QyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbkQsQ0FBQztJQUVELHlDQUFjLEdBQWQsVUFBZSxLQUFLO1FBQ2xCLElBQUksUUFBUSxHQUFZLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM1QyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFBO1FBRXpFLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELHFDQUFVLEdBQVY7UUFDRSxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBRTNDLElBQUksT0FBTyxHQUFHLElBQUksRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JDLE9BQU8sQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUQsSUFBSSxXQUFXLEdBQUcsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdkMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDO1FBRXRFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDNUUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDOztJQTNDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUNWLEVBQUUsb0JBQUYsRUFBRSxDQUFDLElBQUk7b0RBQVE7SUFFdkI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDQSxFQUFFLG9CQUFGLEVBQUUsQ0FBQyxJQUFJOzhEQUFRO0lBRWpDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7c0RBQ0ksRUFBRSxvQkFBRixFQUFFLENBQUMsSUFBSTtrRUFBUTtJQU5wQixnQkFBZ0I7UUFEcEMsT0FBTztPQUNhLGdCQUFnQixDQThDcEM7SUFBRCx1QkFBQztDQTlDRCxBQThDQyxDQTlDNkMsRUFBRSxDQUFDLFNBQVMsR0E4Q3pEO2tCQTlDb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYWduaWZ5aW5nTWlycm9yIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgbWlycm9yOiBjYy5Ob2RlID0gbnVsbDtcclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgbWlycm9yQ2FtZXJhTm9kZTogY2MuTm9kZSA9IG51bGw7XHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIHRlbXBDYW1lcmFTcHJpdGVOb2RlOiBjYy5Ob2RlID0gbnVsbDtcclxuXHJcblxyXG4gICAgdmlld1NpemU6IGNjLlNpemUgPSBudWxsO1xyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgdGhpcy52aWV3U2l6ZSA9IGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKTtcclxuICAgICAgdGhpcy5pbml0Q2FtZXJhKCk7XHJcbiAgICAgIHRoaXMubWlycm9yQ2FtZXJhTm9kZS5zZXRQb3NpdGlvbih0aGlzLm1pcnJvci5nZXRQb3NpdGlvbigpKTtcclxuXHJcbiAgICAgIHRoaXMubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9TVEFSVCwgdGhpcy50b3VjaFN0YXJ0RXZlbnQsIHRoaXMpO1xyXG4gICAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgdGhpcy50b3VjaE1vdmVFdmVudCwgdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgdG91Y2hTdGFydFBvczogY2MuVmVjMiA9IG51bGw7XHJcbiAgICBtaXJyb3JPcmlnaW5Qb3M6IGNjLlZlYzIgPSBudWxsO1xyXG4gICAgdG91Y2hTdGFydEV2ZW50KGV2ZW50KSB7XHJcbiAgICAgIHRoaXMudG91Y2hTdGFydFBvcyA9IGV2ZW50LmdldExvY2F0aW9uKCk7XHJcbiAgICAgIHRoaXMubWlycm9yT3JpZ2luUG9zID0gdGhpcy5taXJyb3IuZ2V0UG9zaXRpb24oKTtcclxuICAgIH1cclxuXHJcbiAgICB0b3VjaE1vdmVFdmVudChldmVudCkge1xyXG4gICAgICBsZXQgdG91Y2hQb3M6IGNjLlZlYzIgPSBldmVudC5nZXRMb2NhdGlvbigpO1xyXG4gICAgICBsZXQgcG9zID0gdGhpcy5taXJyb3JPcmlnaW5Qb3MuYWRkKHRvdWNoUG9zLnN1YnRyYWN0KHRoaXMudG91Y2hTdGFydFBvcykpXHJcblxyXG4gICAgICB0aGlzLm1pcnJvci5zZXRQb3NpdGlvbihwb3MpO1xyXG4gICAgICB0aGlzLm1pcnJvckNhbWVyYU5vZGUuc2V0UG9zaXRpb24ocG9zKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0Q2FtZXJhKCkge1xyXG4gICAgICBsZXQgdmlzaWJsZVJlY3QgPSBjYy52aWV3LmdldFZpc2libGVTaXplKCk7XHJcblxyXG4gICAgICBsZXQgdGV4dHVyZSA9IG5ldyBjYy5SZW5kZXJUZXh0dXJlKCk7XHJcbiAgICAgIHRleHR1cmUuaW5pdFdpdGhTaXplKHZpc2libGVSZWN0LndpZHRoLCB2aXNpYmxlUmVjdC5oZWlnaHQpO1xyXG4gICAgICBsZXQgc3ByaXRlRnJhbWUgPSBuZXcgY2MuU3ByaXRlRnJhbWUoKTtcclxuICAgICAgc3ByaXRlRnJhbWUuc2V0VGV4dHVyZSh0ZXh0dXJlKTtcclxuICAgICAgdGhpcy5taXJyb3JDYW1lcmFOb2RlLmdldENvbXBvbmVudChjYy5DYW1lcmEpLnRhcmdldFRleHR1cmUgPSB0ZXh0dXJlO1xyXG5cclxuICAgICAgdGhpcy50ZW1wQ2FtZXJhU3ByaXRlTm9kZS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHNwcml0ZUZyYW1lO1xyXG4gICAgICB0aGlzLnRlbXBDYW1lcmFTcHJpdGVOb2RlLnNjYWxlWSA9IC0xO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Moving_ghost/Moving_ghost.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0dc97ZIzztH7IJMDQwHUeiI', 'Moving_ghost');
// Scene/Moving_ghost/Moving_ghost.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Moving_ghost = /** @class */ (function (_super) {
    __extends(Moving_ghost, _super);
    function Moving_ghost() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ghostCanvasList = [];
        _this.role = null;
        _this.roleCamera = null;
        return _this;
    }
    Moving_ghost.prototype.onLoad = function () {
        var _this = this;
        var roleZindex = 10;
        this.role.zIndex = roleZindex;
        var texture = new cc.RenderTexture();
        texture.initWithSize(this.node.width, this.node.height);
        var spriteFrame = new cc.SpriteFrame();
        spriteFrame.setTexture(texture);
        this.roleCamera.targetTexture = texture;
        this.ghostCanvasList.forEach(function (ghost, idx) {
            ghost.node.scaleY = -1;
            ghost.node.zIndex = roleZindex - idx;
            ghost.node.opacity = 100 - idx * 15;
            ghost.spriteFrame = spriteFrame;
        });
        this.schedule(this.ghostFollow, 0.1, cc.macro.REPEAT_FOREVER);
        fcc.eventMgr.eventListener("SCENE", function (isUpdate) {
            cc.log(isUpdate);
            if (isUpdate) {
                _this.beforeDestroy();
            }
            else {
                var roleZindex_1 = 10;
                _this.role.zIndex = roleZindex_1;
                var texture_1 = new cc.RenderTexture();
                texture_1.initWithSize(_this.node.width, _this.node.height);
                var spriteFrame_1 = new cc.SpriteFrame();
                spriteFrame_1.setTexture(texture_1);
                _this.roleCamera.targetTexture = texture_1;
                _this.ghostCanvasList.forEach(function (ghost, idx) {
                    ghost.node.scaleY = -1;
                    ghost.node.zIndex = roleZindex_1 - idx;
                    ghost.node.opacity = 100 - idx * 15;
                    ghost.spriteFrame = spriteFrame_1;
                });
                _this.schedule(_this.ghostFollow, 0.1, cc.macro.REPEAT_FOREVER);
            }
        }, true);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
    };
    Moving_ghost.prototype.touchMoveEvent = function (evt) {
        this.role.x += evt.getDeltaX();
        this.role.y += evt.getDeltaY();
    };
    Moving_ghost.prototype.beforeDestroy = function () {
        this.unschedule(this.ghostFollow);
    };
    Moving_ghost.prototype.ghostFollow = function () {
        var _this = this;
        this.ghostCanvasList.forEach(function (ghost, i) {
            var dis = ghost.node.position.sub(_this.role.position).mag();
            if (dis < 0.5)
                return; // 给个误差范围，涉及到浮点数，dis的计算不可能精准，小于0.5就可以认为是静止了
            ghost.node.stopAllActions();
            ghost.node.runAction(cc.moveTo(i * 0.04 + 0.02, _this.role.x, _this.role.y));
        });
    };
    var _b, _c;
    __decorate([
        property([cc.Sprite]),
        __metadata("design:type", Array)
    ], Moving_ghost.prototype, "ghostCanvasList", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Moving_ghost.prototype, "role", void 0);
    __decorate([
        property(cc.Camera),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Camera) === "function" ? _c : Object)
    ], Moving_ghost.prototype, "roleCamera", void 0);
    Moving_ghost = __decorate([
        ccclass
    ], Moving_ghost);
    return Moving_ghost;
}(cc.Component));
exports.default = Moving_ghost;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXE1vdmluZ19naG9zdFxcTW92aW5nX2dob3N0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQTBDLGdDQUFZO0lBQXREO1FBQUEscUVBb0VDO1FBbEVDLHFCQUFlLEdBQWdCLEVBQUUsQ0FBQztRQUVsQyxVQUFJLEdBQVksSUFBSSxDQUFDO1FBRXJCLGdCQUFVLEdBQWMsSUFBSSxDQUFDOztJQThEL0IsQ0FBQztJQTVEQyw2QkFBTSxHQUFOO1FBQUEsaUJBeUNDO1FBeENDLElBQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQUM7UUFFOUIsSUFBTSxPQUFPLEdBQUcsSUFBSSxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDdkMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hELElBQU0sV0FBVyxHQUFHLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3pDLFdBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLFVBQUMsS0FBSyxFQUFFLEdBQUc7WUFDdEMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDdkIsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsVUFBVSxHQUFHLEdBQUcsQ0FBQztZQUNyQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUNwQyxLQUFLLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUNsQyxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUU5RCxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUMsVUFBQyxRQUFnQjtZQUNoRCxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1lBQ2hCLElBQUcsUUFBUSxFQUFDO2dCQUNSLEtBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQzthQUN4QjtpQkFBSztnQkFDSixJQUFNLFlBQVUsR0FBRyxFQUFFLENBQUM7Z0JBQ3RCLEtBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLFlBQVUsQ0FBQztnQkFDOUIsSUFBTSxTQUFPLEdBQUcsSUFBSSxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7Z0JBQ3ZDLFNBQU8sQ0FBQyxZQUFZLENBQUMsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDeEQsSUFBTSxhQUFXLEdBQUcsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7Z0JBQ3pDLGFBQVcsQ0FBQyxVQUFVLENBQUMsU0FBTyxDQUFDLENBQUM7Z0JBQ2hDLEtBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxHQUFHLFNBQU8sQ0FBQztnQkFDeEMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsVUFBQyxLQUFLLEVBQUUsR0FBRztvQkFDdEMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ3ZCLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLFlBQVUsR0FBRyxHQUFHLENBQUM7b0JBQ3JDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO29CQUNwQyxLQUFLLENBQUMsV0FBVyxHQUFHLGFBQVcsQ0FBQztnQkFDbEMsQ0FBQyxDQUFDLENBQUM7Z0JBQ0gsS0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO2FBQy9EO1FBQ0wsQ0FBQyxFQUFDLElBQUksQ0FBQyxDQUFBO1FBRVAsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELHFDQUFjLEdBQWQsVUFBZSxHQUF3QjtRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxvQ0FBYSxHQUFiO1FBQ0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELGtDQUFXLEdBQVg7UUFBQSxpQkFPQztRQU5DLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLFVBQUMsS0FBSyxFQUFFLENBQUM7WUFDcEMsSUFBTSxHQUFHLEdBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFnQixDQUFDLEdBQUcsQ0FBQyxLQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ3ZFLElBQUksR0FBRyxHQUFHLEdBQUc7Z0JBQUUsT0FBTyxDQUFDLDJDQUEyQztZQUNsRSxLQUFLLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQzVCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxJQUFJLEVBQUUsS0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsS0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdFLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7SUFqRUQ7UUFEQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7O3lEQUNZO0lBRWxDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7c0RBQ1osRUFBRSxvQkFBRixFQUFFLENBQUMsSUFBSTs4Q0FBUTtJQUVyQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3NEQUNSLEVBQUUsb0JBQUYsRUFBRSxDQUFDLE1BQU07b0RBQVE7SUFOVixZQUFZO1FBRGhDLE9BQU87T0FDYSxZQUFZLENBb0VoQztJQUFELG1CQUFDO0NBcEVELEFBb0VDLENBcEV5QyxFQUFFLENBQUMsU0FBUyxHQW9FckQ7a0JBcEVvQixZQUFZIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vdmluZ19naG9zdCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gIEBwcm9wZXJ0eShbY2MuU3ByaXRlXSlcbiAgZ2hvc3RDYW52YXNMaXN0OiBjYy5TcHJpdGVbXSA9IFtdO1xuICBAcHJvcGVydHkoY2MuTm9kZSlcbiAgcm9sZTogY2MuTm9kZSA9IG51bGw7XG4gIEBwcm9wZXJ0eShjYy5DYW1lcmEpXG4gIHJvbGVDYW1lcmE6IGNjLkNhbWVyYSA9IG51bGw7XG5cbiAgb25Mb2FkKCkge1xuICAgIGNvbnN0IHJvbGVaaW5kZXggPSAxMDtcbiAgICB0aGlzLnJvbGUuekluZGV4ID0gcm9sZVppbmRleDtcblxuICAgIGNvbnN0IHRleHR1cmUgPSBuZXcgY2MuUmVuZGVyVGV4dHVyZSgpO1xuICAgIHRleHR1cmUuaW5pdFdpdGhTaXplKHRoaXMubm9kZS53aWR0aCwgdGhpcy5ub2RlLmhlaWdodCk7XG4gICAgY29uc3Qgc3ByaXRlRnJhbWUgPSBuZXcgY2MuU3ByaXRlRnJhbWUoKTtcbiAgICBzcHJpdGVGcmFtZS5zZXRUZXh0dXJlKHRleHR1cmUpO1xuICAgIHRoaXMucm9sZUNhbWVyYS50YXJnZXRUZXh0dXJlID0gdGV4dHVyZTtcbiAgICB0aGlzLmdob3N0Q2FudmFzTGlzdC5mb3JFYWNoKChnaG9zdCwgaWR4KSA9PiB7XG4gICAgICBnaG9zdC5ub2RlLnNjYWxlWSA9IC0xO1xuICAgICAgZ2hvc3Qubm9kZS56SW5kZXggPSByb2xlWmluZGV4IC0gaWR4O1xuICAgICAgZ2hvc3Qubm9kZS5vcGFjaXR5ID0gMTAwIC0gaWR4ICogMTU7XG4gICAgICBnaG9zdC5zcHJpdGVGcmFtZSA9IHNwcml0ZUZyYW1lO1xuICAgIH0pO1xuXG4gICAgdGhpcy5zY2hlZHVsZSh0aGlzLmdob3N0Rm9sbG93LCAwLjEsIGNjLm1hY3JvLlJFUEVBVF9GT1JFVkVSKTtcblxuICAgIGZjYy5ldmVudE1nci5ldmVudExpc3RlbmVyKFwiU0NFTkVcIiwoaXNVcGRhdGU6Ym9vbGVhbik9PntcbiAgICAgICAgY2MubG9nKGlzVXBkYXRlKVxuICAgICAgICBpZihpc1VwZGF0ZSl7XG4gICAgICAgICAgICB0aGlzLmJlZm9yZURlc3Ryb3koKTtcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgIGNvbnN0IHJvbGVaaW5kZXggPSAxMDtcbiAgICAgICAgICB0aGlzLnJvbGUuekluZGV4ID0gcm9sZVppbmRleDtcbiAgICAgICAgICBjb25zdCB0ZXh0dXJlID0gbmV3IGNjLlJlbmRlclRleHR1cmUoKTtcbiAgICAgICAgICB0ZXh0dXJlLmluaXRXaXRoU2l6ZSh0aGlzLm5vZGUud2lkdGgsIHRoaXMubm9kZS5oZWlnaHQpO1xuICAgICAgICAgIGNvbnN0IHNwcml0ZUZyYW1lID0gbmV3IGNjLlNwcml0ZUZyYW1lKCk7XG4gICAgICAgICAgc3ByaXRlRnJhbWUuc2V0VGV4dHVyZSh0ZXh0dXJlKTtcbiAgICAgICAgICB0aGlzLnJvbGVDYW1lcmEudGFyZ2V0VGV4dHVyZSA9IHRleHR1cmU7XG4gICAgICAgICAgdGhpcy5naG9zdENhbnZhc0xpc3QuZm9yRWFjaCgoZ2hvc3QsIGlkeCkgPT4ge1xuICAgICAgICAgICAgZ2hvc3Qubm9kZS5zY2FsZVkgPSAtMTtcbiAgICAgICAgICAgIGdob3N0Lm5vZGUuekluZGV4ID0gcm9sZVppbmRleCAtIGlkeDtcbiAgICAgICAgICAgIGdob3N0Lm5vZGUub3BhY2l0eSA9IDEwMCAtIGlkeCAqIDE1O1xuICAgICAgICAgICAgZ2hvc3Quc3ByaXRlRnJhbWUgPSBzcHJpdGVGcmFtZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLnNjaGVkdWxlKHRoaXMuZ2hvc3RGb2xsb3csIDAuMSwgY2MubWFjcm8uUkVQRUFUX0ZPUkVWRVIpO1xuICAgICAgICB9XG4gICAgfSx0cnVlKVxuXG4gICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX01PVkUsIHRoaXMudG91Y2hNb3ZlRXZlbnQsIHRoaXMpO1xuICB9XG5cbiAgdG91Y2hNb3ZlRXZlbnQoZXZ0OiBjYy5FdmVudC5FdmVudFRvdWNoKSB7XG4gICAgdGhpcy5yb2xlLnggKz0gZXZ0LmdldERlbHRhWCgpO1xuICAgIHRoaXMucm9sZS55ICs9IGV2dC5nZXREZWx0YVkoKTtcbiAgfVxuXG4gIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy51bnNjaGVkdWxlKHRoaXMuZ2hvc3RGb2xsb3cpO1xuICB9XG5cbiAgZ2hvc3RGb2xsb3coKSB7XG4gICAgdGhpcy5naG9zdENhbnZhc0xpc3QuZm9yRWFjaCgoZ2hvc3QsIGkpID0+IHtcbiAgICAgIGNvbnN0IGRpcyA9IChnaG9zdC5ub2RlLnBvc2l0aW9uIGFzIGFueSkuc3ViKHRoaXMucm9sZS5wb3NpdGlvbikubWFnKCk7XG4gICAgICBpZiAoZGlzIDwgMC41KSByZXR1cm47IC8vIOe7meS4quivr+W3ruiMg+WbtO+8jOa2ieWPiuWIsOa1rueCueaVsO+8jGRpc+eahOiuoeeul+S4jeWPr+iDveeyvuWHhu+8jOWwj+S6jjAuNeWwseWPr+S7peiupOS4uuaYr+mdmeatouS6hlxuICAgICAgZ2hvc3Qubm9kZS5zdG9wQWxsQWN0aW9ucygpO1xuICAgICAgZ2hvc3Qubm9kZS5ydW5BY3Rpb24oY2MubW92ZVRvKGkgKiAwLjA0ICsgMC4wMiwgdGhpcy5yb2xlLngsIHRoaXMucm9sZS55KSk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Typer/Typer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '48aa5Hi+pZK1IXozhBPh8Bf', 'Typer');
// Scene/Typer/Typer.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Typer = /** @class */ (function (_super) {
    __extends(Typer, _super);
    function Typer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.label = null;
        _this.richText = null;
        _this.typerTimer = null; // 计时器Id
        return _this;
    }
    Typer.prototype.onLoad = function () {
        this.showRichTextTyper();
    };
    Typer.prototype.beforeDestroy = function () {
        // Destroy前确保定时器关闭
        this.typerTimer && clearInterval(this.typerTimer);
    };
    Typer.prototype.showLabelTyper = function () {
        var str = '我是异名\n这是Label打字效果';
        this.richText.string = '';
        this.label.string = '';
        this.makeLaberTyper(str);
    };
    Typer.prototype.makeLaberTyper = function (str) {
        var _this = this;
        var charArr = str.split('');
        var charIdx = 0;
        this.typerTimer && clearInterval(this.typerTimer);
        this.typerTimer = setInterval(function () {
            if (charIdx >= charArr.length) {
                _this.typerTimer && clearInterval(_this.typerTimer);
            }
            else {
                charIdx += 1;
                _this.label.string = charArr.slice(0, charIdx).join('');
            }
        }, 50);
    };
    Typer.prototype.showRichTextTyper = function () {
        var str = '我是<color=#1B262E>异名</c>\n这是<color=#1B262E>富文本打字机</color>效果';
        this.richText.string = '';
        this.label.string = '';
        this.makeRichTextTyper(str);
    };
    Typer.prototype.makeRichTextTyper = function (str) {
        var _this = this;
        var delimiterCharList = ['✁', '✂', '✃', '✄', '✺', '✻', '✼', '❄', '❅', '❆', '❇', '❈', '❉', '❊'];
        var regexp = /<.+?\/?>/g;
        var matchArr = str.match(regexp);
        var delimiterChar = delimiterCharList.find(function (item) { return str.indexOf(item) == -1; });
        var replaceStr = str.replace(regexp, delimiterChar);
        var tagInfoArr = [];
        var temp = [];
        var tagInfo = {};
        var num = 0;
        for (var i = 0; i < replaceStr.length; i++) {
            if (replaceStr[i] == delimiterChar) {
                temp.push(i);
                if (temp.length >= 2) {
                    tagInfo.endStr = matchArr[tagInfoArr.length * 2 + 1];
                    tagInfo.endtIdx = i - num;
                    tagInfoArr.push(tagInfo);
                    temp = [];
                    tagInfo = {};
                }
                else {
                    tagInfo.startIdx = i - num;
                    tagInfo.startStr = matchArr[tagInfoArr.length * 2];
                }
                num += 1;
            }
        }
        var showCharArr = str.replace(regexp, '').split('');
        var typerArr = [];
        for (var i = 1; i <= showCharArr.length; i++) {
            var temp_1 = showCharArr.join('').slice(0, i);
            var addLen = 0;
            for (var j = 0; j < tagInfoArr.length; j++) {
                var tagInfo_1 = tagInfoArr[j];
                var start = tagInfo_1.startIdx;
                var end = tagInfo_1.endtIdx;
                if (i > start && i <= end) {
                    temp_1 = temp_1.slice(0, start + addLen) + tagInfo_1.startStr + temp_1.slice(start + addLen) + tagInfo_1.endStr;
                    addLen += tagInfo_1.startStr.length + tagInfo_1.endStr.length;
                }
                else if (i > end) {
                    temp_1 =
                        temp_1.slice(0, start + addLen) +
                            tagInfo_1.startStr +
                            temp_1.slice(start + addLen, end + addLen) +
                            tagInfo_1.endStr +
                            temp_1.slice(end + addLen);
                    addLen += tagInfo_1.startStr.length + tagInfo_1.endStr.length;
                }
            }
            typerArr.unshift(temp_1);
        }
        this.typerTimer && clearInterval(this.typerTimer);
        this.typerTimer = setInterval(function () {
            if (typerArr.length) {
                _this.richText.string = typerArr.pop();
            }
            else {
                _this.typerTimer && clearInterval(_this.typerTimer);
            }
        }, 50);
    };
    var _b, _c;
    __decorate([
        property(cc.Label),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Label) === "function" ? _b : Object)
    ], Typer.prototype, "label", void 0);
    __decorate([
        property(cc.RichText),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.RichText) === "function" ? _c : Object)
    ], Typer.prototype, "richText", void 0);
    Typer = __decorate([
        ccclass
    ], Typer);
    return Typer;
}(cc.Component));
exports.default = Typer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Mosaic/Mosaic.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e6cdawfgB1DSKkHRoeo2dHy', 'Mosaic');
// Scene/Mosaic/Mosaic.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Mosaic = /** @class */ (function (_super) {
    __extends(Mosaic, _super);
    function Mosaic() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.material = null;
        return _this;
    }
    Mosaic.prototype.onLoad = function () {
        this.material = this.node.getChildByName('npc').getComponent(cc.Sprite).getMaterial(0);
    };
    Mosaic.prototype.setPixelCount = function (slide, type) {
        this.material.setProperty(type + "_count", Math.floor(slide.progress * 100));
    };
    Mosaic.prototype.togglePixel = function (toggle) {
        this.material.define('USE_MASAIC', toggle.isChecked, 0, true);
    };
    Mosaic = __decorate([
        ccclass
    ], Mosaic);
    return Mosaic;
}(cc.Component));
exports.default = Mosaic;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXE1vc2FpY1xcTW9zYWljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQW9DLDBCQUFZO0lBQWhEO1FBQUEscUVBY0M7UUFiQyxjQUFRLEdBQWdCLElBQUksQ0FBQzs7SUFhL0IsQ0FBQztJQVhDLHVCQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pGLENBQUM7SUFFRCw4QkFBYSxHQUFiLFVBQWMsS0FBZ0IsRUFBRSxJQUFlO1FBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFJLElBQUksV0FBUSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQy9FLENBQUM7SUFFRCw0QkFBVyxHQUFYLFVBQVksTUFBaUI7UUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFia0IsTUFBTTtRQUQxQixPQUFPO09BQ2EsTUFBTSxDQWMxQjtJQUFELGFBQUM7Q0FkRCxBQWNDLENBZG1DLEVBQUUsQ0FBQyxTQUFTLEdBYy9DO2tCQWRvQixNQUFNIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vc2FpYyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgbWF0ZXJpYWw6IGNjLk1hdGVyaWFsID0gbnVsbDtcclxuXHJcbiAgb25Mb2FkKCkge1xyXG4gICAgdGhpcy5tYXRlcmlhbCA9IHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZSgnbnBjJykuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuZ2V0TWF0ZXJpYWwoMCk7XHJcbiAgfVxyXG5cclxuICBzZXRQaXhlbENvdW50KHNsaWRlOiBjYy5TbGlkZXIsIHR5cGU6ICd4JyB8ICd5Jykge1xyXG4gICAgdGhpcy5tYXRlcmlhbC5zZXRQcm9wZXJ0eShgJHt0eXBlfV9jb3VudGAsIE1hdGguZmxvb3Ioc2xpZGUucHJvZ3Jlc3MgKiAxMDApKTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZVBpeGVsKHRvZ2dsZTogY2MuVG9nZ2xlKSB7XHJcbiAgICB0aGlzLm1hdGVyaWFsLmRlZmluZSgnVVNFX01BU0FJQycsIHRvZ2dsZS5pc0NoZWNrZWQsIDAsIHRydWUpO1xyXG4gIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Specular_gloss/Specular_gloss.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2bb9dIUeMRDVI6AtjfVWHSm', 'Specular_gloss');
// Scene/Specular_gloss/Specular_gloss.ts

"use strict";
// Learn TypeScript:
//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var NewClass = /** @class */ (function (_super) {
    __extends(NewClass, _super);
    function NewClass() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.label = null;
        _this.text = 'hello';
        return _this;
        // update (dt) {}
    }
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    NewClass.prototype.start = function () {
    };
    var _b;
    __decorate([
        property(cc.Label),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Label) === "function" ? _b : Object)
    ], NewClass.prototype, "label", void 0);
    __decorate([
        property,
        __metadata("design:type", String)
    ], NewClass.prototype, "text", void 0);
    NewClass = __decorate([
        ccclass
    ], NewClass);
    return NewClass;
}(cc.Component));
exports.default = NewClass;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXFNwZWN1bGFyX2dsb3NzXFxTcGVjdWxhcl9nbG9zcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLHdFQUF3RTtBQUN4RSxtQkFBbUI7QUFDbkIsa0ZBQWtGO0FBQ2xGLDhCQUE4QjtBQUM5QixrRkFBa0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU1RSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFzQyw0QkFBWTtJQUFsRDtRQUFBLHFFQWlCQztRQWRHLFdBQUssR0FBYSxJQUFJLENBQUM7UUFHdkIsVUFBSSxHQUFXLE9BQU8sQ0FBQzs7UUFVdkIsaUJBQWlCO0lBQ3JCLENBQUM7SUFURyx3QkFBd0I7SUFFeEIsZUFBZTtJQUVmLHdCQUFLLEdBQUw7SUFFQSxDQUFDOztJQVhEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7c0RBQ1osRUFBRSxvQkFBRixFQUFFLENBQUMsS0FBSzsyQ0FBUTtJQUd2QjtRQURDLFFBQVE7OzBDQUNjO0lBTk4sUUFBUTtRQUQ1QixPQUFPO09BQ2EsUUFBUSxDQWlCNUI7SUFBRCxlQUFDO0NBakJELEFBaUJDLENBakJxQyxFQUFFLENBQUMsU0FBUyxHQWlCakQ7a0JBakJvQixRQUFRIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXdDbGFzcyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxyXG4gICAgbGFiZWw6IGNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHlcclxuICAgIHRleHQ6IHN0cmluZyA9ICdoZWxsbyc7XHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgLy8gb25Mb2FkICgpIHt9XHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Photo_gallery/Photo_gallery.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '26442Io+xpOVYLjZDK0EwlV', 'Photo_gallery');
// Scene/Photo_gallery/Photo_gallery.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Scene_transition = /** @class */ (function (_super) {
    __extends(Scene_transition, _super);
    function Scene_transition() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.switchNodeList = [];
        _this.fadeRadius = 0.1;
        _this.isTransforming = false;
        return _this;
    }
    Scene_transition.prototype.onLoad = function () {
        var _this = this;
        this.switchNodeList.forEach(function (node, idx) {
            node.zIndex = _this.switchNodeList.length - idx;
        });
    };
    Scene_transition.prototype.bgTramsform = function () {
        var _this = this;
        if (this.isTransforming)
            return;
        this.isTransforming = true;
        var time = 0.0;
        var node = this.switchNodeList[0];
        var material = node.getComponent(cc.Sprite).getMaterial(0);
        material.setProperty('u_fade_radius', this.fadeRadius);
        material.setProperty('u_time', time);
        material.define('USE_TRAMSFORM', true, 0, true);
        var timer = setInterval(function () {
            time += 0.03;
            material.setProperty('u_time', time);
            if (time > 1.0 + _this.fadeRadius) {
                _this.switchNodeList.shift();
                _this.switchNodeList.push(node);
                _this.switchNodeList.forEach(function (node, idx) {
                    node.zIndex = _this.switchNodeList.length - idx;
                });
                material.define('USE_TRAMSFORM', false, 0, true);
                _this.isTransforming = false;
                timer && clearInterval(timer);
            }
        }, 30);
    };
    __decorate([
        property([cc.Node]),
        __metadata("design:type", Array)
    ], Scene_transition.prototype, "switchNodeList", void 0);
    Scene_transition = __decorate([
        ccclass
    ], Scene_transition);
    return Scene_transition;
}(cc.Component));
exports.default = Scene_transition;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXFBob3RvX2dhbGxlcnlcXFBob3RvX2dhbGxlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBOEMsb0NBQVk7SUFBMUQ7UUFBQSxxRUFzQ0M7UUFwQ0Msb0JBQWMsR0FBYyxFQUFFLENBQUM7UUFDL0IsZ0JBQVUsR0FBVyxHQUFHLENBQUM7UUFRekIsb0JBQWMsR0FBWSxLQUFLLENBQUM7O0lBMkJsQyxDQUFDO0lBakNDLGlDQUFNLEdBQU47UUFBQSxpQkFJQztRQUhDLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSSxFQUFFLEdBQUc7WUFDcEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7UUFDakQsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0lBR0Qsc0NBQVcsR0FBWDtRQUFBLGlCQXlCQztRQXhCQyxJQUFJLElBQUksQ0FBQyxjQUFjO1lBQUUsT0FBTztRQUNoQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUUzQixJQUFJLElBQUksR0FBRyxHQUFHLENBQUM7UUFDZixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzRCxRQUFRLENBQUMsV0FBVyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdkQsUUFBUSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDckMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVoRCxJQUFJLEtBQUssR0FBRyxXQUFXLENBQUM7WUFDdEIsSUFBSSxJQUFJLElBQUksQ0FBQztZQUNiLFFBQVEsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3JDLElBQUksSUFBSSxHQUFHLEdBQUcsR0FBRyxLQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNoQyxLQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUM1QixLQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDL0IsS0FBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsVUFBQyxJQUFJLEVBQUUsR0FBRztvQkFDcEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7Z0JBQ2pELENBQUMsQ0FBQyxDQUFBO2dCQUNGLFFBQVEsQ0FBQyxNQUFNLENBQUMsZUFBZSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ2pELEtBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO2dCQUM1QixLQUFLLElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQy9CO1FBQ0gsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQW5DRDtRQURDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQzs7NERBQ1c7SUFGWixnQkFBZ0I7UUFEcEMsT0FBTztPQUNhLGdCQUFnQixDQXNDcEM7SUFBRCx1QkFBQztDQXRDRCxBQXNDQyxDQXRDNkMsRUFBRSxDQUFDLFNBQVMsR0FzQ3pEO2tCQXRDb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjZW5lX3RyYW5zaXRpb24gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShbY2MuTm9kZV0pXHJcbiAgc3dpdGNoTm9kZUxpc3Q6IGNjLk5vZGVbXSA9IFtdO1xyXG4gIGZhZGVSYWRpdXM6IG51bWJlciA9IDAuMTtcclxuXHJcbiAgb25Mb2FkKCkge1xyXG4gICAgdGhpcy5zd2l0Y2hOb2RlTGlzdC5mb3JFYWNoKChub2RlLCBpZHgpID0+IHtcclxuICAgICAgbm9kZS56SW5kZXggPSB0aGlzLnN3aXRjaE5vZGVMaXN0Lmxlbmd0aCAtIGlkeDtcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBpc1RyYW5zZm9ybWluZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIGJnVHJhbXNmb3JtKCkge1xyXG4gICAgaWYgKHRoaXMuaXNUcmFuc2Zvcm1pbmcpIHJldHVybjtcclxuICAgIHRoaXMuaXNUcmFuc2Zvcm1pbmcgPSB0cnVlO1xyXG5cclxuICAgIGxldCB0aW1lID0gMC4wO1xyXG4gICAgbGV0IG5vZGUgPSB0aGlzLnN3aXRjaE5vZGVMaXN0WzBdO1xyXG4gICAgbGV0IG1hdGVyaWFsID0gbm9kZS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5nZXRNYXRlcmlhbCgwKTtcclxuICAgIG1hdGVyaWFsLnNldFByb3BlcnR5KCd1X2ZhZGVfcmFkaXVzJywgdGhpcy5mYWRlUmFkaXVzKTtcclxuICAgIG1hdGVyaWFsLnNldFByb3BlcnR5KCd1X3RpbWUnLCB0aW1lKTtcclxuICAgIG1hdGVyaWFsLmRlZmluZSgnVVNFX1RSQU1TRk9STScsIHRydWUsIDAsIHRydWUpO1xyXG5cclxuICAgIGxldCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgdGltZSArPSAwLjAzO1xyXG4gICAgICBtYXRlcmlhbC5zZXRQcm9wZXJ0eSgndV90aW1lJywgdGltZSk7XHJcbiAgICAgIGlmICh0aW1lID4gMS4wICsgdGhpcy5mYWRlUmFkaXVzKSB7XHJcbiAgICAgICAgdGhpcy5zd2l0Y2hOb2RlTGlzdC5zaGlmdCgpO1xyXG4gICAgICAgIHRoaXMuc3dpdGNoTm9kZUxpc3QucHVzaChub2RlKTtcclxuICAgICAgICB0aGlzLnN3aXRjaE5vZGVMaXN0LmZvckVhY2goKG5vZGUsIGlkeCkgPT4ge1xyXG4gICAgICAgICAgbm9kZS56SW5kZXggPSB0aGlzLnN3aXRjaE5vZGVMaXN0Lmxlbmd0aCAtIGlkeDtcclxuICAgICAgICB9KVxyXG4gICAgICAgIG1hdGVyaWFsLmRlZmluZSgnVVNFX1RSQU1TRk9STScsIGZhbHNlLCAwLCB0cnVlKTtcclxuICAgICAgICB0aGlzLmlzVHJhbnNmb3JtaW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGltZXIgJiYgY2xlYXJJbnRlcnZhbCh0aW1lcik7XHJcbiAgICAgIH1cclxuICAgIH0sIDMwKTtcclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Scratch_ticket/Scratch_ticket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd30e1f08DZOMI5wufTMlpN5', 'Scratch_ticket');
// Scene/Scratch_ticket/Scratch_ticket.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CALC_RECT_WIDTH = 40;
var CLEAR_LINE_WIDTH = 40;
var Scratch_ticket = /** @class */ (function (_super) {
    __extends(Scratch_ticket, _super);
    function Scratch_ticket() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maskNode = null;
        _this.ticketNode = null;
        _this.progerss = null;
        _this.calcDebugger = false; // 辅助开关，开启则会绘制划开涂层所属的小格子
        _this.tempDrawPoints = [];
        _this.polygonPointsList = [];
        return _this;
    }
    Scratch_ticket.prototype.onLoad = function () {
        this.reset();
        this.ticketNode.on(cc.Node.EventType.TOUCH_START, this.touchStartEvent, this);
        this.ticketNode.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
        this.ticketNode.on(cc.Node.EventType.TOUCH_END, this.touchEndEvent, this);
        this.ticketNode.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEndEvent, this);
    };
    Scratch_ticket.prototype.beforeDestroy = function () {
        this.ticketNode.off(cc.Node.EventType.TOUCH_START, this.touchStartEvent, this);
        this.ticketNode.off(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
        this.ticketNode.off(cc.Node.EventType.TOUCH_END, this.touchEndEvent, this);
        this.ticketNode.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEndEvent, this);
    };
    Scratch_ticket.prototype.touchStartEvent = function (event) {
        var point = this.ticketNode.convertToNodeSpaceAR(event.getLocation());
        this.clearMask(point);
    };
    Scratch_ticket.prototype.touchMoveEvent = function (event) {
        var point = this.ticketNode.convertToNodeSpaceAR(event.getLocation());
        this.clearMask(point);
    };
    Scratch_ticket.prototype.touchEndEvent = function () {
        this.tempDrawPoints = [];
        this.calcProgress();
    };
    Scratch_ticket.prototype.calcProgress = function () {
        var _this = this;
        var hitItemCount = 0;
        var ctx = this.ticketNode.getComponent(cc.Graphics);
        this.polygonPointsList.forEach(function (item) {
            if (!item.isHit)
                return;
            hitItemCount += 1;
            if (!_this.calcDebugger)
                return;
            ctx.rect(item.rect.x, item.rect.y, item.rect.width, item.rect.height);
            ctx.fillColor = cc.color(216, 18, 18, 255);
            ctx.fill();
        });
        this.progerss.string = "\u5DF2\u7ECF\u522E\u5F00\u4E86 " + Math.ceil((hitItemCount / this.polygonPointsList.length) * 100) + "%";
    };
    Scratch_ticket.prototype.clearMask = function (pos) {
        var mask = this.maskNode.getComponent(cc.Mask);
        var stencil = mask._graphics;
        var len = this.tempDrawPoints.length;
        this.tempDrawPoints.push(pos);
        if (len <= 1) {
            // 只有一个点，用圆来清除涂层
            stencil.circle(pos.x, pos.y, CLEAR_LINE_WIDTH / 2);
            stencil.fill();
            // 记录点所在的格子
            this.polygonPointsList.forEach(function (item) {
                if (item.isHit)
                    return;
                var xFlag = pos.x > item.rect.x && pos.x < item.rect.x + item.rect.width;
                var yFlag = pos.y > item.rect.y && pos.y < item.rect.y + item.rect.height;
                if (xFlag && yFlag)
                    item.isHit = true;
            });
        }
        else {
            // 存在多个点，用线段来清除涂层
            var prevPos_1 = this.tempDrawPoints[len - 2];
            var curPos_1 = this.tempDrawPoints[len - 1];
            stencil.moveTo(prevPos_1.x, prevPos_1.y);
            stencil.lineTo(curPos_1.x, curPos_1.y);
            stencil.lineWidth = CLEAR_LINE_WIDTH;
            stencil.lineCap = cc.Graphics.LineCap.ROUND;
            stencil.lineJoin = cc.Graphics.LineJoin.ROUND;
            stencil.strokeColor = cc.color(255, 255, 255, 255);
            stencil.stroke();
            // 记录线段经过的格子
            this.polygonPointsList.forEach(function (item) {
                item.isHit = item.isHit || cc.Intersection.lineRect(prevPos_1, curPos_1, item.rect);
            });
        }
    };
    Scratch_ticket.prototype.reset = function () {
        var mask = this.maskNode.getComponent(cc.Mask);
        mask._graphics.clear();
        this.tempDrawPoints = [];
        this.polygonPointsList = [];
        this.progerss.string = '已经刮开了 0%';
        this.ticketNode.getComponent(cc.Graphics).clear();
        // 生成小格子，用来辅助统计涂层的刮开比例
        for (var x = 0; x < this.ticketNode.width; x += CALC_RECT_WIDTH) {
            for (var y = 0; y < this.ticketNode.height; y += CALC_RECT_WIDTH) {
                this.polygonPointsList.push({
                    rect: cc.rect(x - this.ticketNode.width / 2, y - this.ticketNode.height / 2, CALC_RECT_WIDTH, CALC_RECT_WIDTH),
                    isHit: false
                });
            }
        }
    };
    var _b, _c, _d;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Scratch_ticket.prototype, "maskNode", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Node) === "function" ? _c : Object)
    ], Scratch_ticket.prototype, "ticketNode", void 0);
    __decorate([
        property(cc.Label),
        __metadata("design:type", typeof (_d = typeof cc !== "undefined" && cc.Label) === "function" ? _d : Object)
    ], Scratch_ticket.prototype, "progerss", void 0);
    Scratch_ticket = __decorate([
        ccclass
    ], Scratch_ticket);
    return Scratch_ticket;
}(cc.Component));
exports.default = Scratch_ticket;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Water_spread/Water_spread.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd485aKJH4VK9ZttqIWBQAMc', 'Water_spread');
// Scene/Water_spread/Water_spread.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Water_spread = /** @class */ (function (_super) {
    __extends(Water_spread, _super);
    function Water_spread() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bg = null;
        _this.material = null;
        _this.waveOffset = 0.0;
        return _this;
    }
    Water_spread.prototype.onLoad = function () {
        this.material = this.bg.getComponent(cc.Sprite).getMaterial(0);
        this.bg.on(cc.Node.EventType.TOUCH_END, this.touchStartEvent, this);
    };
    Water_spread.prototype.touchStartEvent = function (evt) {
        var pos = evt.getLocation();
        this.material.setProperty('center', [pos.x / this.bg.width, (this.bg.height - pos.y) / this.bg.height]);
        this.waveOffset = 0.0;
    };
    Water_spread.prototype.update = function (dt) {
        if (this.waveOffset > 2.0)
            return;
        this.waveOffset += dt;
        this.material.setProperty('wave_offset', this.waveOffset);
    };
    var _b;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Water_spread.prototype, "bg", void 0);
    Water_spread = __decorate([
        ccclass
    ], Water_spread);
    return Water_spread;
}(cc.Component));
exports.default = Water_spread;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXFdhdGVyX3NwcmVhZFxcV2F0ZXJfc3ByZWFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQTBDLGdDQUFZO0lBQXREO1FBQUEscUVBdUJDO1FBckJDLFFBQUUsR0FBWSxJQUFJLENBQUM7UUFDbkIsY0FBUSxHQUFnQixJQUFJLENBQUM7UUFPN0IsZ0JBQVUsR0FBVyxHQUFHLENBQUM7O0lBYTNCLENBQUM7SUFsQkMsNkJBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBR0Qsc0NBQWUsR0FBZixVQUFnQixHQUF3QjtRQUN0QyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDekcsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7SUFDeEIsQ0FBQztJQUVELDZCQUFNLEdBQU4sVUFBTyxFQUFFO1FBQ1AsSUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUc7WUFBRSxPQUFPO1FBRWxDLElBQUksQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDNUQsQ0FBQzs7SUFwQkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDZCxFQUFFLG9CQUFGLEVBQUUsQ0FBQyxJQUFJOzRDQUFRO0lBRkEsWUFBWTtRQURoQyxPQUFPO09BQ2EsWUFBWSxDQXVCaEM7SUFBRCxtQkFBQztDQXZCRCxBQXVCQyxDQXZCeUMsRUFBRSxDQUFDLFNBQVMsR0F1QnJEO2tCQXZCb0IsWUFBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXYXRlcl9zcHJlYWQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gIGJnOiBjYy5Ob2RlID0gbnVsbDtcclxuICBtYXRlcmlhbDogY2MuTWF0ZXJpYWwgPSBudWxsO1xyXG5cclxuICBvbkxvYWQoKSB7XHJcbiAgICB0aGlzLm1hdGVyaWFsID0gdGhpcy5iZy5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5nZXRNYXRlcmlhbCgwKTtcclxuICAgIHRoaXMuYmcub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCB0aGlzLnRvdWNoU3RhcnRFdmVudCwgdGhpcyk7XHJcbiAgfVxyXG5cclxuICB3YXZlT2Zmc2V0OiBudW1iZXIgPSAwLjA7XHJcbiAgdG91Y2hTdGFydEV2ZW50KGV2dDogY2MuRXZlbnQuRXZlbnRUb3VjaCkge1xyXG4gICAgbGV0IHBvcyA9IGV2dC5nZXRMb2NhdGlvbigpO1xyXG4gICAgdGhpcy5tYXRlcmlhbC5zZXRQcm9wZXJ0eSgnY2VudGVyJywgWyBwb3MueCAvIHRoaXMuYmcud2lkdGgsICh0aGlzLmJnLmhlaWdodCAtIHBvcy55KSAvIHRoaXMuYmcuaGVpZ2h0XSk7XHJcbiAgICB0aGlzLndhdmVPZmZzZXQgPSAwLjA7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZHQpIHtcclxuICAgIGlmICh0aGlzLndhdmVPZmZzZXQgPiAyLjApIHJldHVybjtcclxuXHJcbiAgICB0aGlzLndhdmVPZmZzZXQgKz0gZHQ7XHJcbiAgICB0aGlzLm1hdGVyaWFsLnNldFByb3BlcnR5KCd3YXZlX29mZnNldCcsIHRoaXMud2F2ZU9mZnNldCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Screen_vibrating/Screen_vibrating.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a8a4fhJRiRB8YVcfMOtC1jT', 'Screen_vibrating');
// Scene/Screen_vibrating/Screen_vibrating.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Screen_vibrating = /** @class */ (function (_super) {
    __extends(Screen_vibrating, _super);
    function Screen_vibrating() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bgNode = null;
        _this.hitFeedback = null;
        return _this;
    }
    Screen_vibrating.prototype.onLoad = function () {
        this.shakeEffect(this.bgNode, 1);
    };
    Screen_vibrating.prototype.hit = function (evn) {
        var _this = this;
        this.shakeEffect(evn.currentTarget, 0.6);
        this.hitFeedback.setPosition(this.node.convertToNodeSpaceAR(evn.getLocation()));
        this.hitFeedback.active = true;
        var anim = this.hitFeedback.getComponent(cc.Animation);
        anim.on('finished', function () {
            _this.hitFeedback.active = false;
            anim.setCurrentTime(0);
            anim.stop();
        });
        anim.play();
    };
    Screen_vibrating.prototype.shakeEffect = function (node, duration) {
        node.stopAllActions();
        node.runAction(cc
            .sequence(cc.moveTo(0.02, cc.v2(5, 7)), cc.moveTo(0.02, cc.v2(-6, 7)), cc.moveTo(0.02, cc.v2(-13, 3)), cc.moveTo(0.02, cc.v2(3, -6)), cc.moveTo(0.02, cc.v2(-5, 5)), cc.moveTo(0.02, cc.v2(2, -8)), cc.moveTo(0.02, cc.v2(-8, -10)), cc.moveTo(0.02, cc.v2(3, 10)), cc.moveTo(0.02, cc.v2(0, 0)))
            .repeatForever());
        this.scheduleOnce(function () {
            node.stopAllActions();
            node.setPosition(0, 0);
        }, duration);
    };
    var _b, _c;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Screen_vibrating.prototype, "bgNode", void 0);
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Node) === "function" ? _c : Object)
    ], Screen_vibrating.prototype, "hitFeedback", void 0);
    Screen_vibrating = __decorate([
        ccclass
    ], Screen_vibrating);
    return Screen_vibrating;
}(cc.Component));
exports.default = Screen_vibrating;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXFNjcmVlbl92aWJyYXRpbmdcXFNjcmVlbl92aWJyYXRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBOEMsb0NBQVk7SUFBMUQ7UUFBQSxxRUFnREM7UUE5Q0MsWUFBTSxHQUFZLElBQUksQ0FBQztRQUV2QixpQkFBVyxHQUFZLElBQUksQ0FBQzs7SUE0QzlCLENBQUM7SUExQ0MsaUNBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsOEJBQUcsR0FBSCxVQUFJLEdBQXdCO1FBQTVCLGlCQWFDO1FBWkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBRXpDLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNoRixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFFL0IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFO1lBQ2xCLEtBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNoQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNkLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUVELHNDQUFXLEdBQVgsVUFBWSxJQUFhLEVBQUUsUUFBUTtRQUNqQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLFNBQVMsQ0FDWixFQUFFO2FBQ0MsUUFBUSxDQUNQLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQzVCLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFDN0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUM5QixFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQzdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFDN0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUM3QixFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFDL0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFDN0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FDN0I7YUFDQSxhQUFhLEVBQUUsQ0FDbkIsQ0FBQztRQUVGLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDaEIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNmLENBQUM7O0lBN0NEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7c0RBQ1YsRUFBRSxvQkFBRixFQUFFLENBQUMsSUFBSTtvREFBUTtJQUV2QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUNMLEVBQUUsb0JBQUYsRUFBRSxDQUFDLElBQUk7eURBQVE7SUFKVCxnQkFBZ0I7UUFEcEMsT0FBTztPQUNhLGdCQUFnQixDQWdEcEM7SUFBRCx1QkFBQztDQWhERCxBQWdEQyxDQWhENkMsRUFBRSxDQUFDLFNBQVMsR0FnRHpEO2tCQWhEb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjcmVlbl92aWJyYXRpbmcgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gIGJnTm9kZTogY2MuTm9kZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgaGl0RmVlZGJhY2s6IGNjLk5vZGUgPSBudWxsO1xyXG5cclxuICBvbkxvYWQoKSB7XHJcbiAgICB0aGlzLnNoYWtlRWZmZWN0KHRoaXMuYmdOb2RlLCAxKTtcclxuICB9XHJcblxyXG4gIGhpdChldm46IGNjLkV2ZW50LkV2ZW50VG91Y2gpIHtcclxuICAgIHRoaXMuc2hha2VFZmZlY3QoZXZuLmN1cnJlbnRUYXJnZXQsIDAuNik7XHJcblxyXG4gICAgdGhpcy5oaXRGZWVkYmFjay5zZXRQb3NpdGlvbih0aGlzLm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIoZXZuLmdldExvY2F0aW9uKCkpKTtcclxuICAgIHRoaXMuaGl0RmVlZGJhY2suYWN0aXZlID0gdHJ1ZTtcclxuXHJcbiAgICBsZXQgYW5pbSA9IHRoaXMuaGl0RmVlZGJhY2suZ2V0Q29tcG9uZW50KGNjLkFuaW1hdGlvbik7XHJcbiAgICBhbmltLm9uKCdmaW5pc2hlZCcsICgpID0+IHtcclxuICAgICAgdGhpcy5oaXRGZWVkYmFjay5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgYW5pbS5zZXRDdXJyZW50VGltZSgwKTtcclxuICAgICAgYW5pbS5zdG9wKCk7XHJcbiAgICB9KTtcclxuICAgIGFuaW0ucGxheSgpO1xyXG4gIH1cclxuXHJcbiAgc2hha2VFZmZlY3Qobm9kZTogY2MuTm9kZSwgZHVyYXRpb24pIHtcclxuICAgIG5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgIG5vZGUucnVuQWN0aW9uKFxyXG4gICAgICBjY1xyXG4gICAgICAgIC5zZXF1ZW5jZShcclxuICAgICAgICAgIGNjLm1vdmVUbygwLjAyLCBjYy52Mig1LCA3KSksXHJcbiAgICAgICAgICBjYy5tb3ZlVG8oMC4wMiwgY2MudjIoLTYsIDcpKSxcclxuICAgICAgICAgIGNjLm1vdmVUbygwLjAyLCBjYy52MigtMTMsIDMpKSxcclxuICAgICAgICAgIGNjLm1vdmVUbygwLjAyLCBjYy52MigzLCAtNikpLFxyXG4gICAgICAgICAgY2MubW92ZVRvKDAuMDIsIGNjLnYyKC01LCA1KSksXHJcbiAgICAgICAgICBjYy5tb3ZlVG8oMC4wMiwgY2MudjIoMiwgLTgpKSxcclxuICAgICAgICAgIGNjLm1vdmVUbygwLjAyLCBjYy52MigtOCwgLTEwKSksXHJcbiAgICAgICAgICBjYy5tb3ZlVG8oMC4wMiwgY2MudjIoMywgMTApKSxcclxuICAgICAgICAgIGNjLm1vdmVUbygwLjAyLCBjYy52MigwLCAwKSlcclxuICAgICAgICApXHJcbiAgICAgICAgLnJlcGVhdEZvcmV2ZXIoKVxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLnNjaGVkdWxlT25jZSgoKSA9PiB7XHJcbiAgICAgIG5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgbm9kZS5zZXRQb3NpdGlvbigwLCAwKTtcclxuICAgIH0sIGR1cmF0aW9uKTtcclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Change_clothes/Change_clothes.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2bc1f5JodtIEZFhwbUud1V0', 'Change_clothes');
// Scene/Change_clothes/Change_clothes.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Change_clothes = /** @class */ (function (_super) {
    __extends(Change_clothes, _super);
    function Change_clothes() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.npcAtlas = null;
        _this.hair = null;
        _this.clothes = null;
        _this.sleeve = null;
        _this.shoe = null;
        return _this;
    }
    Change_clothes.prototype.changeClothes = function (evn, type) {
        var hairType = this.hair.spriteFrame.name == 'hair_1';
        var clothesType = this.clothes.spriteFrame.name == 'clothes_1';
        var shoeType = this.shoe.spriteFrame.name == 'shoe_1';
        switch (type) {
            case 'hair':
                this.hair.spriteFrame = this.npcAtlas.getSpriteFrame(hairType ? 'hair_2' : 'hair_1');
                break;
            case 'clothes':
                this.clothes.spriteFrame = this.npcAtlas.getSpriteFrame(clothesType ? 'clothes_2' : 'clothes_1');
                this.sleeve.spriteFrame = this.npcAtlas.getSpriteFrame(clothesType ? 'sleeve_2' : 'sleeve_1');
                break;
            case 'shoe':
                this.shoe.spriteFrame = this.npcAtlas.getSpriteFrame(shoeType ? 'shoe_2' : 'shoe_1');
                break;
        }
    };
    var _b, _c, _d, _e, _f;
    __decorate([
        property(cc.SpriteAtlas),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.SpriteAtlas) === "function" ? _b : Object)
    ], Change_clothes.prototype, "npcAtlas", void 0);
    __decorate([
        property(cc.Sprite),
        __metadata("design:type", typeof (_c = typeof cc !== "undefined" && cc.Sprite) === "function" ? _c : Object)
    ], Change_clothes.prototype, "hair", void 0);
    __decorate([
        property(cc.Sprite),
        __metadata("design:type", typeof (_d = typeof cc !== "undefined" && cc.Sprite) === "function" ? _d : Object)
    ], Change_clothes.prototype, "clothes", void 0);
    __decorate([
        property(cc.Sprite),
        __metadata("design:type", typeof (_e = typeof cc !== "undefined" && cc.Sprite) === "function" ? _e : Object)
    ], Change_clothes.prototype, "sleeve", void 0);
    __decorate([
        property(cc.Sprite),
        __metadata("design:type", typeof (_f = typeof cc !== "undefined" && cc.Sprite) === "function" ? _f : Object)
    ], Change_clothes.prototype, "shoe", void 0);
    Change_clothes = __decorate([
        ccclass
    ], Change_clothes);
    return Change_clothes;
}(cc.Component));
exports.default = Change_clothes;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXENoYW5nZV9jbG90aGVzXFxDaGFuZ2VfY2xvdGhlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUE0QyxrQ0FBWTtJQUF4RDtRQUFBLHFFQStCQztRQTdCQyxjQUFRLEdBQW1CLElBQUksQ0FBQztRQUdoQyxVQUFJLEdBQWMsSUFBSSxDQUFDO1FBRXZCLGFBQU8sR0FBYyxJQUFJLENBQUM7UUFFMUIsWUFBTSxHQUFjLElBQUksQ0FBQztRQUV6QixVQUFJLEdBQWMsSUFBSSxDQUFDOztJQW9CekIsQ0FBQztJQWxCQyxzQ0FBYSxHQUFiLFVBQWMsR0FBRyxFQUFFLElBQVk7UUFDN0IsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQztRQUN0RCxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksV0FBVyxDQUFDO1FBQy9ELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksSUFBSSxRQUFRLENBQUM7UUFFdEQsUUFBUSxJQUFJLEVBQUU7WUFDWixLQUFLLE1BQU07Z0JBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUNyRixNQUFNO1lBQ1IsS0FBSyxTQUFTO2dCQUNaLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDakcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUM5RixNQUFNO1lBQ1IsS0FBSyxNQUFNO2dCQUNULElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDckYsTUFBTTtTQUNUO0lBQ0gsQ0FBQzs7SUE1QkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQztzREFDZixFQUFFLG9CQUFGLEVBQUUsQ0FBQyxXQUFXO29EQUFRO0lBR2hDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7c0RBQ2QsRUFBRSxvQkFBRixFQUFFLENBQUMsTUFBTTtnREFBUTtJQUV2QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3NEQUNYLEVBQUUsb0JBQUYsRUFBRSxDQUFDLE1BQU07bURBQVE7SUFFMUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztzREFDWixFQUFFLG9CQUFGLEVBQUUsQ0FBQyxNQUFNO2tEQUFRO0lBRXpCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7c0RBQ2QsRUFBRSxvQkFBRixFQUFFLENBQUMsTUFBTTtnREFBUTtJQVhKLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0ErQmxDO0lBQUQscUJBQUM7Q0EvQkQsQUErQkMsQ0EvQjJDLEVBQUUsQ0FBQyxTQUFTLEdBK0J2RDtrQkEvQm9CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhbmdlX2Nsb3RoZXMgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShjYy5TcHJpdGVBdGxhcylcclxuICBucGNBdGxhczogY2MuU3ByaXRlQXRsYXMgPSBudWxsO1xyXG5cclxuICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gIGhhaXI6IGNjLlNwcml0ZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLlNwcml0ZSlcclxuICBjbG90aGVzOiBjYy5TcHJpdGUgPSBudWxsO1xyXG4gIEBwcm9wZXJ0eShjYy5TcHJpdGUpXHJcbiAgc2xlZXZlOiBjYy5TcHJpdGUgPSBudWxsO1xyXG4gIEBwcm9wZXJ0eShjYy5TcHJpdGUpXHJcbiAgc2hvZTogY2MuU3ByaXRlID0gbnVsbDtcclxuXHJcbiAgY2hhbmdlQ2xvdGhlcyhldm4sIHR5cGU6IHN0cmluZykge1xyXG4gICAgbGV0IGhhaXJUeXBlID0gdGhpcy5oYWlyLnNwcml0ZUZyYW1lLm5hbWUgPT0gJ2hhaXJfMSc7XHJcbiAgICBsZXQgY2xvdGhlc1R5cGUgPSB0aGlzLmNsb3RoZXMuc3ByaXRlRnJhbWUubmFtZSA9PSAnY2xvdGhlc18xJztcclxuICAgIGxldCBzaG9lVHlwZSA9IHRoaXMuc2hvZS5zcHJpdGVGcmFtZS5uYW1lID09ICdzaG9lXzEnO1xyXG5cclxuICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICBjYXNlICdoYWlyJzpcclxuICAgICAgICB0aGlzLmhhaXIuc3ByaXRlRnJhbWUgPSB0aGlzLm5wY0F0bGFzLmdldFNwcml0ZUZyYW1lKGhhaXJUeXBlID8gJ2hhaXJfMicgOiAnaGFpcl8xJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2Nsb3RoZXMnOlxyXG4gICAgICAgIHRoaXMuY2xvdGhlcy5zcHJpdGVGcmFtZSA9IHRoaXMubnBjQXRsYXMuZ2V0U3ByaXRlRnJhbWUoY2xvdGhlc1R5cGUgPyAnY2xvdGhlc18yJyA6ICdjbG90aGVzXzEnKTtcclxuICAgICAgICB0aGlzLnNsZWV2ZS5zcHJpdGVGcmFtZSA9IHRoaXMubnBjQXRsYXMuZ2V0U3ByaXRlRnJhbWUoY2xvdGhlc1R5cGUgPyAnc2xlZXZlXzInIDogJ3NsZWV2ZV8xJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3Nob2UnOlxyXG4gICAgICAgIHRoaXMuc2hvZS5zcHJpdGVGcmFtZSA9IHRoaXMubnBjQXRsYXMuZ2V0U3ByaXRlRnJhbWUoc2hvZVR5cGUgPyAnc2hvZV8yJyA6ICdzaG9lXzEnKTtcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Circle_avatar/Circle_avatar.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6b33a01MvpCe7oAqTa8OiHm', 'Circle_avatar');
// Scene/Circle_avatar/Circle_avatar.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CircleAvatar = /** @class */ (function (_super) {
    __extends(CircleAvatar, _super);
    function CircleAvatar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.rectAvatar = null;
        return _this;
    }
    CircleAvatar.prototype.start = function () {
        this.rectAvatar.getMaterial(0).setProperty('wh_ratio', this.rectAvatar.node.width / this.rectAvatar.node.height);
    };
    var _b;
    __decorate([
        property(cc.Sprite),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Sprite) === "function" ? _b : Object)
    ], CircleAvatar.prototype, "rectAvatar", void 0);
    CircleAvatar = __decorate([
        ccclass
    ], CircleAvatar);
    return CircleAvatar;
}(cc.Component));
exports.default = CircleAvatar;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXENpcmNsZV9hdmF0YXJcXENpcmNsZV9hdmF0YXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBMEMsZ0NBQVk7SUFBdEQ7UUFBQSxxRUFPQztRQUxDLGdCQUFVLEdBQWMsSUFBSSxDQUFDOztJQUsvQixDQUFDO0lBSEMsNEJBQUssR0FBTDtRQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25ILENBQUM7O0lBSkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztzREFDUixFQUFFLG9CQUFGLEVBQUUsQ0FBQyxNQUFNO29EQUFRO0lBRlYsWUFBWTtRQURoQyxPQUFPO09BQ2EsWUFBWSxDQU9oQztJQUFELG1CQUFDO0NBUEQsQUFPQyxDQVB5QyxFQUFFLENBQUMsU0FBUyxHQU9yRDtrQkFQb0IsWUFBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaXJjbGVBdmF0YXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gIEBwcm9wZXJ0eShjYy5TcHJpdGUpXHJcbiAgcmVjdEF2YXRhcjogY2MuU3ByaXRlID0gbnVsbDtcclxuXHJcbiAgc3RhcnQoKSB7XHJcbiAgICB0aGlzLnJlY3RBdmF0YXIuZ2V0TWF0ZXJpYWwoMCkuc2V0UHJvcGVydHkoJ3doX3JhdGlvJywgdGhpcy5yZWN0QXZhdGFyLm5vZGUud2lkdGggLyB0aGlzLnJlY3RBdmF0YXIubm9kZS5oZWlnaHQpO1xyXG4gIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Home/BackHomeBtn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f673bb9HWxERKP4rUNhzg42', 'BackHomeBtn');
// Scene/Home/BackHomeBtn.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BackHomeBtn = /** @class */ (function (_super) {
    __extends(BackHomeBtn, _super);
    function BackHomeBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackHomeBtn_1 = BackHomeBtn;
    BackHomeBtn.prototype.onLoad = function () {
        cc.game.addPersistRootNode(this.node);
        BackHomeBtn_1.instance = this;
        this.toggleActive(false);
    };
    BackHomeBtn.prototype.toggleActive = function (flag) {
        this.node.active = flag;
    };
    BackHomeBtn.prototype.backToHome = function () {
        this.toggleActive(false);
        cc.director.loadScene('Home');
    };
    var BackHomeBtn_1;
    BackHomeBtn.instance = null;
    BackHomeBtn = BackHomeBtn_1 = __decorate([
        ccclass
    ], BackHomeBtn);
    return BackHomeBtn;
}(cc.Component));
exports.default = BackHomeBtn;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXEhvbWVcXEJhY2tIb21lQnRuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQXlDLCtCQUFZO0lBQXJEOztJQWlCQSxDQUFDO29CQWpCb0IsV0FBVztJQUc5Qiw0QkFBTSxHQUFOO1FBQ0UsRUFBRSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsYUFBVyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDNUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsa0NBQVksR0FBWixVQUFhLElBQWE7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQzFCLENBQUM7SUFFRCxnQ0FBVSxHQUFWO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDOztJQWZNLG9CQUFRLEdBQWdCLElBQUksQ0FBQztJQURqQixXQUFXO1FBRC9CLE9BQU87T0FDYSxXQUFXLENBaUIvQjtJQUFELGtCQUFDO0NBakJELEFBaUJDLENBakJ3QyxFQUFFLENBQUMsU0FBUyxHQWlCcEQ7a0JBakJvQixXQUFXIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhY2tIb21lQnRuIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuICBzdGF0aWMgaW5zdGFuY2U6IEJhY2tIb21lQnRuID0gbnVsbDtcclxuXHJcbiAgb25Mb2FkKCkge1xyXG4gICAgY2MuZ2FtZS5hZGRQZXJzaXN0Um9vdE5vZGUodGhpcy5ub2RlKTtcclxuICAgIEJhY2tIb21lQnRuLmluc3RhbmNlID0gdGhpcztcclxuICAgIHRoaXMudG9nZ2xlQWN0aXZlKGZhbHNlKTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZUFjdGl2ZShmbGFnOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmxhZztcclxuICB9XHJcblxyXG4gIGJhY2tUb0hvbWUoKSB7XHJcbiAgICB0aGlzLnRvZ2dsZUFjdGl2ZShmYWxzZSk7XHJcbiAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoJ0hvbWUnKTtcclxuICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scene/Metaball/Metaball.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7d68bZisFBP06BUmEtWSaVY', 'Metaball');
// Scene/Metaball/Metaball.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Metaball = /** @class */ (function (_super) {
    __extends(Metaball, _super);
    function Metaball() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ball = null;
        _this.material = null;
        _this.touchStartPoint = null;
        return _this;
    }
    Metaball.prototype.onLoad = function () {
        this.material = this.ball.getComponent(cc.Sprite).getMaterial(0);
        this.touchStartPoint = cc.v2(this.ball.width / 2, this.ball.height / 2);
        this.ball.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);
    };
    Metaball.prototype.touchMoveEvent = function (evt) {
        this.touchStartPoint = this.touchStartPoint.add(evt.getDelta());
        var x = this.touchStartPoint.x;
        var y = this.ball.height - this.touchStartPoint.y;
        this.material.setProperty('u_point', [x / this.ball.width, y / this.ball.height]);
    };
    var _b;
    __decorate([
        property(cc.Node),
        __metadata("design:type", typeof (_b = typeof cc !== "undefined" && cc.Node) === "function" ? _b : Object)
    ], Metaball.prototype, "ball", void 0);
    Metaball = __decorate([
        ccclass
    ], Metaball);
    return Metaball;
}(cc.Component));
exports.default = Metaball;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NlbmVcXE1ldGFiYWxsXFxNZXRhYmFsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUFzQyw0QkFBWTtJQUFsRDtRQUFBLHFFQWtCQztRQWhCQyxVQUFJLEdBQVksSUFBSSxDQUFDO1FBQ3JCLGNBQVEsR0FBZ0IsSUFBSSxDQUFDO1FBUTdCLHFCQUFlLEdBQVcsSUFBSSxDQUFDOztJQU9qQyxDQUFDO0lBYkMseUJBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFHRCxpQ0FBYyxHQUFkLFVBQWUsR0FBd0I7UUFDckMsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUNoRSxJQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztRQUNqQyxJQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsQ0FBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNyRixDQUFDOztJQWZEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7c0RBQ1osRUFBRSxvQkFBRixFQUFFLENBQUMsSUFBSTswQ0FBUTtJQUZGLFFBQVE7UUFENUIsT0FBTztPQUNhLFFBQVEsQ0FrQjVCO0lBQUQsZUFBQztDQWxCRCxBQWtCQyxDQWxCcUMsRUFBRSxDQUFDLFNBQVMsR0FrQmpEO2tCQWxCb0IsUUFBUSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXRhYmFsbCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgYmFsbDogY2MuTm9kZSA9IG51bGw7XHJcbiAgbWF0ZXJpYWw6IGNjLk1hdGVyaWFsID0gbnVsbDtcclxuXHJcbiAgb25Mb2FkKCkge1xyXG4gICAgdGhpcy5tYXRlcmlhbCA9IHRoaXMuYmFsbC5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5nZXRNYXRlcmlhbCgwKTtcclxuICAgIHRoaXMudG91Y2hTdGFydFBvaW50ID0gY2MudjIodGhpcy5iYWxsLndpZHRoIC8gMix0aGlzLmJhbGwuaGVpZ2h0LzIpO1xyXG4gICAgdGhpcy5iYWxsLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX01PVkUsIHRoaXMudG91Y2hNb3ZlRXZlbnQsIHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgdG91Y2hTdGFydFBvaW50OiBjYy5WZWMyPSBudWxsO1xyXG4gIHRvdWNoTW92ZUV2ZW50KGV2dDogY2MuRXZlbnQuRXZlbnRUb3VjaCkge1xyXG4gICAgdGhpcy50b3VjaFN0YXJ0UG9pbnQgPSB0aGlzLnRvdWNoU3RhcnRQb2ludC5hZGQoZXZ0LmdldERlbHRhKCkpO1xyXG4gICAgY29uc3QgeCA9IHRoaXMudG91Y2hTdGFydFBvaW50Lng7XHJcbiAgICBjb25zdCB5ID0gdGhpcy5iYWxsLmhlaWdodCAtIHRoaXMudG91Y2hTdGFydFBvaW50Lnk7XHJcbiAgICB0aGlzLm1hdGVyaWFsLnNldFByb3BlcnR5KCd1X3BvaW50JywgWyB4IC8gdGhpcy5iYWxsLndpZHRoLCB5IC8gdGhpcy5iYWxsLmhlaWdodF0pO1xyXG4gIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/migration/use_v2.1-2.2.1_cc.Toggle_event.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b3227+q79xHdoOqSx9ALAny', 'use_v2.1-2.2.1_cc.Toggle_event');
// migration/use_v2.1-2.2.1_cc.Toggle_event.js

"use strict";

/*
 * This script is automatically generated by Cocos Creator and is only used for projects compatible with the v2.1.0 ～ 2.2.1 version.
 * You do not need to manually add this script in any other project.
 * If you don't use cc.Toggle in your project, you can delete this script directly.
 * If your project is hosted in VCS such as git, submit this script together.
 *
 * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 ~ 2.2.1 版本的工程，
 * 你无需在任何其它项目中手动添加此脚本。
 * 如果你的项目中没用到 Toggle，可直接删除该脚本。
 * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。
 */
if (cc.Toggle) {
  // Whether to trigger 'toggle' and 'checkEvents' events when modifying 'toggle.isChecked' in the code
  // 在代码中修改 'toggle.isChecked' 时是否触发 'toggle' 与 'checkEvents' 事件
  cc.Toggle._triggerEventInScript_isChecked = true;
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbWlncmF0aW9uXFx1c2VfdjIuMS0yLjIuMV9jYy5Ub2dnbGVfZXZlbnQuanMiXSwibmFtZXMiOlsiY2MiLCJUb2dnbGUiLCJfdHJpZ2dlckV2ZW50SW5TY3JpcHRfaXNDaGVja2VkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7OztBQVlBLElBQUlBLEVBQUUsQ0FBQ0MsTUFBUCxFQUFlO0FBQ1g7QUFDQTtBQUNBRCxFQUFBQSxFQUFFLENBQUNDLE1BQUgsQ0FBVUMsK0JBQVYsR0FBNEMsSUFBNUM7QUFDSCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogVGhpcyBzY3JpcHQgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgQ29jb3MgQ3JlYXRvciBhbmQgaXMgb25seSB1c2VkIGZvciBwcm9qZWN0cyBjb21wYXRpYmxlIHdpdGggdGhlIHYyLjEuMCDvvZ4gMi4yLjEgdmVyc2lvbi5cclxuICogWW91IGRvIG5vdCBuZWVkIHRvIG1hbnVhbGx5IGFkZCB0aGlzIHNjcmlwdCBpbiBhbnkgb3RoZXIgcHJvamVjdC5cclxuICogSWYgeW91IGRvbid0IHVzZSBjYy5Ub2dnbGUgaW4geW91ciBwcm9qZWN0LCB5b3UgY2FuIGRlbGV0ZSB0aGlzIHNjcmlwdCBkaXJlY3RseS5cclxuICogSWYgeW91ciBwcm9qZWN0IGlzIGhvc3RlZCBpbiBWQ1Mgc3VjaCBhcyBnaXQsIHN1Ym1pdCB0aGlzIHNjcmlwdCB0b2dldGhlci5cclxuICpcclxuICog5q2k6ISa5pys55SxIENvY29zIENyZWF0b3Ig6Ieq5Yqo55Sf5oiQ77yM5LuF55So5LqO5YW85a65IHYyLjEuMCB+IDIuMi4xIOeJiOacrOeahOW3peeoi++8jFxyXG4gKiDkvaDml6DpnIDlnKjku7vkvZXlhbblroPpobnnm67kuK3miYvliqjmt7vliqDmraTohJrmnKzjgIJcclxuICog5aaC5p6c5L2g55qE6aG555uu5Lit5rKh55So5YiwIFRvZ2dsZe+8jOWPr+ebtOaOpeWIoOmZpOivpeiEmuacrOOAglxyXG4gKiDlpoLmnpzkvaDnmoTpobnnm67mnInmiZjnrqHkuo4gZ2l0IOetieeJiOacrOW6k++8jOivt+WwhuatpOiEmuacrOS4gOW5tuS4iuS8oOOAglxyXG4gKi9cclxuXHJcbmlmIChjYy5Ub2dnbGUpIHtcclxuICAgIC8vIFdoZXRoZXIgdG8gdHJpZ2dlciAndG9nZ2xlJyBhbmQgJ2NoZWNrRXZlbnRzJyBldmVudHMgd2hlbiBtb2RpZnlpbmcgJ3RvZ2dsZS5pc0NoZWNrZWQnIGluIHRoZSBjb2RlXHJcbiAgICAvLyDlnKjku6PnoIHkuK3kv67mlLkgJ3RvZ2dsZS5pc0NoZWNrZWQnIOaXtuaYr+WQpuinpuWPkSAndG9nZ2xlJyDkuI4gJ2NoZWNrRXZlbnRzJyDkuovku7ZcclxuICAgIGNjLlRvZ2dsZS5fdHJpZ2dlckV2ZW50SW5TY3JpcHRfaXNDaGVja2VkID0gdHJ1ZTtcclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/src/dist/tcc/fcc-template.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c87a2kBUCBLkaFR6P7PQOjT', 'fcc-template');
// src/dist/tcc/fcc-template.js

"use strict";

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", {
  value: !0
});
var fcc = globalThis.fcc;

function _defineProperty(t, e, i) {
  return e in t ? Object.defineProperty(t, e, {
    value: i,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = i, t;
}

var OverrideComponent = /*#__PURE__*/function (_cc$Component) {
  _inheritsLoose(OverrideComponent, _cc$Component);

  function OverrideComponent() {
    var _this;

    _this = _cc$Component.call(this) || this, _defineProperty(_assertThisInitialized(_this), "scheduleTag", void 0), _this.scheduleTag = new Array();
    return _this;
  }

  var _proto = OverrideComponent.prototype;

  _proto.getScheduleTag = function getScheduleTag() {
    return this.scheduleTag;
  };

  _proto.getScheduleAmount = function getScheduleAmount() {
    return this.scheduleTag.length;
  };

  _proto.schedule = function schedule(t, e, i, n) {
    _cc$Component.prototype.schedule.call(this, this.checkScheduleRepeat(t, i), e, i, n), this.scheduleTag.push(t);
  };

  _proto.checkScheduleRepeat = function checkScheduleRepeat(t, e) {
    var _this2 = this;

    return 0 < e ? (t.prototype = function () {
      --e < 0 && _this2.unschedule(t), t.apply(_this2);
    }, t.prototype) : t;
  };

  _proto.scheduleOnce = function scheduleOnce(t, e) {
    var _this3 = this;

    t.prototype = function () {
      _this3.unschedule(t.prototype), t.apply(_this3);
    }, this.schedule(t.prototype, 0, 0, e);
  };

  _proto.unschedule = function unschedule(t) {
    _cc$Component.prototype.unschedule.call(this, this.checkScheduleTag(t));

    t = this.checkScheduleCallFunIndex(t);
    -1 < t && this.scheduleTag.splice(t, 1);
  };

  _proto.checkScheduleCallFunIndex = function checkScheduleCallFunIndex(t) {
    var e;
    if (-1 != this.getScheduleTag().indexOf(t)) e = this.scheduleTag.indexOf(t);else {
      if (-1 == this.getScheduleTag().indexOf(t.prototype)) return -1;
      e = this.scheduleTag.indexOf(t.prototype);
    }
    return e;
  };

  _proto.checkScheduleTag = function checkScheduleTag(t) {
    var e = void 0,
        t = this.checkScheduleCallFunIndex(t);
    return e = -1 < t ? this.scheduleTag[t] : e;
  };

  _proto.unscheduleAllCallbacks = function unscheduleAllCallbacks() {
    _cc$Component.prototype.unscheduleAllCallbacks.call(this), this.scheduleTag.length = 0;
  };

  return OverrideComponent;
}(cc.Component);

var AGenericTemplate = /*#__PURE__*/function (_OverrideComponent) {
  _inheritsLoose(AGenericTemplate, _OverrideComponent);

  function AGenericTemplate() {
    return _OverrideComponent.apply(this, arguments) || this;
  }

  var _proto2 = AGenericTemplate.prototype;

  _proto2.languageSetting = function languageSetting() {};

  _proto2.onLoad = function onLoad() {
    this.onCreate();
  };

  _proto2.start = function start() {
    this.languageSetting();
  };

  return AGenericTemplate;
}(OverrideComponent);

var ACenterTemplate = /*#__PURE__*/function (_AGenericTemplate) {
  _inheritsLoose(ACenterTemplate, _AGenericTemplate);

  function ACenterTemplate() {
    return _AGenericTemplate.apply(this, arguments) || this;
  }

  var _proto3 = ACenterTemplate.prototype;

  _proto3.onLoad = function onLoad() {
    this.initClient(), this.configSetting(), this.audioSetting(), this.processCreate(), this.notificationSetting(), _AGenericTemplate.prototype.onLoad.call(this);
  };

  return ACenterTemplate;
}(AGenericTemplate);

function _createForOfIteratorHelper(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray(t, e) : void 0;
  }
}

function _arrayLikeToArray(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var AutoStateChangeNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific) {
  _inheritsLoose(AutoStateChangeNotification, _fcc$ABS$ABaseNotific);

  function AutoStateChangeNotification() {
    var _this4;

    _this4 = _fcc$ABS$ABaseNotific.call(this) || this, _defineProperty(_assertThisInitialized(_this4), "TAG_NAME", void 0), _this4.TAG_NAME = fcc.type.NotificationType.AUTO_CHANGE;
    return _this4;
  }

  var _proto4 = AutoStateChangeNotification.prototype;

  _proto4.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific.prototype.subscribe.call(this, t, e);
  };

  _proto4.notify = function notify(t, e, i) {
    if (0 < this.observer.size) {
      var n,
          r = _createForOfIteratorHelper(this.observer);

      try {
        for (r.s(); !(n = r.n()).done;) {
          var o = n.value;
          o.pushNotification(t, e, i), o.isPermanent || this.unsubscribe(o);
        }
      } catch (t) {
        r.e(t);
      } finally {
        r.f();
      }
    }
  };

  return AutoStateChangeNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$1(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$1(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n2 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n2 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n2++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$1(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$1(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$1(t, e) : void 0;
  }
}

function _arrayLikeToArray$1(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var ScrollFocusStateNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific2) {
  _inheritsLoose(ScrollFocusStateNotification, _fcc$ABS$ABaseNotific2);

  function ScrollFocusStateNotification() {
    var _this5;

    _this5 = _fcc$ABS$ABaseNotific2.call(this) || this, _defineProperty(_assertThisInitialized(_this5), "TAG_NAME", void 0), _this5.TAG_NAME = fcc.type.NotificationType.SCROLL_FOCUS_STATE;
    return _this5;
  }

  var _proto5 = ScrollFocusStateNotification.prototype;

  _proto5.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific2.prototype.subscribe.call(this, t, e);
  };

  _proto5.notify = function notify(t, e) {
    if (0 < this.observer.size) {
      var i,
          n = _createForOfIteratorHelper$1(this.observer);

      try {
        for (n.s(); !(i = n.n()).done;) {
          var r = i.value;
          r.pushNotification(t, e), r.isPermanent || this.unsubscribe(r);
        }
      } catch (t) {
        n.e(t);
      } finally {
        n.f();
      }
    }
  };

  return ScrollFocusStateNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$2(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$2(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n3 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n3 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n3++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$2(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$2(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$2(t, e) : void 0;
  }
}

function _arrayLikeToArray$2(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var SpeedStateChangeNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific3) {
  _inheritsLoose(SpeedStateChangeNotification, _fcc$ABS$ABaseNotific3);

  function SpeedStateChangeNotification() {
    var _this6;

    _this6 = _fcc$ABS$ABaseNotific3.call(this) || this, _defineProperty(_assertThisInitialized(_this6), "TAG_NAME", void 0), _this6.TAG_NAME = fcc.type.NotificationType.SPEED_CHANGE;
    return _this6;
  }

  var _proto6 = SpeedStateChangeNotification.prototype;

  _proto6.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific3.prototype.subscribe.call(this, t, e);
  };

  _proto6.notify = function notify(t) {
    if (0 < this.observer.size) {
      var e,
          i = _createForOfIteratorHelper$2(this.observer);

      try {
        for (i.s(); !(e = i.n()).done;) {
          var n = e.value;
          n.pushNotification(t), n.isPermanent || this.unsubscribe(n);
        }
      } catch (t) {
        i.e(t);
      } finally {
        i.f();
      }
    }
  };

  return SpeedStateChangeNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$3(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$3(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n4 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n4 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n4++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$3(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$3(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$3(t, e) : void 0;
  }
}

function _arrayLikeToArray$3(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var StopNowStateNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific4) {
  _inheritsLoose(StopNowStateNotification, _fcc$ABS$ABaseNotific4);

  function StopNowStateNotification() {
    var _this7;

    _this7 = _fcc$ABS$ABaseNotific4.call(this) || this, _defineProperty(_assertThisInitialized(_this7), "TAG_NAME", void 0), _this7.TAG_NAME = fcc.type.NotificationType.STOP_NOW;
    return _this7;
  }

  var _proto7 = StopNowStateNotification.prototype;

  _proto7.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific4.prototype.subscribe.call(this, t, e);
  };

  _proto7.notify = function notify() {
    if (0 < this.observer.size) {
      var t,
          e = _createForOfIteratorHelper$3(this.observer);

      try {
        for (e.s(); !(t = e.n()).done;) {
          var i = t.value;
          i.pushNotification(), i.isPermanent || this.unsubscribe(i);
        }
      } catch (t) {
        e.e(t);
      } finally {
        e.f();
      }
    }
  };

  return StopNowStateNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$4(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$4(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n5 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n5 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n5++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$4(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$4(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$4(t, e) : void 0;
  }
}

function _arrayLikeToArray$4(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var UserMoneyChangeNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific5) {
  _inheritsLoose(UserMoneyChangeNotification, _fcc$ABS$ABaseNotific5);

  function UserMoneyChangeNotification() {
    var _this8;

    _this8 = _fcc$ABS$ABaseNotific5.call(this) || this, _defineProperty(_assertThisInitialized(_this8), "TAG_NAME", void 0), _this8.TAG_NAME = fcc.type.NotificationType.USER_MONEY_CHANGE;
    return _this8;
  }

  var _proto8 = UserMoneyChangeNotification.prototype;

  _proto8.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific5.prototype.subscribe.call(this, t, e);
  };

  _proto8.notify = function notify(t) {
    if (0 < this.observer.size) {
      var e,
          i = _createForOfIteratorHelper$4(this.observer);

      try {
        for (i.s(); !(e = i.n()).done;) {
          var n = e.value;
          n.pushNotification(t), n.isPermanent || this.unsubscribe(n);
        }
      } catch (t) {
        i.e(t);
      } finally {
        i.f();
      }
    }
  };

  return UserMoneyChangeNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$5(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$5(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n6 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n6 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n6++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$5(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$5(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$5(t, e) : void 0;
  }
}

function _arrayLikeToArray$5(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var UserTotalBetChangeNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific6) {
  _inheritsLoose(UserTotalBetChangeNotification, _fcc$ABS$ABaseNotific6);

  function UserTotalBetChangeNotification() {
    var _this9;

    _this9 = _fcc$ABS$ABaseNotific6.call(this) || this, _defineProperty(_assertThisInitialized(_this9), "TAG_NAME", void 0), _this9.TAG_NAME = fcc.type.NotificationType.USER_BET_CHANGE;
    return _this9;
  }

  var _proto9 = UserTotalBetChangeNotification.prototype;

  _proto9.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific6.prototype.subscribe.call(this, t, e);
  };

  _proto9.notify = function notify(t, e) {
    if (0 < this.observer.size) {
      var i,
          n = _createForOfIteratorHelper$5(this.observer);

      try {
        for (n.s(); !(i = n.n()).done;) {
          var r = i.value;
          r.pushNotification(t, e), r.isPermanent || this.unsubscribe(r);
        }
      } catch (t) {
        n.e(t);
      } finally {
        n.f();
      }
    }
  };

  return UserTotalBetChangeNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$6(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$6(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n7 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n7 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n7++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$6(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$6(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$6(t, e) : void 0;
  }
}

function _arrayLikeToArray$6(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var UserWinPointStateNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific7) {
  _inheritsLoose(UserWinPointStateNotification, _fcc$ABS$ABaseNotific7);

  function UserWinPointStateNotification() {
    var _this10;

    _this10 = _fcc$ABS$ABaseNotific7.call(this) || this, _defineProperty(_assertThisInitialized(_this10), "TAG_NAME", void 0), _this10.TAG_NAME = fcc.type.NotificationType.USER_GET_WIN;
    return _this10;
  }

  var _proto10 = UserWinPointStateNotification.prototype;

  _proto10.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific7.prototype.subscribe.call(this, t, e);
  };

  _proto10.notify = function notify(t, e) {
    if (0 < this.observer.size) {
      var i,
          n = _createForOfIteratorHelper$6(this.observer);

      try {
        for (n.s(); !(i = n.n()).done;) {
          var r = i.value;
          r.pushNotification(t, e), r.isPermanent || this.unsubscribe(r);
        }
      } catch (t) {
        n.e(t);
      } finally {
        n.f();
      }
    }
  };

  return UserWinPointStateNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$7(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$7(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n8 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n8 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n8++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$7(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$7(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$7(t, e) : void 0;
  }
}

function _arrayLikeToArray$7(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var ResponseResultNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific8) {
  _inheritsLoose(ResponseResultNotification, _fcc$ABS$ABaseNotific8);

  function ResponseResultNotification() {
    var _this11;

    _this11 = _fcc$ABS$ABaseNotific8.call(this) || this, _defineProperty(_assertThisInitialized(_this11), "TAG_NAME", void 0), _this11.TAG_NAME = fcc.type.NotificationType.RESPONSE_RESULT;
    return _this11;
  }

  var _proto11 = ResponseResultNotification.prototype;

  _proto11.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific8.prototype.subscribe.call(this, t, e);
  };

  _proto11.notify = function notify(t) {
    if (0 < this.observer.size) {
      var e,
          i = _createForOfIteratorHelper$7(this.observer);

      try {
        for (i.s(); !(e = i.n()).done;) {
          var n = e.value;
          n.pushNotification(t), n.isPermanent || this.unsubscribe(n);
        }
      } catch (t) {
        i.e(t);
      } finally {
        i.f();
      }
    }
  };

  return ResponseResultNotification;
}(fcc.ABS.ABaseNotification);

function _createForOfIteratorHelper$8(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$8(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n9 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n9 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n9++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$8(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$8(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$8(t, e) : void 0;
  }
}

function _arrayLikeToArray$8(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var SlotRowEndNotification = /*#__PURE__*/function (_fcc$ABS$ABaseNotific9) {
  _inheritsLoose(SlotRowEndNotification, _fcc$ABS$ABaseNotific9);

  function SlotRowEndNotification() {
    var _this12;

    _this12 = _fcc$ABS$ABaseNotific9.call(this) || this, _defineProperty(_assertThisInitialized(_this12), "TAG_NAME", void 0), _this12.TAG_NAME = fcc.type.NotificationType.SLOT_ROW_END;
    return _this12;
  }

  var _proto12 = SlotRowEndNotification.prototype;

  _proto12.subscribe = function subscribe(t, e) {
    _fcc$ABS$ABaseNotific9.prototype.subscribe.call(this, t, e);
  };

  _proto12.notify = function notify(t, e) {
    if (0 < this.observer.size) {
      var i,
          n = _createForOfIteratorHelper$8(this.observer);

      try {
        for (n.s(); !(i = n.n()).done;) {
          var r = i.value;
          r.pushNotification(t, e), r.isPermanent || this.unsubscribe(r);
        }
      } catch (t) {
        n.e(t);
      } finally {
        n.f();
      }
    }
  };

  return SlotRowEndNotification;
}(fcc.ABS.ABaseNotification);

var AutoStateChangeObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve) {
  _inheritsLoose(AutoStateChangeObserver, _fcc$ABS$ABaseObserve);

  function AutoStateChangeObserver(t, e) {
    return _fcc$ABS$ABaseObserve.call(this, t, e) || this;
  }

  var _proto13 = AutoStateChangeObserver.prototype;

  _proto13.pushNotification = function pushNotification(t, e, i) {
    _fcc$ABS$ABaseObserve.prototype.pushNotification.call(this, t, e, i);
  };

  return AutoStateChangeObserver;
}(fcc.ABS.ABaseObserver);

var ScrollFocusStateObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve2) {
  _inheritsLoose(ScrollFocusStateObserver, _fcc$ABS$ABaseObserve2);

  function ScrollFocusStateObserver(t, e) {
    return _fcc$ABS$ABaseObserve2.call(this, t, e) || this;
  }

  var _proto14 = ScrollFocusStateObserver.prototype;

  _proto14.pushNotification = function pushNotification(t, e) {
    _fcc$ABS$ABaseObserve2.prototype.pushNotification.call(this, t, e);
  };

  return ScrollFocusStateObserver;
}(fcc.ABS.ABaseObserver);

var SpeedStateChangeObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve3) {
  _inheritsLoose(SpeedStateChangeObserver, _fcc$ABS$ABaseObserve3);

  function SpeedStateChangeObserver(t, e) {
    return _fcc$ABS$ABaseObserve3.call(this, t, e) || this;
  }

  var _proto15 = SpeedStateChangeObserver.prototype;

  _proto15.pushNotification = function pushNotification(t) {
    _fcc$ABS$ABaseObserve3.prototype.pushNotification.call(this, t);
  };

  return SpeedStateChangeObserver;
}(fcc.ABS.ABaseObserver);

var StopNowStateObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve4) {
  _inheritsLoose(StopNowStateObserver, _fcc$ABS$ABaseObserve4);

  function StopNowStateObserver(t, e) {
    return _fcc$ABS$ABaseObserve4.call(this, t, e) || this;
  }

  var _proto16 = StopNowStateObserver.prototype;

  _proto16.pushNotification = function pushNotification() {
    _fcc$ABS$ABaseObserve4.prototype.pushNotification.call(this);
  };

  return StopNowStateObserver;
}(fcc.ABS.ABaseObserver);

var UserMoneyChangeObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve5) {
  _inheritsLoose(UserMoneyChangeObserver, _fcc$ABS$ABaseObserve5);

  function UserMoneyChangeObserver(t, e) {
    return _fcc$ABS$ABaseObserve5.call(this, t, e) || this;
  }

  var _proto17 = UserMoneyChangeObserver.prototype;

  _proto17.pushNotification = function pushNotification(t) {
    _fcc$ABS$ABaseObserve5.prototype.pushNotification.call(this, t);
  };

  return UserMoneyChangeObserver;
}(fcc.ABS.ABaseObserver);

var UserTotalBetChangeObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve6) {
  _inheritsLoose(UserTotalBetChangeObserver, _fcc$ABS$ABaseObserve6);

  function UserTotalBetChangeObserver(t, e) {
    return _fcc$ABS$ABaseObserve6.call(this, t, e) || this;
  }

  var _proto18 = UserTotalBetChangeObserver.prototype;

  _proto18.pushNotification = function pushNotification(t, e) {
    _fcc$ABS$ABaseObserve6.prototype.pushNotification.call(this, t, e);
  };

  return UserTotalBetChangeObserver;
}(fcc.ABS.ABaseObserver);

var UserWinPointStateObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve7) {
  _inheritsLoose(UserWinPointStateObserver, _fcc$ABS$ABaseObserve7);

  function UserWinPointStateObserver(t, e) {
    return _fcc$ABS$ABaseObserve7.call(this, t, e) || this;
  }

  var _proto19 = UserWinPointStateObserver.prototype;

  _proto19.pushNotification = function pushNotification(t, e) {
    _fcc$ABS$ABaseObserve7.prototype.pushNotification.call(this, t, e);
  };

  return UserWinPointStateObserver;
}(fcc.ABS.ABaseObserver);

var ResponseResultObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve8) {
  _inheritsLoose(ResponseResultObserver, _fcc$ABS$ABaseObserve8);

  function ResponseResultObserver(t, e) {
    return _fcc$ABS$ABaseObserve8.call(this, t, e) || this;
  }

  var _proto20 = ResponseResultObserver.prototype;

  _proto20.pushNotification = function pushNotification(t) {
    _fcc$ABS$ABaseObserve8.prototype.pushNotification.call(this, t);
  };

  return ResponseResultObserver;
}(fcc.ABS.ABaseObserver);

var SlotRowEndObserver = /*#__PURE__*/function (_fcc$ABS$ABaseObserve9) {
  _inheritsLoose(SlotRowEndObserver, _fcc$ABS$ABaseObserve9);

  function SlotRowEndObserver(t, e) {
    return _fcc$ABS$ABaseObserve9.call(this, t, e) || this;
  }

  var _proto21 = SlotRowEndObserver.prototype;

  _proto21.pushNotification = function pushNotification(t, e) {
    _fcc$ABS$ABaseObserve9.prototype.pushNotification.call(this, t, e);
  };

  return SlotRowEndObserver;
}(fcc.ABS.ABaseObserver);

function asyncGeneratorStep(t, e, i, n, r, o, s) {
  try {
    var a = t[o](s),
        u = a.value;
  } catch (t) {
    return void i(t);
  }

  a.done ? e(u) : Promise.resolve(u).then(n, r);
}

function _asyncToGenerator(a) {
  return function () {
    var t = this,
        s = arguments;
    return new Promise(function (e, i) {
      var n = a.apply(t, s);

      function r(t) {
        asyncGeneratorStep(n, e, i, r, o, "next", t);
      }

      function o(t) {
        asyncGeneratorStep(n, e, i, r, o, "throw", t);
      }

      r(void 0);
    });
  };
}

var undefined$1,
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

function wrap(t, e, i, n) {
  e = e && e.prototype instanceof Generator ? e : Generator, e = Object.create(e.prototype), n = new Context(n || []);
  return e._invoke = makeInvokeMethod(t, i, n), e;
}

function tryCatch(t, e, i) {
  try {
    return {
      type: "normal",
      arg: t.call(e, i)
    };
  } catch (t) {
    return {
      type: "throw",
      arg: t
    };
  }
}

var GenStateSuspendedStart = "suspendedStart",
    GenStateSuspendedYield = "suspendedYield",
    GenStateExecuting = "executing",
    GenStateCompleted = "completed",
    ContinueSentinel = {};

function Generator() {}

function GeneratorFunction() {}

function GeneratorFunctionPrototype() {}

var IteratorPrototype = {};

IteratorPrototype[iteratorSymbol] = function () {
  return this;
};

var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);

function defineIteratorMethods(t) {
  ["next", "throw", "return"].forEach(function (e) {
    t[e] = function (t) {
      return this._invoke(e, t);
    };
  });
}

function isGeneratorFunction(t) {
  t = "function" == typeof t && t.constructor;
  return !!t && (t === GeneratorFunction || "GeneratorFunction" === (t.displayName || t.name));
}

function mark(t) {
  return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, toStringTagSymbol in t || (t[toStringTagSymbol] = "GeneratorFunction")), t.prototype = Object.create(Gp), t;
}

function awrap(t) {
  return {
    __await: t
  };
}

function AsyncIterator(s, a) {
  var e;

  this._invoke = function (i, n) {
    function t() {
      return new a(function (t, e) {
        !function e(t, i, n, r) {
          t = tryCatch(s[t], s, i);

          if ("throw" !== t.type) {
            var o = t.arg;
            return (i = o.value) && "object" == typeof i && hasOwn.call(i, "__await") ? a.resolve(i.__await).then(function (t) {
              e("next", t, n, r);
            }, function (t) {
              e("throw", t, n, r);
            }) : a.resolve(i).then(function (t) {
              o.value = t, n(o);
            }, function (t) {
              return e("throw", t, n, r);
            });
          }

          r(t.arg);
        }(i, n, t, e);
      });
    }

    return e = e ? e.then(t, t) : t();
  };
}

function async(t, e, i, n, r) {
  void 0 === r && (r = Promise);
  var o = new AsyncIterator(wrap(t, e, i, n), r);
  return isGeneratorFunction(e) ? o : o.next().then(function (t) {
    return t.done ? t.value : o.next();
  });
}

function makeInvokeMethod(r, o, s) {
  var a = GenStateSuspendedStart;
  return function (t, e) {
    if (a === GenStateExecuting) throw new Error("Generator is already running");

    if (a === GenStateCompleted) {
      if ("throw" === t) throw e;
      return doneResult();
    }

    for (s.method = t, s.arg = e;;) {
      var i = s.delegate;

      if (i) {
        var n = maybeInvokeDelegate(i, s);

        if (n) {
          if (n === ContinueSentinel) continue;
          return n;
        }
      }

      if ("next" === s.method) s.sent = s._sent = s.arg;else if ("throw" === s.method) {
        if (a === GenStateSuspendedStart) throw a = GenStateCompleted, s.arg;
        s.dispatchException(s.arg);
      } else "return" === s.method && s.abrupt("return", s.arg);
      a = GenStateExecuting;
      n = tryCatch(r, o, s);

      if ("normal" === n.type) {
        if (a = s.done ? GenStateCompleted : GenStateSuspendedYield, n.arg !== ContinueSentinel) return {
          value: n.arg,
          done: s.done
        };
      } else "throw" === n.type && (a = GenStateCompleted, s.method = "throw", s.arg = n.arg);
    }
  };
}

function maybeInvokeDelegate(t, e) {
  var i = t.iterator[e.method];

  if (i === undefined$1) {
    if (e.delegate = null, "throw" === e.method) {
      if (t.iterator["return"] && (e.method = "return", e.arg = undefined$1, maybeInvokeDelegate(t, e), "throw" === e.method)) return ContinueSentinel;
      e.method = "throw", e.arg = new TypeError("The iterator does not provide a 'throw' method");
    }

    return ContinueSentinel;
  }

  i = tryCatch(i, t.iterator, e.arg);
  if ("throw" === i.type) return e.method = "throw", e.arg = i.arg, e.delegate = null, ContinueSentinel;
  i = i.arg;
  return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = undefined$1), e.delegate = null, ContinueSentinel) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, ContinueSentinel);
}

function pushTryEntry(t) {
  var e = {
    tryLoc: t[0]
  };
  1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
}

function resetTryEntry(t) {
  var e = t.completion || {};
  e.type = "normal", delete e.arg, t.completion = e;
}

function Context(t) {
  this.tryEntries = [{
    tryLoc: "root"
  }], t.forEach(pushTryEntry, this), this.reset(!0);
}

function keys(i) {
  var t,
      n = [];

  for (t in i) {
    n.push(t);
  }

  return n.reverse(), function t() {
    for (; n.length;) {
      var e = n.pop();
      if (e in i) return t.value = e, t.done = !1, t;
    }

    return t.done = !0, t;
  };
}

function values(e) {
  if (e) {
    var t = e[iteratorSymbol];
    if (t) return t.call(e);
    if ("function" == typeof e.next) return e;

    if (!isNaN(e.length)) {
      var i = -1,
          t = function t() {
        for (; ++i < e.length;) {
          if (hasOwn.call(e, i)) return t.value = e[i], t.done = !1, t;
        }

        return t.value = undefined$1, t.done = !0, t;
      };

      return t.next = t;
    }
  }

  return {
    next: doneResult
  };
}

function doneResult() {
  return {
    value: undefined$1,
    done: !0
  };
}

(GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype).constructor = GeneratorFunction, GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction", defineIteratorMethods(AsyncIterator.prototype), AsyncIterator.prototype[asyncIteratorSymbol] = function () {
  return this;
}, defineIteratorMethods(Gp), Gp[toStringTagSymbol] = "Generator", Gp[iteratorSymbol] = function () {
  return this;
}, Gp.toString = function () {
  return "[object Generator]";
}, Context.prototype = {
  constructor: Context,
  reset: function reset(t) {
    if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined$1, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined$1, this.tryEntries.forEach(resetTryEntry), !t) for (var e in this) {
      "t" === e.charAt(0) && hasOwn.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = undefined$1);
    }
  },
  stop: function stop() {
    this.done = !0;
    var t = this.tryEntries[0].completion;
    if ("throw" === t.type) throw t.arg;
    return this.rval;
  },
  dispatchException: function dispatchException(i) {
    if (this.done) throw i;
    var n = this;

    function t(t, e) {
      return o.type = "throw", o.arg = i, n.next = t, e && (n.method = "next", n.arg = undefined$1), !!e;
    }

    for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
      var r = this.tryEntries[e],
          o = r.completion;
      if ("root" === r.tryLoc) return t("end");

      if (r.tryLoc <= this.prev) {
        var s = hasOwn.call(r, "catchLoc"),
            a = hasOwn.call(r, "finallyLoc");

        if (s && a) {
          if (this.prev < r.catchLoc) return t(r.catchLoc, !0);
          if (this.prev < r.finallyLoc) return t(r.finallyLoc);
        } else if (s) {
          if (this.prev < r.catchLoc) return t(r.catchLoc, !0);
        } else {
          if (!a) throw new Error("try statement without catch or finally");
          if (this.prev < r.finallyLoc) return t(r.finallyLoc);
        }
      }
    }
  },
  abrupt: function abrupt(t, e) {
    for (var i = this.tryEntries.length - 1; 0 <= i; --i) {
      var n = this.tryEntries[i];

      if (n.tryLoc <= this.prev && hasOwn.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
        var r = n;
        break;
      }
    }

    var o = (r = r && ("break" === t || "continue" === t) && r.tryLoc <= e && e <= r.finallyLoc ? null : r) ? r.completion : {};
    return o.type = t, o.arg = e, r ? (this.method = "next", this.next = r.finallyLoc, ContinueSentinel) : this.complete(o);
  },
  complete: function complete(t, e) {
    if ("throw" === t.type) throw t.arg;
    return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), ContinueSentinel;
  },
  finish: function finish(t) {
    for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
      var i = this.tryEntries[e];
      if (i.finallyLoc === t) return this.complete(i.completion, i.afterLoc), resetTryEntry(i), ContinueSentinel;
    }
  },
  "catch": function _catch(t) {
    for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
      var i = this.tryEntries[e];

      if (i.tryLoc === t) {
        var n,
            r = i.completion;
        return "throw" === r.type && (n = r.arg, resetTryEntry(i)), n;
      }
    }

    throw new Error("illegal catch attempt");
  },
  delegateYield: function delegateYield(t, e, i) {
    return this.delegate = {
      iterator: values(t),
      resultName: e,
      nextLoc: i
    }, "next" === this.method && (this.arg = undefined$1), ContinueSentinel;
  }
};
var PageChangeType,
    DayType,
    _regeneratorRuntime = {
  wrap: wrap,
  isGeneratorFunction: isGeneratorFunction,
  AsyncIterator: AsyncIterator,
  mark: mark,
  awrap: awrap,
  async: async,
  keys: keys,
  values: values
};

var AMainGameButtonTemplate = /*#__PURE__*/function (_AGenericTemplate2) {
  _inheritsLoose(AMainGameButtonTemplate, _AGenericTemplate2);

  function AMainGameButtonTemplate() {
    var _this13;

    _this13 = _AGenericTemplate2.apply(this, arguments) || this, _defineProperty(_assertThisInitialized(_this13), "isShowTotalBetFrame", void 0), _defineProperty(_assertThisInitialized(_this13), "keyboardListener", void 0), _defineProperty(_assertThisInitialized(_this13), "_autoStateChangeObserver", void 0), _defineProperty(_assertThisInitialized(_this13), "nowSpeed", void 0), _defineProperty(_assertThisInitialized(_this13), "isAutoState", void 0), _defineProperty(_assertThisInitialized(_this13), "nowAutoType", void 0), _defineProperty(_assertThisInitialized(_this13), "longTouchTime", void 0), _defineProperty(_assertThisInitialized(_this13), "userMoney", void 0), _defineProperty(_assertThisInitialized(_this13), "_userMoneyChangeObserver", void 0);
    return _this13;
  }

  var _proto22 = AMainGameButtonTemplate.prototype;

  _proto22.onLoad = function onLoad() {
    this.isShowTotalBetFrame = !1, this.keyboardListener = !1, this.nowAutoType = fcc.configMgr.autoCount, this.longTouchTime = .5, this.nowSpeed = fcc.configMgr.isSpeedUp, this.addNotification(), _AGenericTemplate2.prototype.onLoad.call(this);
  };

  _proto22.addNotification = function addNotification() {
    fcc.notificationMgr().getNotification(fcc.type.NotificationType.AUTO_CHANGE).subscribe(this.getAutoStateChangeObserver(), !0), fcc.notificationMgr().getNotification(fcc.type.NotificationType.USER_MONEY_CHANGE).subscribe(this.getUserMoneyChangeObserver(), !0);
  };

  _proto22.startButtonOnTouchStart = function startButtonOnTouchStart() {
    this.unschedule(this.longTouchTimer), this.isAutoState ? this.autoNotify(!1, this.nowAutoType) : this.scheduleOnce(this.longTouchTimer, this.longTouchTime);
  };

  _proto22.longTouchTimer = function longTouchTimer() {
    var e = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              if (e.autoNotify(!0, e.nowAutoType), fcc.processMgr.gameState == fcc.type.GameStateType.STANDBY) return t.next = 4, e.startButtonEvent();
              t.next = 4;
              break;

            case 4:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto22.autoNotify = function autoNotify(t, e) {
    fcc.notificationMgr().getNotification(fcc.type.NotificationType.AUTO_CHANGE).notify(t, e, e);
  };

  _proto22.startButtonOnTouchEnd = function startButtonOnTouchEnd() {
    var e = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              if (e.unschedule(e.longTouchTimer), e.isAutoState) return t.abrupt("return");
              t.next = 3;
              break;

            case 3:
              return t.next = 5, e.startButtonEvent();

            case 5:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto22.keyboardSpaceTouchStart = function keyboardSpaceTouchStart(t) {
    t.keyCode === cc.macro.KEY.space && (this.keyboardListener || (this.keyboardListener = !0, this.startButtonOnTouchStart()));
  };

  _proto22.keyboardSpaceTouchEnd = function keyboardSpaceTouchEnd(e) {
    var i = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              t.t0 = e.keyCode, t.next = t.t0 === cc.macro.KEY.space ? 3 : 7;
              break;

            case 3:
              return t.next = 5, i.startButtonOnTouchEnd();

            case 5:
              return i.keyboardListener = !1, t.abrupt("break", 7);

            case 7:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto22.getAutoStateChangeObserver = function getAutoStateChangeObserver() {
    var r = this;
    return this._autoStateChangeObserver || (this._autoStateChangeObserver = new AutoStateChangeObserver(function () {
      var n = _asyncToGenerator(_regeneratorRuntime.mark(function t(e, i, n) {
        return _regeneratorRuntime.wrap(function (t) {
          for (;;) {
            switch (t.prev = t.next) {
              case 0:
                if (r.nowAutoType = n, r.isAutoState = e, r.autoEvent(e, n), e && fcc.processMgr.gameState == fcc.type.GameStateType.STANDBY) return t.next = 6, r.startButtonEvent();
                t.next = 6;
                break;

              case 6:
              case "end":
                return t.stop();
            }
          }
        }, t);
      }));

      return function (t, e, i) {
        return n.apply(this, arguments);
      };
    }(), this)), this._autoStateChangeObserver;
  };

  _proto22.getUserMoneyChangeObserver = function getUserMoneyChangeObserver() {
    var _this14 = this;

    return this._userMoneyChangeObserver || (this._userMoneyChangeObserver = new UserMoneyChangeObserver(function (t) {
      _this14.userMoney = t;
    }, this)), this._userMoneyChangeObserver;
  };

  _proto22.startButtonEvent = function startButtonEvent() {
    var e = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              if (e.isShowTotalBetFrame) return e.isShowTotalBetFrame = !e.isShowTotalBetFrame, e.totalBetFrameTouchEvent(!1), t.abrupt("return");
              t.next = 4;
              break;

            case 4:
              if (fcc.processMgr.gameState != fcc.type.GameStateType.STANDBY && fcc.processMgr.gameState != fcc.type.GameStateType.FREEING) return fcc.notificationMgr().getNotification(fcc.type.NotificationType.STOP_NOW).notify(), t.abrupt("return");
              t.next = 7;
              break;

            case 7:
              if (e.checkUserPointCanPlayGame()) {
                t.next = 9;
                break;
              }

              return t.abrupt("return");

            case 9:
              return e.startEvent(), t.next = 12, fcc.processMgr.play();

            case 12:
              e.endEvent();

            case 13:
              if (e.isAutoState || fcc.processMgr.gameState === fcc.type.GameStateType.FREEING) {
                t.next = 0;
                break;
              }

            case 14:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto22.autoButtonEventListener = function autoButtonEventListener() {
    if (this.unschedule(this.longTouchTimer), this.isShowTotalBetFrame) return this.isShowTotalBetFrame = !this.isShowTotalBetFrame, void this.totalBetFrameTouchEvent(!1);
    this.isAutoState = !this.isAutoState, this.autoNotify(this.isAutoState, this.nowAutoType);
  };

  _proto22.speedUpButtonEventListener = function speedUpButtonEventListener() {
    this.nowSpeed = !this.nowSpeed, fcc.notificationMgr().getNotification(fcc.type.NotificationType.SPEED_CHANGE).notify(this.nowSpeed), this.speedUpEvent(this.nowSpeed);
  };

  _proto22.totalBetFrameTouchEventListener = function totalBetFrameTouchEventListener() {
    fcc.processMgr.gameState == fcc.type.GameStateType.STANDBY ? (this.isShowTotalBetFrame = !this.isShowTotalBetFrame, this.totalBetFrameTouchEvent(this.isShowTotalBetFrame)) : this.warningEvent();
  };

  _proto22.menuButtonEventListener = function menuButtonEventListener() {
    this.unschedule(this.longTouchTimer), fcc.processMgr.gameState == fcc.type.GameStateType.STANDBY ? this.menuEvent() : this.warningEvent();
  };

  return AMainGameButtonTemplate;
}(AGenericTemplate);

var AMainGameOnlyButtonTemplate = /*#__PURE__*/function (_AMainGameButtonTempl) {
  _inheritsLoose(AMainGameOnlyButtonTemplate, _AMainGameButtonTempl);

  function AMainGameOnlyButtonTemplate() {
    return _AMainGameButtonTempl.apply(this, arguments) || this;
  }

  var _proto23 = AMainGameOnlyButtonTemplate.prototype;

  _proto23.onLoad = function onLoad() {
    fcc.global.Button.addButtonEvent(this.autoButton, "autoButtonEventListener", this), fcc.global.Button.addButtonEvent(this.speedUpButton, "speedUpButtonEventListener", this), fcc.global.Button.addButtonEvent(this.betSelectionButton, "totalBetFrameTouchEventListener", this), fcc.global.Button.addButtonEvent(this.menuButton, "menuButtonEventListener", this), _AMainGameButtonTempl.prototype.onLoad.call(this);
  };

  _proto23.startButtonOnEnable = function startButtonOnEnable() {
    this.unschedule(this.longTouchTimer), this.startButton.node.on(cc.Node.EventType.TOUCH_START, this.startButtonOnTouchStart, this), this.startButton.node.on(cc.Node.EventType.TOUCH_END, this.startButtonOnTouchEnd, this), cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.keyboardSpaceTouchStart, this), cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.keyboardSpaceTouchEnd, this);
  };

  _proto23.startButtonDisable = function startButtonDisable() {
    this.unschedule(this.longTouchTimer), this.startButton.node.off(cc.Node.EventType.TOUCH_START, this.startButtonOnTouchStart, this), this.startButton.node.off(cc.Node.EventType.TOUCH_END, this.startButtonOnTouchEnd, this), cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.keyboardSpaceTouchStart, this), cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.keyboardSpaceTouchEnd, this);
  };

  return AMainGameOnlyButtonTemplate;
}(AMainGameButtonTemplate);

var AMainGameDoubleButtonTemplate = /*#__PURE__*/function (_AMainGameButtonTempl2) {
  _inheritsLoose(AMainGameDoubleButtonTemplate, _AMainGameButtonTempl2);

  function AMainGameDoubleButtonTemplate() {
    return _AMainGameButtonTempl2.apply(this, arguments) || this;
  }

  var _proto24 = AMainGameDoubleButtonTemplate.prototype;

  _proto24.onLoad = function onLoad() {
    fcc.global.Button.addButtonEvent(this.autoButtonH, "autoButtonEventListener", this), fcc.global.Button.addButtonEvent(this.autoButtonV, "autoButtonEventListener", this), fcc.global.Button.addButtonEvent(this.speedUpButtonH, "speedUpButtonEventListener", this), fcc.global.Button.addButtonEvent(this.speedUpButtonV, "speedUpButtonEventListener", this), fcc.global.Button.addButtonEvent(this.betSelectionButtonH, "totalBetFrameTouchEventListener", this), fcc.global.Button.addButtonEvent(this.betSelectionButtonV, "totalBetFrameTouchEventListener", this), fcc.global.Button.addButtonEvent(this.menuButtonH, "menuButtonEventListener", this), fcc.global.Button.addButtonEvent(this.menuButtonV, "menuButtonEventListener", this), _AMainGameButtonTempl2.prototype.onLoad.call(this);
  };

  _proto24.startButtonOnEnable = function startButtonOnEnable() {
    this.unschedule(this.longTouchTimer), this.startButtonH.node.on(cc.Node.EventType.TOUCH_START, this.startButtonOnTouchStart, this), this.startButtonV.node.on(cc.Node.EventType.TOUCH_START, this.startButtonOnTouchStart, this), this.startButtonH.node.on(cc.Node.EventType.TOUCH_END, this.startButtonOnTouchEnd, this), this.startButtonV.node.on(cc.Node.EventType.TOUCH_END, this.startButtonOnTouchEnd, this), cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.keyboardSpaceTouchStart, this), cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.keyboardSpaceTouchEnd, this);
  };

  _proto24.startButtonDisable = function startButtonDisable() {
    this.unschedule(this.longTouchTimer), this.startButtonH.node.off(cc.Node.EventType.TOUCH_START, this.startButtonOnTouchStart, this), this.startButtonV.node.off(cc.Node.EventType.TOUCH_START, this.startButtonOnTouchStart, this), this.startButtonH.node.off(cc.Node.EventType.TOUCH_END, this.startButtonOnTouchEnd, this), this.startButtonV.node.off(cc.Node.EventType.TOUCH_END, this.startButtonOnTouchEnd, this), cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.keyboardSpaceTouchStart, this), cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.keyboardSpaceTouchEnd, this);
  };

  return AMainGameDoubleButtonTemplate;
}(AMainGameButtonTemplate);

var AMenuButtonTemplate = /*#__PURE__*/function (_AGenericTemplate3) {
  _inheritsLoose(AMenuButtonTemplate, _AGenericTemplate3);

  function AMenuButtonTemplate() {
    var _this15;

    _this15 = _AGenericTemplate3.apply(this, arguments) || this, _defineProperty(_assertThisInitialized(_this15), "userTotalBetChangeObserver", void 0), _defineProperty(_assertThisInitialized(_this15), "autoStateChangeObserver", void 0), _defineProperty(_assertThisInitialized(_this15), "nowAutoType", void 0);
    return _this15;
  }

  var _proto25 = AMenuButtonTemplate.prototype;

  _proto25.onLoad = function onLoad() {
    this.nowAutoType = fcc.configMgr.autoCount, this.addNotification(), _AGenericTemplate3.prototype.onLoad.call(this);
  };

  _proto25.addNotification = function addNotification() {
    fcc.notificationMgr().getNotification(fcc.type.NotificationType.USER_BET_CHANGE).subscribe(this.getUserTotalBetChangeObserver(), !0);
  };

  _proto25.musicEventListener = function musicEventListener() {
    var t = fcc.audioMgr.updateMusicOnMute();
    this.musicEvent(t);
  };

  _proto25.effectEventListener = function effectEventListener() {
    var t = fcc.audioMgr.updateEffectOnMute();
    this.effectEvent(t);
  };

  _proto25.betUpEventListener = function betUpEventListener() {
    var t = this.nowBetIndex + 1;
    t > this.tableInfo.LineBet.length - 1 && (t = 0), fcc.notificationMgr().getNotification(fcc.type.NotificationType.USER_BET_CHANGE).notify(this.nowBetIndex, t);
  };

  _proto25.betDownEventListener = function betDownEventListener() {
    var t = this.nowBetIndex - 1;
    t < 0 && (t = this.tableInfo.LineBet.length - 1), fcc.notificationMgr().getNotification(fcc.type.NotificationType.USER_BET_CHANGE).notify(this.nowBetIndex, t);
  };

  _proto25.getUserTotalBetChangeObserver = function getUserTotalBetChangeObserver() {
    var _this16 = this;

    return this.userTotalBetChangeObserver || (this.userTotalBetChangeObserver = new UserTotalBetChangeObserver(function (t, e) {
      _this16.nowBetIndex = e, _this16.totalBetChangeEvent(t, e);
    }, this)), this.userTotalBetChangeObserver;
  };

  _proto25.autoButtonEventListener = function autoButtonEventListener(t, e) {
    this.autoEvent(this.nowAutoType, e), fcc.notificationMgr().getNotification(fcc.type.NotificationType.AUTO_CHANGE).notify(!0, this.nowAutoType, e), this.nowAutoType = e;
  };

  return AMenuButtonTemplate;
}(AGenericTemplate);

var AMenuDoubleButtonTemplate = /*#__PURE__*/function (_AMenuButtonTemplate) {
  _inheritsLoose(AMenuDoubleButtonTemplate, _AMenuButtonTemplate);

  function AMenuDoubleButtonTemplate() {
    return _AMenuButtonTemplate.apply(this, arguments) || this;
  }

  var _proto26 = AMenuDoubleButtonTemplate.prototype;

  _proto26.onLoad = function onLoad() {
    fcc.global.Button.addButtonEvent(this.musicButtonH, "musicEventListener", this), fcc.global.Button.addButtonEvent(this.musicButtonV, "musicEventListener", this), fcc.global.Button.addButtonEvent(this.effectButtonH, "effectEventListener", this), fcc.global.Button.addButtonEvent(this.effectButtonV, "effectEventListener", this), fcc.global.Button.addButtonEvent(this.betUpButtonH, "betUpEventListener", this), fcc.global.Button.addButtonEvent(this.betUpButtonV, "betUpEventListener", this), fcc.global.Button.addButtonEvent(this.betDownButtonH, "betDownEventListener", this), fcc.global.Button.addButtonEvent(this.betDownButtonV, "betDownEventListener", this), fcc.global.Button.addButtonEvent(this.auto50ButtonH, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_50), fcc.global.Button.addButtonEvent(this.auto50ButtonV, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_50), fcc.global.Button.addButtonEvent(this.auto100ButtonH, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_100), fcc.global.Button.addButtonEvent(this.auto100ButtonV, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_100), fcc.global.Button.addButtonEvent(this.auto500ButtonH, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_500), fcc.global.Button.addButtonEvent(this.auto500ButtonV, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_500), fcc.global.Button.addButtonEvent(this.auto1000ButtonH, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_1000), fcc.global.Button.addButtonEvent(this.auto1000ButtonV, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_1000), fcc.global.Button.addButtonEvent(this.autoFreeEndButtonH, "autoButtonEventListener", this, fcc.type.AutoType.FREE_END), fcc.global.Button.addButtonEvent(this.autoFreeEndButtonV, "autoButtonEventListener", this, fcc.type.AutoType.FREE_END), fcc.global.Button.addButtonEvent(this.autoButtonH, "autoButtonEventListener", this, fcc.type.AutoType.AUTO), fcc.global.Button.addButtonEvent(this.autoButtonV, "autoButtonEventListener", this, fcc.type.AutoType.AUTO), fcc.global.Button.addButtonEvent(this.goBackButtonH, "goBackTouchEvent", this), fcc.global.Button.addButtonEvent(this.goBackButtonV, "goBackTouchEvent", this), fcc.global.Button.addButtonEvent(this.goHomeButtonH, "goHomeTouchEvent", this), fcc.global.Button.addButtonEvent(this.goHomeButtonV, "goHomeTouchEvent", this), fcc.global.Button.addButtonEvent(this.recordButtonH, "recordPageTouchEvent", this), fcc.global.Button.addButtonEvent(this.recordButtonV, "recordPageTouchEvent", this), fcc.global.Button.addButtonEvent(this.settingButtonH, "settingPageTouchEvent", this), fcc.global.Button.addButtonEvent(this.settingButtonV, "settingPageTouchEvent", this), fcc.global.Button.addButtonEvent(this.descriptionPageButtonH, "descriptionPageEvent", this), fcc.global.Button.addButtonEvent(this.descriptionPageButtonV, "descriptionPageEvent", this), _AMenuButtonTemplate.prototype.onLoad.call(this);
  };

  return AMenuDoubleButtonTemplate;
}(AMenuButtonTemplate);

var AMenuOnlyButtonTemplate = /*#__PURE__*/function (_AMenuButtonTemplate2) {
  _inheritsLoose(AMenuOnlyButtonTemplate, _AMenuButtonTemplate2);

  function AMenuOnlyButtonTemplate() {
    return _AMenuButtonTemplate2.apply(this, arguments) || this;
  }

  var _proto27 = AMenuOnlyButtonTemplate.prototype;

  _proto27.onLoad = function onLoad() {
    fcc.global.Button.addButtonEvent(this.musicButton, "musicEventListener", this), fcc.global.Button.addButtonEvent(this.effectButton, "effectEventListener", this), fcc.global.Button.addButtonEvent(this.betUpButton, "betUpEventListener", this), fcc.global.Button.addButtonEvent(this.betDownButton, "betDownEventListener", this), fcc.global.Button.addButtonEvent(this.auto50Button, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_50), fcc.global.Button.addButtonEvent(this.auto100Button, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_100), fcc.global.Button.addButtonEvent(this.auto500Button, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_500), fcc.global.Button.addButtonEvent(this.auto1000Button, "autoButtonEventListener", this, fcc.type.AutoType.AUTO_1000), fcc.global.Button.addButtonEvent(this.autoFreeEndButton, "autoButtonEventListener", this, fcc.type.AutoType.FREE_END), fcc.global.Button.addButtonEvent(this.autoButton, "autoButtonEventListener", this, fcc.type.AutoType.AUTO), fcc.global.Button.addButtonEvent(this.goBackButton, "goBackTouchEvent", this), fcc.global.Button.addButtonEvent(this.goHomeButton, "goHomeTouchEvent", this), fcc.global.Button.addButtonEvent(this.recordButton, "recordPageTouchEvent", this), fcc.global.Button.addButtonEvent(this.settingButton, "settingPageTouchEvent", this), fcc.global.Button.addButtonEvent(this.descriptionPageButton, "descriptionPageEvent", this), _AMenuButtonTemplate2.prototype.onLoad.call(this);
  };

  return AMenuOnlyButtonTemplate;
}(AMenuButtonTemplate);

!function (t) {
  t.NEXT = "NEXT", t.PREVIOUS = "PREVIOUS";
}(PageChangeType = PageChangeType || {}), function (t) {
  t.ONE_DAY = "ONE_DAY", t.FIVE_DAY = "FIVE_DAY", t.TEN_DAY = "TEN_DAY";
}(DayType = DayType || {});

var ARecordButtonTemplate = /*#__PURE__*/function (_AGenericTemplate4) {
  _inheritsLoose(ARecordButtonTemplate, _AGenericTemplate4);

  function ARecordButtonTemplate() {
    return _AGenericTemplate4.apply(this, arguments) || this;
  }

  var _proto28 = ARecordButtonTemplate.prototype;

  _proto28.onLoad = function onLoad() {
    _AGenericTemplate4.prototype.onLoad.call(this);
  };

  return ARecordButtonTemplate;
}(AGenericTemplate);

var ARecordDoubleButtonTemplate = /*#__PURE__*/function (_ARecordButtonTemplat) {
  _inheritsLoose(ARecordDoubleButtonTemplate, _ARecordButtonTemplat);

  function ARecordDoubleButtonTemplate() {
    return _ARecordButtonTemplat.apply(this, arguments) || this;
  }

  var _proto29 = ARecordDoubleButtonTemplate.prototype;

  _proto29.onLoad = function onLoad() {
    fcc.global.Button.addButtonEvent(this.goBackButtonH, "goBackTouchEvent", this), fcc.global.Button.addButtonEvent(this.goBackButtonV, "goBackTouchEvent", this), fcc.global.Button.addButtonEvent(this.oneDayRecordButtonH, "daysRecordTouchEventH", this, DayType.ONE_DAY), fcc.global.Button.addButtonEvent(this.oneDayRecordButtonV, "daysRecordTouchEventV", this, DayType.ONE_DAY), fcc.global.Button.addButtonEvent(this.fiveDayRecordButtonH, "daysRecordTouchEventH", this, DayType.FIVE_DAY), fcc.global.Button.addButtonEvent(this.fiveDayRecordButtonV, "daysRecordTouchEventV", this, DayType.FIVE_DAY), fcc.global.Button.addButtonEvent(this.tenDayRecordButtonH, "daysRecordTouchEventH", this, DayType.TEN_DAY), fcc.global.Button.addButtonEvent(this.tenDayRecordButtonV, "daysRecordTouchEventV", this, DayType.TEN_DAY), fcc.global.Button.addButtonEvent(this.nextRecordButtonH, "nextAndLastButtonTouchEvent", this, PageChangeType.NEXT), fcc.global.Button.addButtonEvent(this.nextRecordButtonV, "nextAndLastButtonTouchEvent", this, PageChangeType.NEXT), fcc.global.Button.addButtonEvent(this.previousRecordButtonH, "nextAndLastButtonTouchEvent", this, PageChangeType.PREVIOUS), fcc.global.Button.addButtonEvent(this.previousRecordButtonV, "nextAndLastButtonTouchEvent", this, PageChangeType.PREVIOUS), _ARecordButtonTemplat.prototype.onLoad.call(this);
  };

  return ARecordDoubleButtonTemplate;
}(ARecordButtonTemplate);

var ARecordOnlyButtonTemplate = /*#__PURE__*/function (_ARecordButtonTemplat2) {
  _inheritsLoose(ARecordOnlyButtonTemplate, _ARecordButtonTemplat2);

  function ARecordOnlyButtonTemplate() {
    return _ARecordButtonTemplat2.apply(this, arguments) || this;
  }

  var _proto30 = ARecordOnlyButtonTemplate.prototype;

  _proto30.onLoad = function onLoad() {
    fcc.global.Button.addButtonEvent(this.goBackButton, "goBackTouchEvent", this), fcc.global.Button.addButtonEvent(this.oneDayRecordButton, "daysRecordTouchEventH", this, DayType.ONE_DAY), fcc.global.Button.addButtonEvent(this.fiveDayRecordButton, "daysRecordTouchEventH", this, DayType.FIVE_DAY), fcc.global.Button.addButtonEvent(this.tenDayRecordButton, "daysRecordTouchEventH", this, DayType.TEN_DAY), fcc.global.Button.addButtonEvent(this.nextRecordButton, "nextAndLastButtonTouchEvent", this, PageChangeType.NEXT), fcc.global.Button.addButtonEvent(this.previousRecordButton, "nextAndLastButtonTouchEvent", this, PageChangeType.PREVIOUS), _ARecordButtonTemplat2.prototype.onLoad.call(this);
  };

  return ARecordOnlyButtonTemplate;
}(ARecordButtonTemplate);

var AErrorFrameTemplate = /*#__PURE__*/function (_AGenericTemplate5) {
  _inheritsLoose(AErrorFrameTemplate, _AGenericTemplate5);

  function AErrorFrameTemplate() {
    return _AGenericTemplate5.apply(this, arguments) || this;
  }

  var _proto31 = AErrorFrameTemplate.prototype;

  _proto31.onLoad = function onLoad() {
    fcc.global.Button.addButtonEvent(this.errorButton, "errorButtonTouchEvent", this), _AGenericTemplate5.prototype.onLoad.call(this);
  };

  return AErrorFrameTemplate;
}(AGenericTemplate);

var ALoadingTemplate = /*#__PURE__*/function (_AGenericTemplate6) {
  _inheritsLoose(ALoadingTemplate, _AGenericTemplate6);

  function ALoadingTemplate() {
    var _this17;

    _this17 = _AGenericTemplate6.call(this) || this, _defineProperty(_assertThisInitialized(_this17), "_isGetTableInfoResponse", void 0), _this17._isGetTableInfoResponse = !1;
    return _this17;
  }

  var _proto32 = ALoadingTemplate.prototype;

  _proto32.onLoad = function onLoad() {
    this.responseNotification(), fcc.global.Button.addButtonEvent(this.intoMainGameButton, "intoMainGameButtonEvent", this), _AGenericTemplate6.prototype.onLoad.call(this);
  };

  _proto32.start = function start() {
    _AGenericTemplate6.prototype.start.call(this), this.sceneStyle(), this.loadExternalScript(), this.loadResources(), this.loadAssetBundle(), this.updateProgressTextAnimation();
  };

  _proto32.responseNotification = function responseNotification() {
    var _this18 = this;

    fcc.notificationMgr().getNotification(fcc.type.NotificationType.RESPONSE_RESULT).subscribe(new ResponseResultObserver(function (t) {
      t == fcc.type.ServerEventType.TABLE_INFO && (_this18._isGetTableInfoResponse = !0);
    }, this), !1);
  };

  _createClass(ALoadingTemplate, [{
    key: "isGetTableInfoResponse",
    get: function get() {
      return this._isGetTableInfoResponse;
    }
  }]);

  return ALoadingTemplate;
}(AGenericTemplate);

var ALoadingFrameTemplate = /*#__PURE__*/function (_AGenericTemplate7) {
  _inheritsLoose(ALoadingFrameTemplate, _AGenericTemplate7);

  function ALoadingFrameTemplate() {
    var _this19;

    _this19 = _AGenericTemplate7.apply(this, arguments) || this, _defineProperty(_assertThisInitialized(_this19), "progressValue", void 0), _defineProperty(_assertThisInitialized(_this19), "timeOut", void 0), _defineProperty(_assertThisInitialized(_this19), "addProgressValue", void 0), _defineProperty(_assertThisInitialized(_this19), "timer", void 0);
    return _this19;
  }

  var _proto33 = ALoadingFrameTemplate.prototype;

  _proto33.onLoad = function onLoad() {
    this.loadingInitialize(), _AGenericTemplate7.prototype.onLoad.call(this);
  };

  _proto33.loadingInitialize = function loadingInitialize() {
    this.loadingDialogNode.active = !0, this.loadingDialogNode.opacity = 255, this.timer = null, this.progressText.string = "", this.progressValue = 0, this.timeOut = 50, this.addProgressValue = .005;
  };

  _proto33.runProgress = function runProgress(e) {
    var _this20 = this;

    return this.loadingInitialize(), new Promise(function (t) {
      _this20.checkHasRes(e, t) && _this20.progressTimer("", e, t);
    });
  };

  _proto33.progressTimer = function progressTimer(t, e, i) {
    var _this21 = this;

    this.timer = window.setInterval(function () {
      1 < _this21.progressValue && (_this21.progressValue = 0), 3 < t.length && (t = ""), _this21.progressText.string = t, _this21.progressBar.progress = _this21.progressValue, _this21.progressValue = _this21.progressValue + _this21.progressValue, t += ".", 1 == fcc.loadMgr.secondaryLoadState.get(e) && (1 <= _this21.progressValue && _this21.closeLoadingDiaLog(i), .1 != _this21.addProgressValue && (_this21.addProgressValue = .05));
    }, this.timeOut);
  };

  _proto33.closeLoadingDiaLog = function closeLoadingDiaLog(t) {
    var _this22 = this;

    cc.tween(this.loadingDialogNode).to(.2, {
      opacity: 0
    }).call(function () {
      _this22.loadingDialogNode.active = !1, t();
    });
  };

  _proto33.checkHasRes = function checkHasRes(t, e) {
    return fcc.loadMgr.secondaryLoadState.has(t) ? 1 != fcc.loadMgr.secondaryLoadState.get(t) || (this.loadingDialogNode.active = !1, e(), !1) : (fcc.errorMgr.executeError(fcc.type.ErrorType.UNDEFINED_FW, "".concat(t, "該無該資源")), this.loadingDialogNode.active = !1, e(), !1);
  };

  return ALoadingFrameTemplate;
}(AGenericTemplate);

var ALookAtTemplate = /*#__PURE__*/function (_AGenericTemplate8) {
  _inheritsLoose(ALookAtTemplate, _AGenericTemplate8);

  function ALookAtTemplate() {
    var _this23;

    _this23 = _AGenericTemplate8.apply(this, arguments) || this, _defineProperty(_assertThisInitialized(_this23), "_scrollFocusStateObserver", void 0);
    return _this23;
  }

  var _proto34 = ALookAtTemplate.prototype;

  _proto34.onLoad = function onLoad() {
    this.addNotification(), _AGenericTemplate8.prototype.onLoad.call(this);
  };

  _proto34.addNotification = function addNotification() {
    fcc.notificationMgr().getNotification(fcc.type.NotificationType.SCROLL_FOCUS_STATE).subscribe(this.getScrollFocusStateObserver(), !0);
  };

  _proto34.getScrollFocusStateObserver = function getScrollFocusStateObserver() {
    var _this24 = this;

    return this._scrollFocusStateObserver || (this._scrollFocusStateObserver = new ScrollFocusStateObserver(function (t, e) {
      e ? _this24.allLookAtEffect[t].node.active || _this24.showLookAtEffect(t) : _this24.allLookAtEffect[t].node.active && _this24.removeLookAtEffect(t);
    }, this)), this._scrollFocusStateObserver;
  };

  return ALookAtTemplate;
}(AGenericTemplate);

function __decorate(t, e, i, n) {
  var r,
      o = arguments.length,
      s = o < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, i, n);else for (var a = t.length - 1; 0 <= a; a--) {
    (r = t[a]) && (s = (o < 3 ? r(s) : 3 < o ? r(e, i, s) : r(e, i)) || s);
  }
  return 3 < o && s && Object.defineProperty(e, i, s), s;
}

function __metadata(t, e) {
  if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(t, e);
}

function _createForOfIteratorHelper$9(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$9(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n10 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n10 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n10++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$9(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$9(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$9(t, e) : void 0;
  }
}

function _arrayLikeToArray$9(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var ccclass = cc._decorator.ccclass,
    LINE_CONTAINER = "LINE_CONTAINER",
    PARTICLE_CONTAINER = "PARTICLE_CONTAINER",
    AWinLinTemplate = /*#__PURE__*/function (_AGenericTemplate9) {
  _inheritsLoose(AWinLinTemplate, _AGenericTemplate9);

  function AWinLinTemplate() {
    var _this25;

    _this25 = _AGenericTemplate9.apply(this, arguments) || this, _defineProperty(_assertThisInitialized(_this25), "allGridPosition", void 0), _defineProperty(_assertThisInitialized(_this25), "allWinLine", void 0), _defineProperty(_assertThisInitialized(_this25), "allParticle", void 0), _defineProperty(_assertThisInitialized(_this25), "isStop", void 0), _defineProperty(_assertThisInitialized(_this25), "lineVector", void 0), _defineProperty(_assertThisInitialized(_this25), "particleVector", void 0), _defineProperty(_assertThisInitialized(_this25), "angle", void 0), _defineProperty(_assertThisInitialized(_this25), "runLineSpeed", void 0), _defineProperty(_assertThisInitialized(_this25), "runParticleSpeed", void 0), _defineProperty(_assertThisInitialized(_this25), "runParticleIntervalTime", void 0), _defineProperty(_assertThisInitialized(_this25), "lineContainerIndex", void 0), _defineProperty(_assertThisInitialized(_this25), "particleContainerIndex", void 0), _defineProperty(_assertThisInitialized(_this25), "_lineContainer", void 0), _defineProperty(_assertThisInitialized(_this25), "_particleContainer", void 0);
    return _this25;
  }

  var _proto35 = AWinLinTemplate.prototype;

  _proto35.onCreate = function onCreate() {
    this.lineContainerIndex = cc.macro.MAX_ZINDEX - 1, this.particleContainerIndex = cc.macro.MAX_ZINDEX, this.runLineSpeed = .2, this.runParticleSpeed = .2, this.runParticleIntervalTime = .05, this.angle = -90, this.lineVector = cc.Vec2.UP, this.particleVector = cc.Vec2.RIGHT, this.isStop = !1;
  };

  _proto35.start = function start() {
    _AGenericTemplate9.prototype.start.call(this), this.buildWinLineContainer(), this.buildParticleContainer(), this._lineContainer = this.lineSprite.node.parent.getChildByName(LINE_CONTAINER), this._particleContainer = this.lineSprite.node.parent.getChildByName(PARTICLE_CONTAINER), this.allGridPosition = this.initWinLinPosition(), this.allWinLine = new Array(), this.allParticle = new Map();
  };

  _proto35.restoreNode = function restoreNode(t) {
    if (t) {
      this.allParticle.get(t).active = !1, this.allParticle.get(t).x = this.allWinLine[t].get(0).x;

      var e,
          i = _createForOfIteratorHelper$9(this.allWinLine[t].values());

      try {
        for (i.s(); !(e = i.n()).done;) {
          var n = e.value;
          n.active = !1, n.height = 0;
        }
      } catch (t) {
        i.e(t);
      } finally {
        i.f();
      }
    } else {
      var r,
          o = _createForOfIteratorHelper$9(this._particleContainer.children);

      try {
        for (o.s(); !(r = o.n()).done;) {
          r.value.active = !1;
        }
      } catch (t) {
        o.e(t);
      } finally {
        o.f();
      }

      var s,
          a = _createForOfIteratorHelper$9(this._lineContainer.children);

      try {
        for (a.s(); !(s = a.n()).done;) {
          var u = s.value;
          u.active = !1, u.height = 0;
        }
      } catch (t) {
        a.e(t);
      } finally {
        a.f();
      }
    }
  };

  _proto35.buildWinLineContainer = function buildWinLineContainer() {
    var t = this.lineSprite.node.parent,
        e = new cc.Node();
    e.name = LINE_CONTAINER, t.addChild(e, this.lineContainerIndex, LINE_CONTAINER);
  };

  _proto35.buildParticleContainer = function buildParticleContainer() {
    var t = this.lineSprite.node.parent,
        e = new cc.Node();
    e.name = LINE_CONTAINER, t.addChild(e, this.particleContainerIndex, PARTICLE_CONTAINER);
  };

  _proto35.play = function play(e) {
    var i = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              return t.next = 2, i.runLine(e);

            case 2:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto35.runLine = function runLine(s) {
    var a = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      var e, i, n, r, o;
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              e = s.length, i = 0;

            case 2:
              for (i == e && (i = 0), a.showWinPoint(i), n = s[i], r = 0; r < n.length + 1; r++) {
                o = null !== (o = n[r - 1]) && void 0 !== o ? o : n[0], a.initLinePosition(i, r, o);
              }

              return a.initParticlePosition(i, n[0]), t.next = 9, a.runLineToAsync(i, n);

            case 9:
              return t.next = 11, a.runParticleToAsync(i, n);

            case 11:
              return t.next = 13, a.hideNode(i);

            case 13:
              i++;

            case 14:
              if (!a.isStop) {
                t.next = 2;
                break;
              }

            case 15:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto35.playAll = function playAll(e) {
    var i = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              return i.showWinPoint(), t.next = 3, i.runAllLine(e);

            case 3:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto35.runAllLine = function runAllLine(o) {
    var s = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      var e, i;
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              e = _regeneratorRuntime.mark(function t(e) {
                var i, n, r;
                return _regeneratorRuntime.wrap(function (t) {
                  for (;;) {
                    switch (t.prev = t.next) {
                      case 0:
                        for (i = o[e], n = 0; n < i.length + 1; n++) {
                          r = null !== (r = i[n - 1]) && void 0 !== r ? r : i[0], s.initLinePosition(e, n, r);
                        }

                        if (s.initParticlePosition(e, i[0]), e == o.length - 1) return t.next = 6, s.runLineToAsync(e, i).then();
                        t.next = 10;
                        break;

                      case 6:
                        return t.next = 8, s.runParticleToAsync(e, i);

                      case 8:
                        t.next = 11;
                        break;

                      case 10:
                        s.runLineToAsync(e, i).then(function () {
                          s.runParticleToAsync(e, i);
                        });

                      case 11:
                      case "end":
                        return t.stop();
                    }
                  }
                }, t);
              }), i = 0;

            case 2:
              if (i < o.length) return t.delegateYield(e(i), "t0", 4);
              t.next = 7;
              break;

            case 4:
              i++, t.next = 2;
              break;

            case 7:
              return t.next = 9, s.hideNode();

            case 9:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto35.initLinePosition = function initLinePosition(t, e, i) {
    var n = 0 == e ? this.gridRow[0].x - this.gridRow[0].width : this.allGridPosition[i].keys().next().value,
        i = this.allGridPosition[i].values().next().value;
    this.allWinLine[t].get(e).x = n, this.allWinLine[t].get(e).y = i;
  };

  _proto35.initParticlePosition = function initParticlePosition(t, e) {
    var i = this.gridRow[0].x - this.gridRow[0].width,
        e = this.allGridPosition[e].values().next().value;
    this.allParticle.get(t).x = i, this.allParticle.get(t).y = e;
  };

  _proto35.getPosition = function getPosition(t, e, i) {
    var n,
        r = this.allGridPosition[i].values().next().value;
    return 0 == e ? (n = this.gridRow[0].x - this.gridRow[0].width, cc.v2(n, r)) : e == this.gridRow.length + 1 ? (e = this.gridRow[this.gridRow.length - 1].x + this.gridRow[this.gridRow.length - 1].width, cc.v2(e, r)) : cc.v2(this.allGridPosition[i].keys().next().value, r);
  };

  _proto35.runLineToAsync = function runLineToAsync(e, i) {
    var n = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              return t.abrupt("return", new Promise(function (t) {
                n.lineToGridAnimationLoop(e, i, t);
              }));

            case 1:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto35.lineToGridAnimationLoop = function lineToGridAnimationLoop(t, e, i) {
    var _this26 = this;

    var n = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 0,
        r = null !== (o = e[n - 1]) && void 0 !== o ? o : e[0],
        o = null !== (o = e[n]) && void 0 !== o ? o : e[e.length - 1],
        r = this.getPosition(t, n, r),
        o = this.getPosition(t, n + 1, o);
    this.allWinLine[t].get(n).angle = this.getAngleBetweenTwoPoints(r, o, this.lineVector);
    o = this.getDistanceBetweenTwoPoints(r, o);
    this.allWinLine[t].get(n).active = !0, cc.tween(this.allWinLine[t].get(n)).to(this.runLineSpeed, {
      height: o
    }).call(function () {
      _this26.isStop || n == _this26.gridRow.length ? i() : (_this26.showWinGrid(e[n], t), n++, _this26.lineToGridAnimationLoop(t, e, i, n));
    }).start();
  };

  _proto35.runParticleToAsync = function runParticleToAsync(e, i) {
    var n = this;
    return _asyncToGenerator(_regeneratorRuntime.mark(function t() {
      return _regeneratorRuntime.wrap(function (t) {
        for (;;) {
          switch (t.prev = t.next) {
            case 0:
              return t.abrupt("return", new Promise(function (t) {
                n.particleToGridAnimationLoop(e, i, t);
              }));

            case 1:
            case "end":
              return t.stop();
          }
        }
      }, t);
    }))();
  };

  _proto35.particleToGridAnimationLoop = function particleToGridAnimationLoop(t, e, i) {
    var _this27 = this;

    var n = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 0,
        r = null !== (o = e[n - 1]) && void 0 !== o ? o : e[0],
        o = null !== (o = e[n]) && void 0 !== o ? o : e[e.length - 1],
        r = this.getPosition(t, n, r),
        o = this.getPosition(t, n + 1, o);
    this.allParticle.get(t).angle = this.getAngleBetweenTwoPoints(r, o, this.particleVector), this.allParticle.get(t).active = !0, cc.tween(this.allParticle.get(t)).to(this.runParticleSpeed, {
      x: o.x,
      y: o.y
    }).call(function () {
      _this27.isStop || n == _this27.gridRow.length ? i() : (n++, _this27.particleToGridAnimationLoop(t, e, i, n));
    }).start();
  };

  _proto35.copyWinLineNode = function copyWinLineNode(t) {
    this.copyParticleToContainer(t), this.copyWinLineToContainer(t);
  };

  _proto35.copyParticleToContainer = function copyParticleToContainer(t) {
    for (var e = 0; e < t; e++) {
      var i = cc.instantiate(this.particlePrefab);
      i.active = !1, this._particleContainer.addChild(i, e, "".concat("PARTICLE").concat(e)), this.allParticle.set(e, i);
    }

    return this;
  };

  _proto35.copyWinLineToContainer = function copyWinLineToContainer(t) {
    for (var e = 0; e < t; e++) {
      for (var i = new Map(), n = 0; n < this.gridRow.length + 1; n++) {
        var r = cc.instantiate(this.lineSprite.node);
        r.active = !1, this._lineContainer.addChild(r, e, "".concat("LINE").concat(e, "_").concat(n)), i.set(n, r);
      }

      this.allWinLine.push(i);
    }

    return this;
  };

  _proto35.initWinLinPosition = function initWinLinPosition() {
    var t,
        e = new Array(),
        i = _createForOfIteratorHelper$9(this.gridRow);

    try {
      for (i.s(); !(t = i.n()).done;) {
        for (var n = t.value, r = n.x, o = n.y + this.gridHeight, s = 0; s < this.gridCont; s++) {
          var a = new Map();
          a.set(r, o), e.push(a), o -= this.gridHeight;
        }
      }
    } catch (t) {
      i.e(t);
    } finally {
      i.f();
    }

    return e;
  };

  _proto35.getDistanceBetweenTwoPoints = function getDistanceBetweenTwoPoints(t, e) {
    var i = Math.pow(e.x - t.x, 2),
        t = Math.pow(e.y - t.y, 2);
    return Math.sqrt(i + t) + 1;
  };

  _proto35.getAngleBetweenTwoPoints = function getAngleBetweenTwoPoints(t, e, i) {
    var n = e.x - t.x,
        t = e.y - t.y;
    return cc.v2(n, t).signAngle(i) * (180 / Math.PI) * -1;
  };

  _proto35.clear = function clear() {
    cc.Tween.stopAllByTarget(this._lineContainer), cc.Tween.stopAllByTarget(this._particleContainer), this.allWinLine.length = 0, this.allParticle.clear(), this._lineContainer.destroyAllChildren(), this._particleContainer.destroyAllChildren();
  };

  _createClass(AWinLinTemplate, [{
    key: "particleContainer",
    get: function get() {
      return this._particleContainer;
    }
  }, {
    key: "lineContainer",
    get: function get() {
      return this._lineContainer;
    }
  }]);

  return AWinLinTemplate;
}(AGenericTemplate),
    AWinLinTemplate$1 = AWinLinTemplate = __decorate([ccclass], AWinLinTemplate);

var AMainInitTemplate = /*#__PURE__*/function (_AGenericTemplate10) {
  _inheritsLoose(AMainInitTemplate, _AGenericTemplate10);

  function AMainInitTemplate() {
    return _AGenericTemplate10.apply(this, arguments) || this;
  }

  var _proto36 = AMainInitTemplate.prototype;

  _proto36.onLoad = function onLoad() {
    this.setHistoryDetail(), this.prefabInstantiate(), _AGenericTemplate10.prototype.onLoad.call(this);
  };

  return AMainInitTemplate;
}(AGenericTemplate);

var ASlotTemplate = /*#__PURE__*/function () {
  function ASlotTemplate(t, e) {
    _defineProperty(this, "styleData", void 0), _defineProperty(this, "isSlotImmediateStop", void 0), _defineProperty(this, "isSpeedUp", void 0), _defineProperty(this, "speedRatio", void 0), _defineProperty(this, "stopNowStateObserver", void 0), _defineProperty(this, "speedStateChangeObserver", void 0), _defineProperty(this, "responseResultObserver", void 0), _defineProperty(this, "isResultOK", void 0), this.isSpeedUp = e.isSpeedUp, this.styleData = t, this.speedRatio = this.isSpeedUp ? t.speedUpMultiple : 1, this.isResultOK = !1, this.addNotification();
  }

  var _proto37 = ASlotTemplate.prototype;

  _proto37.addNotification = function addNotification() {
    fcc.notificationMgr().getNotification(fcc.type.NotificationType.STOP_NOW).subscribe(this.getStopNowStateObserver(), !0), fcc.notificationMgr().getNotification(fcc.type.NotificationType.SPEED_CHANGE).subscribe(this.getSpeedStateChangeObserver(), !0), fcc.notificationMgr().getNotification(fcc.type.NotificationType.RESPONSE_RESULT).subscribe(this.getResponseResultObserver(), !0);
  };

  _proto37.getStopNowStateObserver = function getStopNowStateObserver() {
    var _this28 = this;

    return this.isSlotImmediateStop || (this.stopNowStateObserver = new StopNowStateObserver(function () {
      _this28.isSlotImmediateStop = !0;
    }, this)), this.stopNowStateObserver;
  };

  _proto37.getSpeedStateChangeObserver = function getSpeedStateChangeObserver() {
    var _this29 = this;

    return this.speedStateChangeObserver || (this.speedStateChangeObserver = new SpeedStateChangeObserver(function (t) {
      _this29.speedRatio = t ? _this29.styleData.speedUpMultiple : 1;
    }, this)), this.speedStateChangeObserver;
  };

  _proto37.getResponseResultObserver = function getResponseResultObserver() {
    var _this30 = this;

    return this.responseResultObserver || (this.responseResultObserver = new ResponseResultObserver(function (t) {
      t != fcc.type.ServerEventType.BET_RESULT && t != fcc.type.ServerEventType.FREE_SPIN_RESULT || (_this30.isResultOK = !0);
    }, this)), this.responseResultObserver;
  };

  return ASlotTemplate;
}();

function _createForOfIteratorHelper$a(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$a(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n11 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n11 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n11++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$a(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$a(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$a(t, e) : void 0;
  }
}

function _arrayLikeToArray$a(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var NormalSlotTemplate = /*#__PURE__*/function (_ASlotTemplate) {
  _inheritsLoose(NormalSlotTemplate, _ASlotTemplate);

  function NormalSlotTemplate(t, e) {
    var _this31;

    _this31 = _ASlotTemplate.call(this, t, e) || this, _defineProperty(_assertThisInitialized(_this31), "slotTurnCount", void 0), _defineProperty(_assertThisInitialized(_this31), "slotGirdSpeed", void 0), _defineProperty(_assertThisInitialized(_this31), "slotRowGridCount", void 0), _defineProperty(_assertThisInitialized(_this31), "slotGridHeight", void 0), _defineProperty(_assertThisInitialized(_this31), "freeIconCount", void 0), _defineProperty(_assertThisInitialized(_this31), "speedUpMultiple", void 0), _defineProperty(_assertThisInitialized(_this31), "slotColumnToTween", void 0), _defineProperty(_assertThisInitialized(_this31), "gridNodeToMap", void 0), _defineProperty(_assertThisInitialized(_this31), "gridSpriteToMap", void 0), _defineProperty(_assertThisInitialized(_this31), "gridImg", void 0), _defineProperty(_assertThisInitialized(_this31), "sineInEasing", void 0), _defineProperty(_assertThisInitialized(_this31), "sineOutEasing", void 0), _defineProperty(_assertThisInitialized(_this31), "isSlotEnd", void 0), _defineProperty(_assertThisInitialized(_this31), "isRowCheckLookAt", void 0), _defineProperty(_assertThisInitialized(_this31), "rowData", void 0), _defineProperty(_assertThisInitialized(_this31), "resultModel", void 0), _defineProperty(_assertThisInitialized(_this31), "lookAtCount", void 0), _defineProperty(_assertThisInitialized(_this31), "rowTurnCount", void 0), t && (_this31.styleData = t, _this31.slotTurnCount = t.slotTurnCount, _this31.slotGirdSpeed = t.slotGirdSpeed, _this31.slotRowGridCount = t.slotRowGridCount, _this31.slotGridHeight = t.slotGridHeight, _this31.speedUpMultiple = t.speedUpMultiple, _this31.slotColumnToTween = t.slotColumnToTween, _this31.gridNodeToMap = t.gridNodeToMap, _this31.gridSpriteToMap = t.gridSpriteToMap, _this31.gridImg = t.gridImg, _this31.sineInEasing = t.sineInEasing, _this31.sineOutEasing = t.sineOutEasing, _this31.resultModel = t.resultModule, _this31.rowData = new Array(), _this31.lookAtCount = t.lookAtCount, _this31.isSlotEnd = [], _this31.rowData.push(_this31.slotRowGridCount, _this31.getCalculateSlotHeight()), _this31.rowTurnCount = new Array(), _this31.isRowCheckLookAt = new Map(), _this31.initializeState());
    return _this31;
  }

  var _proto38 = NormalSlotTemplate.prototype;

  _proto38.getCalculateSlotHeight = function getCalculateSlotHeight() {
    return this.slotRowGridCount * this.slotGridHeight;
  };

  _proto38.sineInSlot = function sineInSlot() {
    var _this32 = this;

    var s = Math.floor(this.styleData.slotGridHeight / 2);
    return new Promise(function (t) {
      var e,
          i = 0,
          n = _this32.slotGirdSpeed,
          r = _createForOfIteratorHelper$a(_this32.slotColumnToTween);

      try {
        for (r.s(); !(e = r.n()).done;) {
          var o = e.value;
          cc.tween(o).to(1.5 * n, {
            y: o.y + s
          }, {
            easing: _this32.sineInEasing
          }).by(n, {
            y: -s
          }).call(function () {
            ++i === _this32.slotColumnToTween.length && t();
          }).start();
        }
      } catch (t) {
        r.e(t);
      } finally {
        r.f();
      }
    });
  };

  _proto38.runSlotAnimation = function runSlotAnimation() {
    var _this33 = this;

    return new Promise(function (t) {
      var e = _this33.slotColumnToTween.length;
      fcc.audioMgr.effectPlay("SlotTurn");

      for (var i = 0; i < e; i++) {
        if (i == e - 1) return void _this33.executeSlotAnimation(i, t);

        _this33.executeSlotAnimation(i);
      }
    });
  };

  _proto38.executeSlotAnimation = function executeSlotAnimation(t, e) {
    var _this34 = this;

    var i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0,
        n = this.slotGirdSpeed * this.slotRowGridCount / this.speedRatio,
        r = this.slotColumnToTween[t];
    cc.tween(r).to(n, {
      y: r.y - this.rowData[1]
    }).call(function () {
      (0 != t && _this34.checkLookAt(t) && _this34.isSlotEnd[t - 1] && !_this34.isSpeedUp || 0 == t && _this34.checkLookAt(t) && !_this34.isSpeedUp) && _this34.notifyLookAtEvent(!0, t), _this34.updateGridPositionAndRandomImg(_this34.gridNodeToMap.get(t), t), _this34.isResultOK ? _this34.isCanStop(t, e) || (i++, 0 == t && i == _this34.getSlotTurnCount(t) ? (1 == _this34.resultModel.LookAt[t] && (_this34.isSpeedUp || _this34.notifyLookAtEvent(!1, t)), _this34.showAnswer(t), _this34.isSlotEnd[t] = !0) : 0 != t && _this34.isSlotEnd[t - 1] && i == _this34.getSlotTurnCount(t) ? (_this34.showAnswer(t, e), _this34.isSlotEnd[t] = !0, _this34.checkLookAt(t) && (_this34.isSpeedUp || _this34.notifyLookAtEvent(!1, t))) : _this34.executeSlotAnimation(t, e, i)) : _this34.executeSlotAnimation(t, e, i);
    }).start();
  };

  _proto38.getSlotTurnCount = function getSlotTurnCount(t) {
    var e = this.isSpeedUp ? this.slotTurnCount : this.checkLookAt(t) ? ((e = 0) != t && (e = this.rowTurnCount[t - 1]), this.lookAtCount + e) : this.slotTurnCount + t;
    return this.rowTurnCount[t] || (this.rowTurnCount[t] = e), e;
  };

  _proto38.notifyLookAtEvent = function notifyLookAtEvent(t, e) {
    fcc.notificationMgr().getNotification(fcc.type.NotificationType.SCROLL_FOCUS_STATE).notify(e, t);
  };

  _proto38.isCanStop = function isCanStop(t, e) {
    return !!this.isSlotImmediateStop && (t == this.slotColumnToTween.length - 1 ? this.showAnswer(t, e) : this.showAnswer(t), this.isSlotEnd[t] = !0, this.checkLookAt(t) && this.notifyLookAtEvent(!1, t), !0);
  };

  _proto38.updateGridPositionAndRandomImg = function updateGridPositionAndRandomImg(t, e) {
    for (var i, n = t.length - 1, r = 0; r < this.rowData[0]; r++) {
      i = this.gridSpriteToMap.get(e)[n], this.gridSpriteToMap.get(e).unshift(i), this.gridSpriteToMap.get(e).pop(), i = Math.floor(Math.random() * this.gridImg.size), this.gridSpriteToMap.get(e)[0].spriteFrame = this.gridImg.get(String(i)), t[n].y = t[0].y + this.slotGridHeight, t.unshift(t[n]), t.pop();
    }
  };

  _proto38.showAnswer = function showAnswer(t, e) {
    var _this35 = this;

    this.updateGridAnswer(t);
    var i = this.slotGirdSpeed * this.rowData[0] / this.speedRatio,
        n = this.slotColumnToTween[t];
    cc.tween(n).to(i, {
      y: n.y - this.rowData[1]
    }).call(function () {
      _this35.updateGridPositionAndRandomImg(_this35.gridNodeToMap.get(t), t), _this35.sineOutAnimation(t, e);
    }).start();
  };

  _proto38.checkLookAt = function checkLookAt(t) {
    var e = !1;
    return this.isRowCheckLookAt.get(t) || (this.isRowCheckLookAt.set(t, !0), e = !!this.resultModel.LookAt[t]), e;
  };

  _proto38.sineOutAnimation = function sineOutAnimation(t, e) {
    var _this36 = this;

    (this.isSpeedUp || this.isSlotImmediateStop) && t != this.slotColumnToTween.length - 1 || fcc.audioMgr.effectPlay("SlotStop"), t === this.slotColumnToTween.length - 1 && fcc.audioMgr.effectStop("SlotTurn");
    var i = Math.floor(this.styleData.slotGridHeight / 2),
        n = this.slotColumnToTween[t],
        r = !1;
    (this.isSlotImmediateStop || this.isSpeedUp) && (r = !0), fcc.notificationMgr().getNotification(fcc.type.NotificationType.SLOT_ROW_END).notify(t, r);
    r = this.slotGirdSpeed;
    cc.tween(n).to(r, {
      y: n.y - i
    }).by(6 * r, {
      y: +i
    }, {
      easing: this.sineOutEasing
    }).call(function () {
      t === _this36.slotColumnToTween.length - 1 && e();
    }).start();
  };

  _proto38.updateGridAnswer = function updateGridAnswer(t) {
    for (var e = t * this.slotRowGridCount, i = e + this.slotRowGridCount, n = 0; e < i; e++) {
      var r = String(this.resultModel.Grid[e]);
      this.gridSpriteToMap.get(t)[n].spriteFrame = this.gridImg.get(r), n++;
    }
  };

  _proto38.initializeState = function initializeState() {
    if (this.isSlotImmediateStop = !1, this.isSpeedUp = 1 < this.speedRatio, this.freeIconCount = 0, this.isResultOK = !1, this.rowTurnCount.length = 0, this.isRowCheckLookAt.clear(), 0 == this.isSlotEnd.length) for (var t = 0; t < this.slotColumnToTween.length; t++) {
      this.isSlotEnd.push(!1);
    } else for (var e = 0; e < this.slotColumnToTween.length; e++) {
      this.isSlotEnd[e] = !1;
    }
  };

  return NormalSlotTemplate;
}(ASlotTemplate);

function _createForOfIteratorHelper$b(t, e) {
  var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

  if (!i) {
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$b(t)) || e && t && "number" == typeof t.length) {
      i && (t = i);

      var _n12 = 0,
          e = function e() {};

      return {
        s: e,
        n: function n() {
          return _n12 >= t.length ? {
            done: !0
          } : {
            done: !1,
            value: t[_n12++]
          };
        },
        e: function e(t) {
          throw t;
        },
        f: e
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var r,
      o = !0,
      s = !1;
  return {
    s: function s() {
      i = i.call(t);
    },
    n: function n() {
      var t = i.next();
      return o = t.done, t;
    },
    e: function e(t) {
      s = !0, r = t;
    },
    f: function f() {
      try {
        o || null == i["return"] || i["return"]();
      } finally {
        if (s) throw r;
      }
    }
  };
}

function _unsupportedIterableToArray$b(t, e) {
  if (t) {
    if ("string" == typeof t) return _arrayLikeToArray$b(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray$b(t, e) : void 0;
  }
}

function _arrayLikeToArray$b(t, e) {
  (null == e || e > t.length) && (e = t.length);

  for (var i = 0, n = new Array(e); i < e; i++) {
    n[i] = t[i];
  }

  return n;
}

var NormalSlotSpecialTemplate = /*#__PURE__*/function (_ASlotTemplate2) {
  _inheritsLoose(NormalSlotSpecialTemplate, _ASlotTemplate2);

  function NormalSlotSpecialTemplate(t, e) {
    var _this37;

    _this37 = _ASlotTemplate2.call(this, t, e) || this, _defineProperty(_assertThisInitialized(_this37), "slotTurnCount", void 0), _defineProperty(_assertThisInitialized(_this37), "slotRowTime", void 0), _defineProperty(_assertThisInitialized(_this37), "slotGirdSpeed", void 0), _defineProperty(_assertThisInitialized(_this37), "slotRowGridCount", void 0), _defineProperty(_assertThisInitialized(_this37), "slotGridHeight", void 0), _defineProperty(_assertThisInitialized(_this37), "speedUpMultiple", void 0), _defineProperty(_assertThisInitialized(_this37), "slotColumnToTween", void 0), _defineProperty(_assertThisInitialized(_this37), "lookAtTime", void 0), _defineProperty(_assertThisInitialized(_this37), "gridNodeToMap", void 0), _defineProperty(_assertThisInitialized(_this37), "gridSpriteToMap", void 0), _defineProperty(_assertThisInitialized(_this37), "gridImg", void 0), _defineProperty(_assertThisInitialized(_this37), "sineInEasing", void 0), _defineProperty(_assertThisInitialized(_this37), "sineOutEasing", void 0), _defineProperty(_assertThisInitialized(_this37), "isSlotEnd", void 0), _defineProperty(_assertThisInitialized(_this37), "isTimeEndListener", void 0), _defineProperty(_assertThisInitialized(_this37), "isRowCheckLookAt", void 0), _defineProperty(_assertThisInitialized(_this37), "resultModel", void 0), _defineProperty(_assertThisInitialized(_this37), "nowTimer", void 0), t && (_this37.styleData = t, _this37.slotRowTime = t.slotRowTime, _this37.slotTurnCount = t.slotTurnCount, _this37.slotGirdSpeed = t.slotGirdSpeed, _this37.slotRowGridCount = t.slotRowGridCount, _this37.slotGridHeight = t.slotGridHeight, _this37.speedUpMultiple = t.speedUpMultiple, _this37.slotColumnToTween = t.slotColumnToTween, _this37.gridNodeToMap = t.gridNodeToMap, _this37.gridSpriteToMap = t.gridSpriteToMap, _this37.gridImg = t.gridImg, _this37.sineInEasing = t.sineInEasing, _this37.sineOutEasing = t.sineOutEasing, _this37.resultModel = t.resultModule, _this37.lookAtTime = t.lookAtTime, _this37.isSlotEnd = new Array(), _this37.isTimeEndListener = new Array(), _this37.isRowCheckLookAt = new Map(), _this37.initializeState());
    return _this37;
  }

  var _proto39 = NormalSlotSpecialTemplate.prototype;

  _proto39.sineInSlot = function sineInSlot() {
    var _this38 = this;

    var s = Math.floor(this.styleData.slotGridHeight / 2);
    return new Promise(function (t) {
      var e,
          i = 0,
          n = _this38.slotGirdSpeed,
          r = _createForOfIteratorHelper$b(_this38.slotColumnToTween);

      try {
        for (r.s(); !(e = r.n()).done;) {
          var o = e.value;
          cc.tween(o).to(1.5 * n, {
            y: o.y + s
          }, {
            easing: _this38.sineInEasing
          }).by(n, {
            y: -s
          }).call(function () {
            ++i === _this38.slotColumnToTween.length && t();
          }).start();
        }
      } catch (t) {
        r.e(t);
      } finally {
        r.f();
      }
    });
  };

  _proto39.runSlotAnimation = function runSlotAnimation() {
    var _this39 = this;

    return new Promise(function (t) {
      for (var e = _this39.slotColumnToTween.length, i = 0; i < e; i++) {
        if (i == e - 1) return void _this39.executeSlotAnimation(i, t);

        _this39.executeSlotAnimation(i);
      }
    });
  };

  _proto39.executeSlotAnimation = function executeSlotAnimation(t, e) {
    var _this40 = this;

    var i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0,
        n = this.slotGirdSpeed / this.speedRatio,
        r = this.slotColumnToTween[t],
        o = this.slotTurnCount * this.slotRowGridCount;
    cc.tween(r).to(n, {
      y: r.y - this.slotGridHeight
    }).call(function () {
      0 != t && _this40.isSlotEnd[t - 1] && !_this40.isSpeedUp ? _this40.checkLookAt(t) && _this40.notifyLookAtEvent(!0, t) : 0 == t && _this40.checkLookAt(t) && !_this40.isSpeedUp && _this40.notifyLookAtEvent(!0, t), _this40.updateOnlyGridPositionAndRandomImg(_this40.gridNodeToMap.get(t), t), _this40.isResultOK ? _this40.checkImmediateStopState(t, e) || (i < o && i++, 0 == t && i == o ? (1 == _this40.resultModel.LookAt[t] && (_this40.isSpeedUp || _this40.notifyLookAtEvent(!1, t)), _this40.isSlotEnd[t] = !0, _this40.isTimeEndListener[t] = !0, _this40.showAnswerAnimation(t), _this40.isSpeedUp || _this40.startRowTimeListener(t + 1)) : 0 != t && i == o && _this40.isSpeedUp ? (_this40.isSlotEnd[t] = !0, _this40.showAnswerAnimation(t, e)) : 0 != t && _this40.isSlotEnd[t] && !_this40.isSpeedUp ? (t != _this40.slotColumnToTween.length - 1 && _this40.startRowTimeListener(t + 1), 1 == _this40.resultModel.LookAt[t] && (_this40.isSpeedUp || _this40.notifyLookAtEvent(!1, t)), _this40.showAnswerAnimation(t, e)) : _this40.executeSlotAnimation(t, e, i)) : _this40.executeSlotAnimation(t, e, i);
    }).start();
  };

  _proto39.startRowTimeListener = function startRowTimeListener(t) {
    var _this41 = this;

    var e;
    this.isTimeEndListener[t] || (this.isTimeEndListener[t] = !0, e = this.resultModel.LookAt[t] ? this.lookAtTime : this.slotRowTime, this.nowTimer = window.setTimeout(function () {
      _this41.isSlotEnd[t] = !0;
    }, e));
  };

  _proto39.updateOnlyGridPositionAndRandomImg = function updateOnlyGridPositionAndRandomImg(t, e) {
    var i = t.length - 1,
        n = this.gridSpriteToMap.get(e)[i];
    this.gridSpriteToMap.get(e).unshift(n), this.gridSpriteToMap.get(e).pop(), n = Math.floor(Math.random() * this.gridImg.size), this.gridSpriteToMap.get(e)[0].spriteFrame = this.gridImg.get(String(n)), t[i].y = t[0].y + this.slotGridHeight, t.unshift(t[i]), t.pop();
  };

  _proto39.notifyLookAtEvent = function notifyLookAtEvent(t, e) {
    fcc.notificationMgr().getNotification(fcc.type.NotificationType.SCROLL_FOCUS_STATE).notify(e, t);
  };

  _proto39.checkImmediateStopState = function checkImmediateStopState(t, e) {
    return !!this.isSlotImmediateStop && (this.nowTimer && (window.clearTimeout(this.nowTimer), this.nowTimer = null), t == this.slotColumnToTween.length - 1 ? this.showAnswerAnimation(t, e) : this.showAnswerAnimation(t), this.isSlotEnd[t] = !0, 1 == this.resultModel.LookAt[t] && this.notifyLookAtEvent(!1, t), !0);
  };

  _proto39.showAnswerAnimation = function showAnswerAnimation(e, i) {
    var _this42 = this;

    this.updateGridAnswer(e);
    var t = this.slotGirdSpeed * this.slotRowGridCount / this.speedRatio,
        n = this.slotColumnToTween[e],
        r = this.slotRowGridCount * this.slotGridHeight;
    cc.tween(n).to(t, {
      y: n.y - r
    }).call(function () {
      for (var t = 0; t < _this42.slotRowGridCount; t++) {
        _this42.updateOnlyGridPositionAndRandomImg(_this42.gridNodeToMap.get(e), e);
      }

      _this42.sineOutAnimation(e, i);
    }).start();
  };

  _proto39.checkLookAt = function checkLookAt(t) {
    var e = !1;
    return this.isRowCheckLookAt.get(t) || (this.isRowCheckLookAt.set(t, !0), e = !!this.resultModel.LookAt[t]), e;
  };

  _proto39.sineOutAnimation = function sineOutAnimation(t, e) {
    var _this43 = this;

    (this.isSpeedUp || this.isSlotImmediateStop) && t != this.slotColumnToTween.length - 1 || fcc.audioMgr.effectPlay("SlotStop"), t === this.slotColumnToTween.length - 1 && fcc.audioMgr.effectStop("SlotTurn");
    var i = Math.floor(this.styleData.slotGridHeight / 2),
        n = this.slotColumnToTween[t],
        r = !1;
    (this.isSlotImmediateStop || this.isSpeedUp) && (r = !0), fcc.notificationMgr().getNotification(fcc.type.NotificationType.SLOT_ROW_END).notify(t, r);
    r = this.slotGirdSpeed;
    cc.tween(n).to(r, {
      y: n.y - i
    }).by(6 * r, {
      y: +i
    }, {
      easing: this.sineOutEasing
    }).call(function () {
      t === _this43.slotColumnToTween.length - 1 && e();
    }).start();
  };

  _proto39.updateGridAnswer = function updateGridAnswer(t) {
    for (var e = t * this.slotRowGridCount, i = e + this.slotRowGridCount, n = 0; e < i; e++) {
      var r = String(this.resultModel.Grid[e]);
      this.gridSpriteToMap.get(t)[n].spriteFrame = this.gridImg.get(r), n++;
    }
  };

  _proto39.initializeState = function initializeState() {
    if (this.isSlotImmediateStop = !1, this.isSpeedUp = 1 < this.speedRatio, this.isResultOK = !1, this.nowTimer = null, this.isRowCheckLookAt.clear(), 0 == this.isTimeEndListener.length) for (var t = 0; t < this.slotColumnToTween.length; t++) {
      this.isTimeEndListener.push(!1);
    } else for (var e = 0; e < this.slotColumnToTween.length; e++) {
      this.isTimeEndListener[e] = !1;
    }
    if (0 == this.isSlotEnd.length) for (var i = 0; i < this.slotColumnToTween.length; i++) {
      this.isSlotEnd.push(!1);
    } else for (var n = 0; n < this.slotColumnToTween.length; n++) {
      this.isSlotEnd[n] = !1;
    }
  };

  return NormalSlotSpecialTemplate;
}(ASlotTemplate);

__decorate([fcc.Effect("SlotTurn"), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], NormalSlotSpecialTemplate.prototype, "runSlotAnimation", null);

var SlotBurredImgTemplate = /*#__PURE__*/function (_NormalSlotTemplate) {
  _inheritsLoose(SlotBurredImgTemplate, _NormalSlotTemplate);

  function SlotBurredImgTemplate(t, e) {
    var _this44;

    _this44 = _NormalSlotTemplate.call(this, t, e) || this, _defineProperty(_assertThisInitialized(_this44), "gridBurredImg", void 0), _this44.gridBurredImg = t.gridBurredImg;
    return _this44;
  }

  var _proto40 = SlotBurredImgTemplate.prototype;

  _proto40.updateGridPositionAndRandomImg = function updateGridPositionAndRandomImg(t, e) {
    for (var i, n = t.length - 1, r = 0; r < this.rowData[0]; r++) {
      i = this.gridSpriteToMap.get(e)[n], this.gridSpriteToMap.get(e).unshift(i), this.gridSpriteToMap.get(e).pop(), i = Math.floor(Math.random() * this.gridBurredImg.size), this.gridSpriteToMap.get(e)[0].spriteFrame = this.gridBurredImg.get(String(i)), t[n].y = t[0].y + this.slotGridHeight, t.unshift(t[n]), t.pop();
    }
  };

  return SlotBurredImgTemplate;
}(NormalSlotTemplate);

var SlotBurredImgSpecialTemplate = /*#__PURE__*/function (_NormalSlotSpecialTem) {
  _inheritsLoose(SlotBurredImgSpecialTemplate, _NormalSlotSpecialTem);

  function SlotBurredImgSpecialTemplate(t, e) {
    var _this45;

    _this45 = _NormalSlotSpecialTem.call(this, t, e) || this, _defineProperty(_assertThisInitialized(_this45), "gridBurredImg", void 0), _this45.gridBurredImg = t.gridBurredImg;
    return _this45;
  }

  var _proto41 = SlotBurredImgSpecialTemplate.prototype;

  _proto41.updateOnlyGridPositionAndRandomImg = function updateOnlyGridPositionAndRandomImg(t, e) {
    var i = t.length - 1,
        n = this.gridSpriteToMap.get(e)[i];
    this.gridSpriteToMap.get(e).unshift(n), this.gridSpriteToMap.get(e).pop(), n = Math.floor(Math.random() * this.gridImg.size), this.gridSpriteToMap.get(e)[0].spriteFrame = this.gridBurredImg.get(String(n)), t[i].y = t[0].y + this.slotGridHeight, t.unshift(t[i]), t.pop();
  };

  return SlotBurredImgSpecialTemplate;
}(NormalSlotSpecialTemplate);

var ASlotInitializeTemplate = /*#__PURE__*/function (_AGenericTemplate11) {
  _inheritsLoose(ASlotInitializeTemplate, _AGenericTemplate11);

  function ASlotInitializeTemplate() {
    return _AGenericTemplate11.apply(this, arguments) || this;
  }

  var _proto42 = ASlotInitializeTemplate.prototype;

  _proto42.onLoad = function onLoad() {
    _AGenericTemplate11.prototype.onLoad.call(this);
  };

  _proto42.start = function start() {
    _AGenericTemplate11.prototype.start.call(this), this.slotStyleSetting();
  };

  return ASlotInitializeTemplate;
}(AGenericTemplate);

var ExtendHasLineFreeResult = /*#__PURE__*/function () {
  function ExtendHasLineFreeResult() {
    _defineProperty(this, "_State", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_StickySymbol", void 0), _defineProperty(this, "_StickyChange", void 0), _defineProperty(this, "_LineWin", void 0), _defineProperty(this, "_LineGrid", void 0), _defineProperty(this, "_TotalWinPoint", void 0), _defineProperty(this, "_UserPointAfter", void 0), _defineProperty(this, "_GameState", void 0), _defineProperty(this, "_Count", void 0), _defineProperty(this, "_FreeSpinWin", void 0), _defineProperty(this, "_LookAt", void 0), _defineProperty(this, "_FreeToFree", void 0), _defineProperty(this, "_BaseLevelWin", void 0), _defineProperty(this, "_FreeLevelWin", void 0), this._State = 0, this._Grid = new Array(), this._StickySymbol = 0, this._StickyChange = new Array(), this._LineWin = new Array(), this._LineGrid = new Array(), this._TotalWinPoint = 0, this._UserPointAfter = 0, this._GameState = 0, this._Count = 0, this._FreeSpinWin = 0, this._LookAt = new Array(), this._FreeToFree = 0, this._BaseLevelWin = 0, this._FreeLevelWin = 0;
  }

  _createClass(ExtendHasLineFreeResult, [{
    key: "State",
    get: function get() {
      return this._State;
    },
    set: function set(t) {
      this._State = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "StickySymbol",
    get: function get() {
      return this._StickySymbol;
    },
    set: function set(t) {
      this._StickySymbol = t;
    }
  }, {
    key: "StickyChange",
    get: function get() {
      return this._StickyChange;
    },
    set: function set(t) {
      this._StickyChange = t;
    }
  }, {
    key: "LineWin",
    get: function get() {
      return this._LineWin;
    },
    set: function set(t) {
      this._LineWin = t;
    }
  }, {
    key: "LineGrid",
    get: function get() {
      return this._LineGrid;
    },
    set: function set(t) {
      this._LineGrid = t;
    }
  }, {
    key: "TotalWinPoint",
    get: function get() {
      return this._TotalWinPoint;
    },
    set: function set(t) {
      this._TotalWinPoint = t;
    }
  }, {
    key: "UserPointAfter",
    get: function get() {
      return this._UserPointAfter;
    },
    set: function set(t) {
      this._UserPointAfter = t;
    }
  }, {
    key: "GameState",
    get: function get() {
      return this._GameState;
    },
    set: function set(t) {
      this._GameState = t;
    }
  }, {
    key: "Count",
    get: function get() {
      return this._Count;
    },
    set: function set(t) {
      this._Count = t;
    }
  }, {
    key: "FreeSpinWin",
    get: function get() {
      return this._FreeSpinWin;
    },
    set: function set(t) {
      this._FreeSpinWin = t;
    }
  }, {
    key: "LookAt",
    get: function get() {
      return this._LookAt;
    },
    set: function set(t) {
      this._LookAt = t;
    }
  }, {
    key: "FreeToFree",
    get: function get() {
      return this._FreeToFree;
    },
    set: function set(t) {
      this._FreeToFree = t;
    }
  }, {
    key: "BaseLevelWin",
    get: function get() {
      return this._BaseLevelWin;
    },
    set: function set(t) {
      this._BaseLevelWin = t;
    }
  }, {
    key: "FreeLevelWin",
    get: function get() {
      return this._FreeLevelWin;
    },
    set: function set(t) {
      this._FreeLevelWin = t;
    }
  }]);

  return ExtendHasLineFreeResult;
}();

var HasLineFreeResult = /*#__PURE__*/function () {
  function HasLineFreeResult() {
    _defineProperty(this, "_State", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_ChangeState", void 0), _defineProperty(this, "_Change", void 0), _defineProperty(this, "_LineWin", void 0), _defineProperty(this, "_LineGrid", void 0), _defineProperty(this, "_TotalWinPoint", void 0), _defineProperty(this, "_UserPointAfter", void 0), _defineProperty(this, "_GameState", void 0), _defineProperty(this, "_Count", void 0), _defineProperty(this, "_FreeSpinWin", void 0), _defineProperty(this, "_LookAt", void 0), _defineProperty(this, "_LevelWin", void 0), _defineProperty(this, "_FreeToFree", void 0), _defineProperty(this, "_BaseLevelWin", void 0), _defineProperty(this, "_FreeLevelWin", void 0), this._State = 0, this._Grid = new Array(), this._ChangeState = 0, this._Change = new Array(), this._LineWin = new Array(), this._LineGrid = new Array(), this._TotalWinPoint = 0, this._UserPointAfter = 0, this._GameState = 0, this._Count = 0, this._FreeSpinWin = 0, this._LookAt = new Array(), this._LevelWin = 0, this._FreeToFree = 0, this._BaseLevelWin = 0, this._FreeLevelWin = 0;
  }

  _createClass(HasLineFreeResult, [{
    key: "State",
    get: function get() {
      return this._State;
    },
    set: function set(t) {
      this._State = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "ChangeState",
    get: function get() {
      return this._ChangeState;
    },
    set: function set(t) {
      this._ChangeState = t;
    }
  }, {
    key: "Change",
    get: function get() {
      return this._Change;
    },
    set: function set(t) {
      this._Change = t;
    }
  }, {
    key: "LineWin",
    get: function get() {
      return this._LineWin;
    },
    set: function set(t) {
      this._LineWin = t;
    }
  }, {
    key: "LineGrid",
    get: function get() {
      return this._LineGrid;
    },
    set: function set(t) {
      this._LineGrid = t;
    }
  }, {
    key: "TotalWinPoint",
    get: function get() {
      return this._TotalWinPoint;
    },
    set: function set(t) {
      this._TotalWinPoint = t;
    }
  }, {
    key: "UserPointAfter",
    get: function get() {
      return this._UserPointAfter;
    },
    set: function set(t) {
      this._UserPointAfter = t;
    }
  }, {
    key: "GameState",
    get: function get() {
      return this._GameState;
    },
    set: function set(t) {
      this._GameState = t;
    }
  }, {
    key: "Count",
    get: function get() {
      return this._Count;
    },
    set: function set(t) {
      this._Count = t;
    }
  }, {
    key: "FreeSpinWin",
    get: function get() {
      return this._FreeSpinWin;
    },
    set: function set(t) {
      this._FreeSpinWin = t;
    }
  }, {
    key: "LookAt",
    get: function get() {
      return this._LookAt;
    },
    set: function set(t) {
      this._LookAt = t;
    }
  }, {
    key: "LevelWin",
    get: function get() {
      return this._LevelWin;
    },
    set: function set(t) {
      this._LevelWin = t;
    }
  }, {
    key: "FreeToFree",
    get: function get() {
      return this._FreeToFree;
    },
    set: function set(t) {
      this._FreeToFree = t;
    }
  }, {
    key: "BaseLevelWin",
    get: function get() {
      return this._BaseLevelWin;
    },
    set: function set(t) {
      this._BaseLevelWin = t;
    }
  }, {
    key: "FreeLevelWin",
    get: function get() {
      return this._FreeLevelWin;
    },
    set: function set(t) {
      this._FreeLevelWin = t;
    }
  }]);

  return HasLineFreeResult;
}();

var NoLineFreeResult = /*#__PURE__*/function () {
  function NoLineFreeResult() {
    _defineProperty(this, "_State", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_ChangeState", void 0), _defineProperty(this, "_Change", void 0), _defineProperty(this, "_GridWin", void 0), _defineProperty(this, "_TotalWinPoint", void 0), _defineProperty(this, "_UserPointAfter", void 0), _defineProperty(this, "_GameState", void 0), _defineProperty(this, "_Count", void 0), _defineProperty(this, "_FreeSpinWin", void 0), _defineProperty(this, "_LookAt", void 0), _defineProperty(this, "_LevelWin", void 0), _defineProperty(this, "_FreeToFree", void 0), _defineProperty(this, "_BaseLevelWin", void 0), _defineProperty(this, "_FreeLevelWin", void 0), this._State = 0, this._Grid = new Array(), this._ChangeState = 0, this._Change = new Array(), this._GridWin = new Array(), this._TotalWinPoint = 0, this._UserPointAfter = 0, this._GameState = 0, this._Count = 0, this._FreeSpinWin = 0, this._LookAt = new Array(), this._LevelWin = 0, this._FreeToFree = 0, this._BaseLevelWin = 0, this._FreeLevelWin = 0;
  }

  _createClass(NoLineFreeResult, [{
    key: "State",
    get: function get() {
      return this._State;
    },
    set: function set(t) {
      this._State = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "ChangeState",
    get: function get() {
      return this._ChangeState;
    },
    set: function set(t) {
      this._ChangeState = t;
    }
  }, {
    key: "Change",
    get: function get() {
      return this._Change;
    },
    set: function set(t) {
      this._Change = t;
    }
  }, {
    key: "GridWin",
    get: function get() {
      return this._GridWin;
    },
    set: function set(t) {
      this._GridWin = t;
    }
  }, {
    key: "TotalWinPoint",
    get: function get() {
      return this._TotalWinPoint;
    },
    set: function set(t) {
      this._TotalWinPoint = t;
    }
  }, {
    key: "UserPointAfter",
    get: function get() {
      return this._UserPointAfter;
    },
    set: function set(t) {
      this._UserPointAfter = t;
    }
  }, {
    key: "GameState",
    get: function get() {
      return this._GameState;
    },
    set: function set(t) {
      this._GameState = t;
    }
  }, {
    key: "Count",
    get: function get() {
      return this._Count;
    },
    set: function set(t) {
      this._Count = t;
    }
  }, {
    key: "FreeSpinWin",
    get: function get() {
      return this._FreeSpinWin;
    },
    set: function set(t) {
      this._FreeSpinWin = t;
    }
  }, {
    key: "LookAt",
    get: function get() {
      return this._LookAt;
    },
    set: function set(t) {
      this._LookAt = t;
    }
  }, {
    key: "LevelWin",
    get: function get() {
      return this._LevelWin;
    },
    set: function set(t) {
      this._LevelWin = t;
    }
  }, {
    key: "FreeToFree",
    get: function get() {
      return this._FreeToFree;
    },
    set: function set(t) {
      this._FreeToFree = t;
    }
  }, {
    key: "BaseLevelWin",
    get: function get() {
      return this._BaseLevelWin;
    },
    set: function set(t) {
      this._BaseLevelWin = t;
    }
  }, {
    key: "FreeLevelWin",
    get: function get() {
      return this._FreeLevelWin;
    },
    set: function set(t) {
      this._FreeLevelWin = t;
    }
  }]);

  return NoLineFreeResult;
}();

var ExtendHasLineResult = /*#__PURE__*/function () {
  function ExtendHasLineResult() {
    _defineProperty(this, "_State", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_SecretState", void 0), _defineProperty(this, "_SecretChange", void 0), _defineProperty(this, "_SecretSymbol", void 0), _defineProperty(this, "_LineWin", void 0), _defineProperty(this, "_LineGrid", void 0), _defineProperty(this, "_TotalWinPoint", void 0), _defineProperty(this, "_UserPointAfter", void 0), _defineProperty(this, "_GameState", void 0), _defineProperty(this, "_FreeSpinCount", void 0), _defineProperty(this, "_LookAt", void 0), _defineProperty(this, "_UserPointBefore", void 0), _defineProperty(this, "_BaseLevelWin", void 0), _defineProperty(this, "_BonusEventCount", void 0), this._State = 0, this._Grid = new Array(), this._SecretState = 0, this._SecretChange = new Array(), this._SecretSymbol = 0, this._LineWin = new Array(), this._LineGrid = new Array(), this._TotalWinPoint = 0, this._UserPointAfter = 0, this._GameState = 0, this._FreeSpinCount = 0, this._LookAt = new Array(), this._UserPointBefore = 0, this._BaseLevelWin = 0, this._BonusEventCount = 0;
  }

  _createClass(ExtendHasLineResult, [{
    key: "State",
    get: function get() {
      return this._State;
    },
    set: function set(t) {
      this._State = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "SecretState",
    get: function get() {
      return this._SecretState;
    },
    set: function set(t) {
      this._SecretState = t;
    }
  }, {
    key: "SecretChange",
    get: function get() {
      return this._SecretChange;
    },
    set: function set(t) {
      this._SecretChange = t;
    }
  }, {
    key: "SecretSymbol",
    get: function get() {
      return this._SecretSymbol;
    },
    set: function set(t) {
      this._SecretSymbol = t;
    }
  }, {
    key: "LineWin",
    get: function get() {
      return this._LineWin;
    },
    set: function set(t) {
      this._LineWin = t;
    }
  }, {
    key: "LineGrid",
    get: function get() {
      return this._LineGrid;
    },
    set: function set(t) {
      this._LineGrid = t;
    }
  }, {
    key: "TotalWinPoint",
    get: function get() {
      return this._TotalWinPoint;
    },
    set: function set(t) {
      this._TotalWinPoint = t;
    }
  }, {
    key: "UserPointAfter",
    get: function get() {
      return this._UserPointAfter;
    },
    set: function set(t) {
      this._UserPointAfter = t;
    }
  }, {
    key: "GameState",
    get: function get() {
      return this._GameState;
    },
    set: function set(t) {
      this._GameState = t;
    }
  }, {
    key: "FreeSpinCount",
    get: function get() {
      return this._FreeSpinCount;
    },
    set: function set(t) {
      this._FreeSpinCount = t;
    }
  }, {
    key: "LookAt",
    get: function get() {
      return this._LookAt;
    },
    set: function set(t) {
      this._LookAt = t;
    }
  }, {
    key: "UserPointBefore",
    get: function get() {
      return this._UserPointBefore;
    },
    set: function set(t) {
      this._UserPointBefore = t;
    }
  }, {
    key: "BaseLevelWin",
    get: function get() {
      return this._BaseLevelWin;
    },
    set: function set(t) {
      this._BaseLevelWin = t;
    }
  }, {
    key: "BonusEventCount",
    get: function get() {
      return this._BonusEventCount;
    },
    set: function set(t) {
      this._BonusEventCount = t;
    }
  }]);

  return ExtendHasLineResult;
}();

var HasLineResult = /*#__PURE__*/function () {
  function HasLineResult() {
    _defineProperty(this, "_State", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_Change", void 0), _defineProperty(this, "_ChangeState", void 0), _defineProperty(this, "_LineWin", void 0), _defineProperty(this, "_LineGrid", void 0), _defineProperty(this, "_TotalWinPoint", void 0), _defineProperty(this, "_UserPointAfter", void 0), _defineProperty(this, "_GameState", void 0), _defineProperty(this, "_FreeSpinCount", void 0), _defineProperty(this, "_LookAt", void 0), _defineProperty(this, "_UserPointBefore", void 0), _defineProperty(this, "_BaseLevelWin", void 0), this._State = 0, this._Grid = new Array(), this._Change = new Array(), this._ChangeState = 0, this._LineWin = new Array(), this._LineGrid = new Array(), this._TotalWinPoint = 0, this._UserPointAfter = 0, this._GameState = 0, this._FreeSpinCount = 0, this._LookAt = new Array(), this._UserPointBefore = 0, this._BaseLevelWin = 0;
  }

  _createClass(HasLineResult, [{
    key: "State",
    get: function get() {
      return this._State;
    },
    set: function set(t) {
      this._State = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "Change",
    get: function get() {
      return this._Change;
    },
    set: function set(t) {
      this._Change = t;
    }
  }, {
    key: "ChangeState",
    get: function get() {
      return this._ChangeState;
    },
    set: function set(t) {
      this._ChangeState = t;
    }
  }, {
    key: "LineWin",
    get: function get() {
      return this._LineWin;
    },
    set: function set(t) {
      this._LineWin = t;
    }
  }, {
    key: "LineGrid",
    get: function get() {
      return this._LineGrid;
    },
    set: function set(t) {
      this._LineGrid = t;
    }
  }, {
    key: "TotalWinPoint",
    get: function get() {
      return this._TotalWinPoint;
    },
    set: function set(t) {
      this._TotalWinPoint = t;
    }
  }, {
    key: "UserPointAfter",
    get: function get() {
      return this._UserPointAfter;
    },
    set: function set(t) {
      this._UserPointAfter = t;
    }
  }, {
    key: "GameState",
    get: function get() {
      return this._GameState;
    },
    set: function set(t) {
      this._GameState = t;
    }
  }, {
    key: "FreeSpinCount",
    get: function get() {
      return this._FreeSpinCount;
    },
    set: function set(t) {
      this._FreeSpinCount = t;
    }
  }, {
    key: "LookAt",
    get: function get() {
      return this._LookAt;
    },
    set: function set(t) {
      this._LookAt = t;
    }
  }, {
    key: "UserPointBefore",
    get: function get() {
      return this._UserPointBefore;
    },
    set: function set(t) {
      this._UserPointBefore = t;
    }
  }, {
    key: "BaseLevelWin",
    get: function get() {
      return this._BaseLevelWin;
    },
    set: function set(t) {
      this._BaseLevelWin = t;
    }
  }]);

  return HasLineResult;
}();

var NoLineResult = /*#__PURE__*/function () {
  function NoLineResult() {
    _defineProperty(this, "_State", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_ChangeState", void 0), _defineProperty(this, "_Change", void 0), _defineProperty(this, "_GridWin", void 0), _defineProperty(this, "_TotalWinPoint", void 0), _defineProperty(this, "_UserPointAfter", void 0), _defineProperty(this, "_GameState", void 0), _defineProperty(this, "_FreeSpinCount", void 0), _defineProperty(this, "_LookAt", void 0), _defineProperty(this, "_UserPointBefore", void 0), _defineProperty(this, "_LevelWin", void 0), _defineProperty(this, "_BaseLevelWin", void 0), _defineProperty(this, "_BonusEventCount", void 0), this._State = 0, this._Grid = new Array(), this._ChangeState = 0, this._Change = new Array(), this._GridWin = new Array(), this._TotalWinPoint = 0, this._UserPointAfter = 0, this._GameState = 0, this._FreeSpinCount = 0, this._LookAt = new Array(), this._UserPointBefore = 0, this._LevelWin = 0, this._BaseLevelWin = 0, this._BonusEventCount = 0;
  }

  _createClass(NoLineResult, [{
    key: "State",
    get: function get() {
      return this._State;
    },
    set: function set(t) {
      this._State = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "ChangeState",
    get: function get() {
      return this._ChangeState;
    },
    set: function set(t) {
      this._ChangeState = t;
    }
  }, {
    key: "Change",
    get: function get() {
      return this._Change;
    },
    set: function set(t) {
      this._Change = t;
    }
  }, {
    key: "GridWin",
    get: function get() {
      return this._GridWin;
    },
    set: function set(t) {
      this._GridWin = t;
    }
  }, {
    key: "TotalWinPoint",
    get: function get() {
      return this._TotalWinPoint;
    },
    set: function set(t) {
      this._TotalWinPoint = t;
    }
  }, {
    key: "UserPointAfter",
    get: function get() {
      return this._UserPointAfter;
    },
    set: function set(t) {
      this._UserPointAfter = t;
    }
  }, {
    key: "GameState",
    get: function get() {
      return this._GameState;
    },
    set: function set(t) {
      this._GameState = t;
    }
  }, {
    key: "FreeSpinCount",
    get: function get() {
      return this._FreeSpinCount;
    },
    set: function set(t) {
      this._FreeSpinCount = t;
    }
  }, {
    key: "LookAt",
    get: function get() {
      return this._LookAt;
    },
    set: function set(t) {
      this._LookAt = t;
    }
  }, {
    key: "UserPointBefore",
    get: function get() {
      return this._UserPointBefore;
    },
    set: function set(t) {
      this._UserPointBefore = t;
    }
  }, {
    key: "LevelWin",
    get: function get() {
      return this._LevelWin;
    },
    set: function set(t) {
      this._LevelWin = t;
    }
  }, {
    key: "BaseLevelWin",
    get: function get() {
      return this._BaseLevelWin;
    },
    set: function set(t) {
      this._BaseLevelWin = t;
    }
  }, {
    key: "BonusEventCount",
    get: function get() {
      return this._BonusEventCount;
    },
    set: function set(t) {
      this._BonusEventCount = t;
    }
  }]);

  return NoLineResult;
}();

var HasLineTableInfo = /*#__PURE__*/function () {
  function HasLineTableInfo() {
    _defineProperty(this, "_IsLines", void 0), _defineProperty(this, "_BetTimes", void 0), _defineProperty(this, "_Line", void 0), _defineProperty(this, "_PayTable", void 0), _defineProperty(this, "_LineGridPos", void 0), _defineProperty(this, "_LineBet", void 0), _defineProperty(this, "_LineTotalBet", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_UserPoint", void 0), _defineProperty(this, "_LevelWinPoint", void 0), _defineProperty(this, "_EventMode", void 0), _defineProperty(this, "_EventRequire", void 0), _defineProperty(this, "_DefaultBetIndex", void 0), this._IsLines = 0, this._BetTimes = 0, this._Line = "", this._PayTable = {}, this._LineGridPos = {}, this._LineBet = new Array(), this._LineTotalBet = new Array(), this._Grid = new Array(), this._UserPoint = 0, this._LevelWinPoint = new Array(), this._EventMode = 0, this._EventRequire = 0, this._DefaultBetIndex = 0;
  }

  _createClass(HasLineTableInfo, [{
    key: "IsLines",
    get: function get() {
      return this._IsLines;
    },
    set: function set(t) {
      this._IsLines = t;
    }
  }, {
    key: "BetTimes",
    get: function get() {
      return this._BetTimes;
    },
    set: function set(t) {
      this._BetTimes = t;
    }
  }, {
    key: "Line",
    get: function get() {
      return this._Line;
    },
    set: function set(t) {
      this._Line = t;
    }
  }, {
    key: "PayTable",
    get: function get() {
      return this._PayTable;
    },
    set: function set(t) {
      this._PayTable = t;
    }
  }, {
    key: "LineGridPos",
    get: function get() {
      return this._LineGridPos;
    },
    set: function set(t) {
      this._LineGridPos = t;
    }
  }, {
    key: "LineBet",
    get: function get() {
      return this._LineBet;
    },
    set: function set(t) {
      this._LineBet = t;
    }
  }, {
    key: "LineTotalBet",
    get: function get() {
      return this._LineTotalBet;
    },
    set: function set(t) {
      this._LineTotalBet = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "UserPoint",
    get: function get() {
      return this._UserPoint;
    },
    set: function set(t) {
      this._UserPoint = t;
    }
  }, {
    key: "LevelWinPoint",
    get: function get() {
      return this._LevelWinPoint;
    },
    set: function set(t) {
      this._LevelWinPoint = t;
    }
  }, {
    key: "DefaultBetIndex",
    get: function get() {
      return this._DefaultBetIndex;
    },
    set: function set(t) {
      this._DefaultBetIndex = t;
    }
  }, {
    key: "EventMode",
    get: function get() {
      return this._EventMode;
    },
    set: function set(t) {
      this._EventMode = t;
    }
  }, {
    key: "EventRequire",
    get: function get() {
      return this._EventRequire;
    },
    set: function set(t) {
      this._EventRequire = t;
    }
  }]);

  return HasLineTableInfo;
}();

var NoLineTableInfo = /*#__PURE__*/function () {
  function NoLineTableInfo() {
    _defineProperty(this, "_IsLines", void 0), _defineProperty(this, "_BetTimes", void 0), _defineProperty(this, "_Line", void 0), _defineProperty(this, "_PayTable", void 0), _defineProperty(this, "_LineBet", void 0), _defineProperty(this, "_LineTotalBet", void 0), _defineProperty(this, "_Grid", void 0), _defineProperty(this, "_UserPoint", void 0), _defineProperty(this, "_LevelWinPoint", void 0), _defineProperty(this, "_EventMode", void 0), _defineProperty(this, "_EventRequire", void 0), _defineProperty(this, "DefaultBetIndex", void 0), this._IsLines = 0, this._BetTimes = 0, this._Line = "", this._PayTable = {}, this._LineBet = new Array(), this._LineTotalBet = new Array(), this._Grid = new Array(), this._UserPoint = 0, this._LevelWinPoint = new Array(), this._EventMode = 0, this._EventRequire = 0, this.DefaultBetIndex = 0;
  }

  _createClass(NoLineTableInfo, [{
    key: "IsLines",
    get: function get() {
      return this._IsLines;
    },
    set: function set(t) {
      this._IsLines = t;
    }
  }, {
    key: "BetTimes",
    get: function get() {
      return this._BetTimes;
    },
    set: function set(t) {
      this._BetTimes = t;
    }
  }, {
    key: "Line",
    get: function get() {
      return this._Line;
    },
    set: function set(t) {
      this._Line = t;
    }
  }, {
    key: "PayTable",
    get: function get() {
      return this._PayTable;
    },
    set: function set(t) {
      this._PayTable = t;
    }
  }, {
    key: "LineBet",
    get: function get() {
      return this._LineBet;
    },
    set: function set(t) {
      this._LineBet = t;
    }
  }, {
    key: "LineTotalBet",
    get: function get() {
      return this._LineTotalBet;
    },
    set: function set(t) {
      this._LineTotalBet = t;
    }
  }, {
    key: "Grid",
    get: function get() {
      return this._Grid;
    },
    set: function set(t) {
      this._Grid = t;
    }
  }, {
    key: "UserPoint",
    get: function get() {
      return this._UserPoint;
    },
    set: function set(t) {
      this._UserPoint = t;
    }
  }, {
    key: "LevelWinPoint",
    get: function get() {
      return this._LevelWinPoint;
    },
    set: function set(t) {
      this._LevelWinPoint = t;
    }
  }, {
    key: "EventMode",
    get: function get() {
      return this._EventMode;
    },
    set: function set(t) {
      this._EventMode = t;
    }
  }, {
    key: "EventRequire",
    get: function get() {
      return this._EventRequire;
    },
    set: function set(t) {
      this._EventRequire = t;
    }
  }]);

  return NoLineTableInfo;
}();

var VERSION = "0.04";
globalThis.TCC_VERSION = VERSION, exports.ACenterTemplate = ACenterTemplate, exports.AErrorFrameTemplate = AErrorFrameTemplate, exports.AGenericTemplate = AGenericTemplate, exports.ALoadingFrameTemplate = ALoadingFrameTemplate, exports.ALoadingTemplate = ALoadingTemplate, exports.ALookAtTemplate = ALookAtTemplate, exports.AMainGameButtonTemplate = AMainGameButtonTemplate, exports.AMainGameDoubleButtonTemplate = AMainGameDoubleButtonTemplate, exports.AMainGameOnlyButtonTemplate = AMainGameOnlyButtonTemplate, exports.AMainInitTemplate = AMainInitTemplate, exports.AMenuButtonTemplate = AMenuButtonTemplate, exports.AMenuDoubleButtonTemplate = AMenuDoubleButtonTemplate, exports.AMenuOnlyButtonTemplate = AMenuOnlyButtonTemplate, exports.ARecordButtonTemplate = ARecordButtonTemplate, exports.ARecordDoubleButtonTemplate = ARecordDoubleButtonTemplate, exports.ARecordOnlyButtonTemplate = ARecordOnlyButtonTemplate, exports.ASlotInitializeTemplate = ASlotInitializeTemplate, exports.ASlotTemplate = ASlotTemplate, exports.AWinLinTemplate = AWinLinTemplate$1, exports.AutoStateChangeNotification = AutoStateChangeNotification, exports.AutoStateChangeObserver = AutoStateChangeObserver, exports.ExtendHasLineFreeResult = ExtendHasLineFreeResult, exports.ExtendHasLineResult = ExtendHasLineResult, exports.HasLineFreeResult = HasLineFreeResult, exports.HasLineResult = HasLineResult, exports.HasLineTableInfo = HasLineTableInfo, exports.NoLineFreeResult = NoLineFreeResult, exports.NoLineResult = NoLineResult, exports.NoLineTableInfo = NoLineTableInfo, exports.NormalSlotSpecialTemplate = NormalSlotSpecialTemplate, exports.NormalSlotTemplate = NormalSlotTemplate, exports.OverrideComponent = OverrideComponent, exports.ResponseResultNotification = ResponseResultNotification, exports.ResponseResultObserver = ResponseResultObserver, exports.ScrollFocusStateNotification = ScrollFocusStateNotification, exports.ScrollFocusStateObserver = ScrollFocusStateObserver, exports.SlotBurredImgSpecialTemplate = SlotBurredImgSpecialTemplate, exports.SlotBurredImgTemplate = SlotBurredImgTemplate, exports.SlotRowEndNotification = SlotRowEndNotification, exports.SlotRowEndObserver = SlotRowEndObserver, exports.SpeedStateChangeNotification = SpeedStateChangeNotification, exports.SpeedStateChangeObserver = SpeedStateChangeObserver, exports.StopNowStateNotification = StopNowStateNotification, exports.StopNowStateObserver = StopNowStateObserver, exports.UserMoneyChangeNotification = UserMoneyChangeNotification, exports.UserMoneyChangeObserver = UserMoneyChangeObserver, exports.UserTotalBetChangeNotification = UserTotalBetChangeNotification, exports.UserTotalBetChangeObserver = UserTotalBetChangeObserver, exports.UserWinPointStateNotification = UserWinPointStateNotification, exports.UserWinPointStateObserver = UserWinPointStateObserver, exports.fcc = fcc;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/src/SystemCenter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '992c9+NFBFMqqKuOCmcy1qy', 'SystemCenter');
// src/SystemCenter.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ccclass = cc._decorator.ccclass;
var fcc_template_1 = require("./dist/tcc/fcc-template");
var MySceneStyle_1 = require("./MySceneStyle");
/**
 * @Author 蕭立品
 * @Description TODO
 * @Date 2021-09-14 上午 11:11
 * @Version 1.0
 */
var SystemCenter = /** @class */ (function (_super) {
    __extends(SystemCenter, _super);
    function SystemCenter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemCenter.prototype.onCreate = function () {
        fcc.sceneMgr
            .setDesignWidth(1280)
            .setDesignHeight(720)
            .updateSize(new MySceneStyle_1.default())
            .startListener(500);
    };
    SystemCenter.prototype.configSetting = function () {
        fcc.configMgr
            .setCocosDebug(cc.debug.DebugMode.INFO)
            .setFrameWorkDebug(true)
            .build();
    };
    SystemCenter.prototype.audioSetting = function () {
    };
    SystemCenter.prototype.initClient = function () {
    };
    SystemCenter.prototype.notificationSetting = function () {
    };
    SystemCenter.prototype.processCreate = function () {
    };
    SystemCenter = __decorate([
        ccclass
    ], SystemCenter);
    return SystemCenter;
}(fcc_template_1.ACenterTemplate));
exports.default = SystemCenter;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc3JjXFxTeXN0ZW1DZW50ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTyxPQUFPLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7QUFFdkMsd0RBQXdEO0FBQ3hELCtDQUEwQztBQUUxQzs7Ozs7R0FLRztBQUVIO0lBQTBDLGdDQUFlO0lBQXpEOztJQTRCQSxDQUFDO0lBMUJhLCtCQUFRLEdBQWxCO1FBQ0ksR0FBRyxDQUFDLFFBQVE7YUFDUCxjQUFjLENBQUMsSUFBSSxDQUFDO2FBQ3BCLGVBQWUsQ0FBQyxHQUFHLENBQUM7YUFDcEIsVUFBVSxDQUFDLElBQUksc0JBQVksRUFBRSxDQUFDO2FBQzlCLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRVMsb0NBQWEsR0FBdkI7UUFDSSxHQUFHLENBQUMsU0FBUzthQUNSLGFBQWEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7YUFDdEMsaUJBQWlCLENBQUMsSUFBSSxDQUFDO2FBQ3ZCLEtBQUssRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFUyxtQ0FBWSxHQUF0QjtJQUNBLENBQUM7SUFFUyxpQ0FBVSxHQUFwQjtJQUNBLENBQUM7SUFFUywwQ0FBbUIsR0FBN0I7SUFDQSxDQUFDO0lBRVMsb0NBQWEsR0FBdkI7SUFDQSxDQUFDO0lBM0JnQixZQUFZO1FBRGhDLE9BQU87T0FDYSxZQUFZLENBNEJoQztJQUFELG1CQUFDO0NBNUJELEFBNEJDLENBNUJ5Qyw4QkFBZSxHQTRCeEQ7a0JBNUJvQixZQUFZIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNjY2xhc3MgPSBjYy5fZGVjb3JhdG9yLmNjY2xhc3M7XG5pbXBvcnQgcHJvcGVydHkgPSBjYy5fZGVjb3JhdG9yLnByb3BlcnR5O1xuaW1wb3J0IHtBQ2VudGVyVGVtcGxhdGV9IGZyb20gXCIuL2Rpc3QvdGNjL2ZjYy10ZW1wbGF0ZVwiO1xuaW1wb3J0IE15U2NlbmVTdHlsZSBmcm9tICcuL015U2NlbmVTdHlsZSc7XG5cbi8qKlxuICogQEF1dGhvciDola3nq4vlk4FcbiAqIEBEZXNjcmlwdGlvbiBUT0RPXG4gKiBARGF0ZSAyMDIxLTA5LTE0IOS4iuWNiCAxMToxMVxuICogQFZlcnNpb24gMS4wXG4gKi9cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTeXN0ZW1DZW50ZXIgZXh0ZW5kcyBBQ2VudGVyVGVtcGxhdGV7XG5cbiAgICBwcm90ZWN0ZWQgb25DcmVhdGUoKTogdm9pZCB7XG4gICAgICAgIGZjYy5zY2VuZU1nclxuICAgICAgICAgICAgLnNldERlc2lnbldpZHRoKDEyODApXG4gICAgICAgICAgICAuc2V0RGVzaWduSGVpZ2h0KDcyMClcbiAgICAgICAgICAgIC51cGRhdGVTaXplKG5ldyBNeVNjZW5lU3R5bGUoKSlcbiAgICAgICAgICAgIC5zdGFydExpc3RlbmVyKDUwMCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGNvbmZpZ1NldHRpbmcoKTogdm9pZCB7XG4gICAgICAgIGZjYy5jb25maWdNZ3JcbiAgICAgICAgICAgIC5zZXRDb2Nvc0RlYnVnKGNjLmRlYnVnLkRlYnVnTW9kZS5JTkZPKVxuICAgICAgICAgICAgLnNldEZyYW1lV29ya0RlYnVnKHRydWUpXG4gICAgICAgICAgICAuYnVpbGQoKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgYXVkaW9TZXR0aW5nKCk6IHZvaWQge1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBpbml0Q2xpZW50KCk6IHZvaWQge1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBub3RpZmljYXRpb25TZXR0aW5nKCk6IHZvaWQge1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBwcm9jZXNzQ3JlYXRlKCk6IHZvaWQge1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/src/MySceneStyle.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e22d2mwyNxFi7eAIHuJFVvs', 'MySceneStyle');
// src/MySceneStyle.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @Author 蕭立品
 * @Description TODO
 * @Date 2021-09-13 下午 12:58
 * @Version 1.0
 */
/**
 * @Author XIAO-LI-PIN
 * @Description 橫式樣式更新
 * @Date 2021-04-14 下午 20:24
 * @Version 1.1
 */
var MySceneStyle = /** @class */ (function () {
    function MySceneStyle() {
    }
    MySceneStyle.prototype.executionStyle = function (width, height) {
        var cvs = cc.find('Canvas').getComponent(cc.Canvas);
        //保存原始設計分辨率，供屏幕大小變化時使用
        if (!this.curDR) {
            this.curDR = cc.size(width, height);
        }
        var dr = this.curDR;
        var s = cc.view.getFrameSize();
        var rw = s.width;
        var rh = s.height;
        var finalW = rw;
        var finalH = rh;
        if ((rw / rh) > (dr.width / dr.height)) {
            //橫向
            //!#zh: 是否優先將設計分辨率高度撐滿視圖高度 。 */
            //如果更長，則用定高
            finalH = dr.height;
            finalW = finalH * rw / rh;
        }
        else {
            //直向
            /*!#zh: 是否優先將設計分辨率寬度撐滿視圖寬度 。 */
            //如果更短，則用定寬
            finalW = dr.width;
            finalH = rh / rw * finalW;
        }
        cvs.designResolution = cc.size(finalW, finalH);
        cvs.node.width = finalW;
        cvs.node.height = finalH;
    };
    return MySceneStyle;
}());
exports.default = MySceneStyle;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc3JjXFxNeVNjZW5lU3R5bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7R0FLRztBQUNIOzs7OztHQUtHO0FBQ0g7SUFBQTtJQXFDQSxDQUFDO0lBaENVLHFDQUFjLEdBQXJCLFVBQXNCLEtBQWEsRUFBRSxNQUFjO1FBRS9DLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwRCxzQkFBc0I7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDYixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1NBQ3ZDO1FBQ0QsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQy9CLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDakIsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUNsQixJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBRWhCLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNwQyxJQUFJO1lBQ0osK0JBQStCO1lBQy9CLFdBQVc7WUFDWCxNQUFNLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQztZQUNuQixNQUFNLEdBQUcsTUFBTSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUM7U0FDN0I7YUFBTTtZQUNILElBQUk7WUFDSiwrQkFBK0I7WUFDL0IsV0FBVztZQUNYLE1BQU0sR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDO1lBQ2xCLE1BQU0sR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQztTQUM3QjtRQUNELEdBQUcsQ0FBQyxnQkFBZ0IsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMvQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7UUFDeEIsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQzdCLENBQUM7SUFDTCxtQkFBQztBQUFELENBckNBLEFBcUNDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBBdXRob3Ig6JWt56uL5ZOBXG4gKiBARGVzY3JpcHRpb24gVE9ET1xuICogQERhdGUgMjAyMS0wOS0xMyDkuIvljYggMTI6NThcbiAqIEBWZXJzaW9uIDEuMFxuICovXG4vKipcbiAqIEBBdXRob3IgWElBTy1MSS1QSU5cbiAqIEBEZXNjcmlwdGlvbiDmqavlvI/mqKPlvI/mm7TmlrBcbiAqIEBEYXRlIDIwMjEtMDQtMTQg5LiL5Y2IIDIwOjI0XG4gKiBAVmVyc2lvbiAxLjFcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlTY2VuZVN0eWxlIGltcGxlbWVudHMgZmNjLklGLklTY2VuZVN0eWxlIHtcblxuICAgIC8v55W25YmNY2F2ZXJz5a+s6auYXG4gICAgcHJpdmF0ZSBjdXJEUjogYW55O1xuXG4gICAgcHVibGljIGV4ZWN1dGlvblN0eWxlKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XG5cbiAgICAgICAgbGV0IGN2cyA9IGNjLmZpbmQoJ0NhbnZhcycpLmdldENvbXBvbmVudChjYy5DYW52YXMpO1xuXG4gICAgICAgIC8v5L+d5a2Y5Y6f5aeL6Kit6KiI5YiG6L6o546H77yM5L6b5bGP5bmV5aSn5bCP6K6K5YyW5pmC5L2/55SoXG4gICAgICAgIGlmICghdGhpcy5jdXJEUikge1xuICAgICAgICAgICAgdGhpcy5jdXJEUiA9IGNjLnNpemUod2lkdGgsIGhlaWdodCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGRyID0gdGhpcy5jdXJEUjtcbiAgICAgICAgbGV0IHMgPSBjYy52aWV3LmdldEZyYW1lU2l6ZSgpO1xuICAgICAgICBsZXQgcncgPSBzLndpZHRoO1xuICAgICAgICBsZXQgcmggPSBzLmhlaWdodDtcbiAgICAgICAgbGV0IGZpbmFsVyA9IHJ3O1xuICAgICAgICBsZXQgZmluYWxIID0gcmg7XG5cbiAgICAgICAgaWYgKChydyAvIHJoKSA+IChkci53aWR0aCAvIGRyLmhlaWdodCkpIHtcbiAgICAgICAgICAgIC8v5qmr5ZCRXG4gICAgICAgICAgICAvLyEjemg6IOaYr+WQpuWEquWFiOWwh+ioreioiOWIhui+qOeOh+mrmOW6puaSkOa7v+imluWclumrmOW6piDjgIIgKi9cbiAgICAgICAgICAgIC8v5aaC5p6c5pu06ZW377yM5YmH55So5a6a6auYXG4gICAgICAgICAgICBmaW5hbEggPSBkci5oZWlnaHQ7XG4gICAgICAgICAgICBmaW5hbFcgPSBmaW5hbEggKiBydyAvIHJoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy/nm7TlkJFcbiAgICAgICAgICAgIC8qISN6aDog5piv5ZCm5YSq5YWI5bCH6Kit6KiI5YiG6L6o546H5a+s5bqm5pKQ5ru/6KaW5ZyW5a+s5bqmIOOAgiAqL1xuICAgICAgICAgICAgLy/lpoLmnpzmm7Tnn63vvIzliYfnlKjlrprlr6xcbiAgICAgICAgICAgIGZpbmFsVyA9IGRyLndpZHRoO1xuICAgICAgICAgICAgZmluYWxIID0gcmggLyBydyAqIGZpbmFsVztcbiAgICAgICAgfVxuICAgICAgICBjdnMuZGVzaWduUmVzb2x1dGlvbiA9IGNjLnNpemUoZmluYWxXLCBmaW5hbEgpO1xuICAgICAgICBjdnMubm9kZS53aWR0aCA9IGZpbmFsVztcbiAgICAgICAgY3ZzLm5vZGUuaGVpZ2h0ID0gZmluYWxIO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------
