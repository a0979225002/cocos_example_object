{"version":3,"sources":["assets\\src\\MySceneStyle.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;GAKG;AACH;;;;;GAKG;AACH;IAAA;IAqCA,CAAC;IAhCU,qCAAc,GAArB,UAAsB,KAAa,EAAE,MAAc;QAE/C,IAAI,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAEpD,sBAAsB;QACtB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACvC;QACD,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACpB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAC/B,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;QACjB,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QAClB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE;YACpC,IAAI;YACJ,+BAA+B;YAC/B,WAAW;YACX,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACnB,MAAM,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;SAC7B;aAAM;YACH,IAAI;YACJ,+BAA+B;YAC/B,WAAW;YACX,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC;YAClB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC;SAC7B;QACD,GAAG,CAAC,gBAAgB,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC/C,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,CAAC;IACL,mBAAC;AAAD,CArCA,AAqCC,IAAA","file":"","sourceRoot":"/","sourcesContent":["/**\n * @Author 蕭立品\n * @Description TODO\n * @Date 2021-09-13 下午 12:58\n * @Version 1.0\n */\n/**\n * @Author XIAO-LI-PIN\n * @Description 橫式樣式更新\n * @Date 2021-04-14 下午 20:24\n * @Version 1.1\n */\nexport default class MySceneStyle implements fcc.IF.ISceneStyle {\n\n    //當前cavers寬高\n    private curDR: any;\n\n    public executionStyle(width: number, height: number) {\n\n        let cvs = cc.find('Canvas').getComponent(cc.Canvas);\n\n        //保存原始設計分辨率，供屏幕大小變化時使用\n        if (!this.curDR) {\n            this.curDR = cc.size(width, height);\n        }\n        let dr = this.curDR;\n        let s = cc.view.getFrameSize();\n        let rw = s.width;\n        let rh = s.height;\n        let finalW = rw;\n        let finalH = rh;\n\n        if ((rw / rh) > (dr.width / dr.height)) {\n            //橫向\n            //!#zh: 是否優先將設計分辨率高度撐滿視圖高度 。 */\n            //如果更長，則用定高\n            finalH = dr.height;\n            finalW = finalH * rw / rh;\n        } else {\n            //直向\n            /*!#zh: 是否優先將設計分辨率寬度撐滿視圖寬度 。 */\n            //如果更短，則用定寬\n            finalW = dr.width;\n            finalH = rh / rw * finalW;\n        }\n        cvs.designResolution = cc.size(finalW, finalH);\n        cvs.node.width = finalW;\n        cvs.node.height = finalH;\n    }\n}\n"]}