{
  "__type__": "cc.TextAsset",
  "_name": "fcc-template.d",
  "_objFlags": 0,
  "_native": "",
  "text": "/**\r\n * @Author 蕭立品\r\n * @Description TODO\r\n * @Date 2021-08-13 下午 05:51\r\n * @Version 1.0\r\n */\r\ndeclare const fcc: typeof globalThis.fcc;\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (Override)擴展cc.Component\r\n * @Date 2021-05-28 上午 10:11\r\n * @Version 1.0\r\n */\r\ndeclare class OverrideComponent extends cc.Component {\r\n    /**\r\n     * 保存當前使用中的計時器方法,如果該計時器執行完,會自動清空該方法\r\n     * @type {Array<Function>}\r\n     * @private\r\n     */\r\n    private readonly scheduleTag;\r\n    constructor();\r\n    /**\r\n     * 獲取當前使用中的計時器\r\n     * @returns {Array<Function>}\r\n     */\r\n    protected getScheduleTag(): Array<Function>;\r\n    /**\r\n     * 獲取當前還尚未釋放的計時器數量\r\n     * @returns {number}\r\n     */\r\n    protected getScheduleAmount(): number;\r\n    /**\r\n     * 可選循環次數計時器,額外新增增加保存使用中的計時器方法,與原版cocos使用上並無差別\r\n     * @param {Function} callback - 返回方法\r\n     * @param {number} interval - 間格時間\r\n     * @param {number} repeat - 重複次數\r\n     * @param {number} delay - 延遲時間\r\n     */\r\n    schedule(callback: Function, interval?: number, repeat?: number, delay?: number): void;\r\n    /**\r\n     * 確認當前計時器是否有使用重複次數\r\n     * @protected\r\n     */\r\n    protected checkScheduleRepeat(callback: any, repeat: any): Function;\r\n    /**\r\n     * 單次計時器,額外新增增加保存使用中的計時器方法,與原版cocos使用上並無差別\r\n     * @param {Function} callback - 返回方法\r\n     * @param {number} delay - 延遲時間\r\n     */\r\n    scheduleOnce(callback: Function, delay?: number): void;\r\n    /**\r\n     * 清除單個計時器方法,額外新增刪除使用中的計時器紀錄,與原版cocos使用上並無差別\r\n     * @param {Function} callback - 當初綁定的方法\r\n     */\r\n    unschedule(callback: Function): void;\r\n    /**\r\n     * 判斷當前方法是否正在等待計時器callback中\r\n     * @param {Function} callback - 原本綁定該計時器的方法\r\n     * @returns {number} - 返回當前this.getScheduleTag[]執行中的index位置,如果該陣列內無該方法,返回-1\r\n     * @protected\r\n     */\r\n    protected checkScheduleCallFunIndex(callback: Function): number;\r\n    /**\r\n     * 確認當前該方法以甚麼形式執行的,原型鏈 or 基礎方法\r\n     * @param {Function} callback - 原本綁定該計時器的方法\r\n     * @returns {Function} - 返回當前this.getScheduleTag[]內的該方法,如果該陣列內無該方法,返回undefined\r\n     * @protected\r\n     */\r\n    protected checkScheduleTag(callback: Function): Function;\r\n    /**\r\n     * 清除當前所有使用中的計時器,額外新增清空計時器數量方法,與原版cocos使用上並無差別\r\n     */\r\n    unscheduleAllCallbacks(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通用模板\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare abstract class AGenericTemplate extends OverrideComponent {\r\n    /**\r\n     * 自訂義初始狀態\r\n     */\r\n    protected abstract onCreate(): void;\r\n    /**\r\n     * 語系設置\r\n     */\r\n    protected languageSetting(): void;\r\n    protected onLoad(): void;\r\n    protected start(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 遊戲初始scene加載前,需優先執行\r\n * @Date 2021-06-01 下午 04:49\r\n * @Version 1.0\r\n */\r\ndeclare abstract class ACenterTemplate extends AGenericTemplate {\r\n    /**\r\n     * 初始化當前遊戲\r\n     */\r\n    protected abstract configSetting(): void;\r\n    /**\r\n     * 初始Client參數\r\n     * @protected\r\n     */\r\n    protected abstract initClient(): void;\r\n    /**\r\n     * 音樂撥放樣式設定\r\n     */\r\n    protected abstract audioSetting(): void;\r\n    /**\r\n     * 遊戲流程創建\r\n     * @protected\r\n     */\r\n    protected abstract processCreate(): void;\r\n    /**\r\n     * notification 此遊戲會用到的 所有通知事件添加\r\n     * @protected\r\n     */\r\n    protected abstract notificationSetting(): void;\r\n    protected onLoad(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 自動狀態改變時,當有事件推送時,將會將該事件推播給綁定者\r\n * @Date 2021-05-20 下午 05:08\r\n * @Version 1.0\r\n */\r\ndeclare class AutoStateChangeObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (isAutomaticState: boolean, beforeAutoCount: fcc.type.AutoType, afterAutoCount: fcc.type.AutoType) => void, self: any);\r\n    /**\r\n     * 發送自動狀態通知\r\n     * @param {boolean} isAutomaticState - 更改後的狀態是否是自動狀態\r\n     * @param {fcc.type.AutoType} beforeAutoCount - 更改前的auto類型\r\n     * @param {fcc.type.AutoType} afterAutoCount  - 更改後的auto類型\r\n     */\r\n    pushNotification(isAutomaticState: boolean, beforeAutoCount: fcc.type.AutoType, afterAutoCount: fcc.type.AutoType): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 自動狀態改變時事件推播管理器\r\n * @Date 2021-05-20 下午 05:05\r\n * @Version 1.0\r\n */\r\ndeclare class AutoStateChangeNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {AutoStateChangeObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: AutoStateChangeObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 發送自動狀態通知\r\n     * @param {boolean} isAutomaticState - 更改後的狀態是否是自動狀態\r\n     * @param {AutoType} beforeAutoCount - 更改前的auto類型\r\n     * @param {AutoType} afterAutoCount  - 更改後的auto類型\r\n     */\r\n    notify(isAutomaticState: boolean, beforeAutoCount: fcc.type.AutoType, afterAutoCount: fcc.type.AutoType): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 當出現需要瞇排事件,當有事件推送時,將會將該事件推播給綁定者\r\n * @Date 2021-05-21 下午 12:08\r\n * @Version 1.0\r\n */\r\ndeclare class ScrollFocusStateObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (index: number, isShow: boolean) => void, self: any);\r\n    /**\r\n     * 推送瞇排事件\r\n     * @param {number} index - 需要操作哪個列(head = 0)\r\n     * @param {boolean} isShow - 要顯示還關閉\r\n     */\r\n    pushNotification(index: number, isShow: boolean): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 瞇牌時的狀態事件推播管理\r\n * @Date 2021-05-21 下午 12:08\r\n * @Version 1.0\r\n */\r\ndeclare class ScrollFocusStateNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     * @type {string}\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {ScrollFocusStateObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: ScrollFocusStateObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 推送瞇排事件\r\n     * @param {number} index - 需要操作哪個列(head = 0)\r\n     * @param {boolean} isShow - 要顯示還關閉\r\n     */\r\n    notify(index: number, isShow: boolean): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 遊戲加速狀態改變時,當有事件推送時,將會將該事件推播給綁定者\r\n * @Date 2021-05-21 下午 12:00\r\n * @Version 1.0\r\n */\r\ndeclare class SpeedStateChangeObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (isSpeedUp: boolean) => void, self: any);\r\n    /**\r\n     * 推送當前加速狀態\r\n     * @param {boolean} isSpeedUp - 要開啟加速,還是關閉加速\r\n     */\r\n    pushNotification(isSpeedUp: boolean): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 :當前遊戲速度狀態改變時事件推播管理器\r\n * @Date 2021-05-21 上午 11:56\r\n * @Version 1.0\r\n */\r\ndeclare class SpeedStateChangeNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {SpeedStateChangeObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: SpeedStateChangeObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 推送當前加速狀態\r\n     * @param {boolean} isSpeedUp - 要開啟加速,還是關閉加速\r\n     */\r\n    notify(isSpeedUp: boolean): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 即停狀態通知時,當有事件推送時,將會將該事件推播給綁定者\r\n * @Date 2021-05-21 上午 11:59\r\n * @Version 1.0\r\n */\r\ndeclare class StopNowStateObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: () => void, self: any);\r\n    /**\r\n     * 推播即停狀態事件\r\n     */\r\n    pushNotification(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 即停事件推播管理器\r\n * @Date 2021-05-21 上午 11:59\r\n * @Version 1.0\r\n */\r\ndeclare class StopNowStateNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     * @type {string}\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {StopNowStateObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: StopNowStateObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 推播即停狀態事件\r\n     */\r\n    notify(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 當有用戶金額變更,發送推波事件進來時,將會將該事件推播給綁定者\r\n * @Date 2021-05-20 下午 03:02\r\n * @Version 1.0\r\n */\r\ndeclare class UserMoneyChangeObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (money: number) => void, self: any);\r\n    /**\r\n     * 推播玩家籌碼更動時狀態\r\n     * @param {number} money - 籌碼更動後的金額\r\n     */\r\n    pushNotification(money: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 用戶金額變更時事件推播管理器\r\n * @Date 2021-05-20 下午 03:02\r\n * @Version 1.0\r\n */\r\ndeclare class UserMoneyChangeNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     * @type {string}\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {UserMoneyChangeObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: UserMoneyChangeObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 推播玩家籌碼更動時狀態\r\n     * @param {number} money - 籌碼更動後的金額\r\n     */\r\n    notify(money: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 用戶更換的押住時,發送推波事件進來時,將會將該事件推播給綁定者\r\n * @Date 2021-05-20 下午 04:12\r\n * @Version 1.0\r\n */\r\ndeclare class UserTotalBetChangeObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (beforeIndex: number, afterIndex: number) => void, self: any);\r\n    /**\r\n     * 推播用戶更換的押住倍率 index\r\n     * @param {number} beforeIndex - user更動前的押住 index\r\n     * @param {number} afterIndex - user 更動後的押住 index\r\n     */\r\n    pushNotification(beforeIndex: number, afterIndex: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 用戶更換的押住金額事件推播管理器\r\n * @Date 2021-05-20 下午 04:11\r\n * @Version 1.0\r\n */\r\ndeclare class UserTotalBetChangeNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     * @type {string}\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {UserTotalBetChangeObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: UserTotalBetChangeObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 推播用戶更換的押住倍率 index\r\n     * @param {number} beforeIndex - user更動前的押住 index\r\n     * @param {number} afterIndex - user 更動後的押住 index\r\n     */\r\n    notify(beforeIndex: number, afterIndex: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 用戶贏分時事件推撥,當有事件推送時,將會將該事件推播給綁定者\r\n * @Date 2021-05-20 下午 04:40\r\n * @Version 1.0\r\n */\r\ndeclare class UserWinPointStateObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (winPoint: number, level: number) => void, self: any);\r\n    /**\r\n     * 當用戶有贏分時推播當前贏分分數\r\n     * @param {number} winPoint - 當前贏分分數\r\n     * @param {number} level - 當前贏分等級\r\n     */\r\n    pushNotification(winPoint: number, level: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 用戶贏分時事件推播管理器\r\n * @Date 2021-05-20 下午 04:38\r\n * @Version 1.0\r\n */\r\ndeclare class UserWinPointStateNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     * @type {string}\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {UserWinPointStateObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: UserWinPointStateObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 當用戶有贏分時推播當前贏分分數\r\n     * @param {number} winPoint - 當前贏分分數\r\n     * @param {number} level - 當前贏分等級\r\n     */\r\n    notify(winPoint: number, level: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 當server回傳結果時,當有事件推送時,將會將該事件推播給綁定者\r\n * @Date 2021-06-09 下午 05:51\r\n * @Version 1.0\r\n */\r\ndeclare class ResponseResultObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (responseType: string) => void, self: any);\r\n    /**\r\n     * 推播該局Server是否已回傳答案\r\n     * @param {boolean} responseType - json以保存完畢\r\n     */\r\n    pushNotification(responseType: string): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : server Response結束時\r\n * @Date 2021-06-09 下午 05:48\r\n * @Version 1.0\r\n */\r\ndeclare class ResponseResultNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     * @type {string}\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {ResponseResultObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: ResponseResultObserver, isPermanent: boolean): void;\r\n    /**\r\n     * 推播該局Server是否已回傳答案\r\n     * @param {boolean} responseType - json以保存完畢\r\n     */\r\n    notify(responseType: string): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description SLOT 某一列結束時,將會推播事件\r\n * @Date 2021-05-20 下午 04:40\r\n * @Version 1.0\r\n */\r\ndeclare class SlotRowEndObserver extends fcc.ABS.ABaseObserver {\r\n    constructor(callFun: (rowIndex: number, isAllRowEnd: boolean) => void, self: any);\r\n    /**\r\n     * SLOT哪一列已經執行結束\r\n     * @param {number} rowIndex - 第幾列結束\r\n     * @param {boolean} isAllRowEnd - 是否全軸一起停止\r\n     */\r\n    pushNotification(rowIndex: number, isAllRowEnd: boolean): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 監聽SLOT所有列,當該列結束時,推播事件\r\n * @Date 2021-05-20 下午 04:38\r\n * @Version 1.0\r\n */\r\ndeclare class SlotRowEndNotification extends fcc.ABS.ABaseNotification {\r\n    /**\r\n     * NotificationManager 用來獲取這個class的標籤\r\n     * @type {string}\r\n     */\r\n    readonly TAG_NAME: string;\r\n    constructor();\r\n    /**\r\n     * 訂閱該事件\r\n     * @param {UserWinPointStateObserver} observer - 推撥接收者\r\n     * @param {boolean} isPermanent - 是否常駐監聽\r\n     */\r\n    subscribe(observer: SlotRowEndObserver, isPermanent: boolean): void;\r\n    /**\r\n     * SLOT哪一列已經執行結束\r\n     * @param {number} rowIndex - 第幾列結束\r\n     * @param {boolean} isAllRowEnd - 是否全軸一起停止\r\n     */\r\n    notify(rowIndex: number, isAllRowEnd: boolean): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (抽象類)遊戲主頁面按鈕事件\r\n * ```\r\n *      事件:\r\n *          推撥 {StopNowStateNotification} : 即停的推播事件\r\n *          推撥 {SpeedStateChangeNotification} : 加速的推播事件\r\n *          推撥 {AutoStateChangeNotification} : 自動狀態更動推播事件\r\n *          接收 {UserMoneyChangeObserver} : 玩家金額變更時推播事件\r\n *              callback : this.userMoney = money;\r\n *          接收 {AutoStateChangeNotification} : 自動狀態更動推播事件\r\n *              callback :  this.autoEvent(isAutomaticState, afterAutoCount);\r\n *                          if (isAutomaticState) {\r\n *                              await this.startButtonEvent();\r\n *                          }\r\n * ```\r\n * @Date 2021-05-26 上午 11:29\r\n * @Version 1.0\r\n */\r\ndeclare abstract class AMainGameButtonTemplate extends AGenericTemplate {\r\n    /**\r\n     * 當前是否開啟總押注視窗\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    protected isShowTotalBetFrame: boolean;\r\n    /**\r\n     * 當前是否常壓空白建\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    protected keyboardListener: boolean;\r\n    /**\r\n     * 自動狀態事件綁定者\r\n     * @type {AutoStateChangeObserver}\r\n     * @private\r\n     */\r\n    private _autoStateChangeObserver;\r\n    /**\r\n     * 當前遊戲速度\r\n     */\r\n    protected nowSpeed: boolean;\r\n    /**\r\n     * 是否正在自動狀態中\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    protected isAutoState: boolean;\r\n    /**\r\n     * 當前Auto次數\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    protected nowAutoType: number;\r\n    /**\r\n     * 長壓時間 單位 : 秒\r\n     * @type {number}\r\n     * @default 0.5\r\n     * @protected\r\n     */\r\n    protected longTouchTime: number;\r\n    /**\r\n     * 當前玩家剩餘金額\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    protected userMoney: number;\r\n    /**\r\n     * 監聽玩家金額變更時給予通知\r\n     * @type {UserMoneyChangeObserver}\r\n     * @private\r\n     */\r\n    private _userMoneyChangeObserver;\r\n    /**\r\n     * 確認當前user分數是否可以玩下輪遊戲\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    protected abstract checkUserPointCanPlayGame(): boolean;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 打開開始遊戲事件監聽\r\n     */\r\n    abstract startButtonOnEnable(): void;\r\n    /**\r\n     * 關閉開始遊戲事件監聽\r\n     */\r\n    abstract startButtonDisable(): void;\r\n    /**\r\n     * 點擊 (打開或關閉) 總押注視窗按鈕\r\n     * @param {boolean} isShowTotalBetFrame : 打開或關閉\r\n     * @protected\r\n     */\r\n    protected abstract totalBetFrameTouchEvent(isShowTotalBetFrame: boolean): void;\r\n    /**\r\n     * 當下是否(開啟或關閉)加速狀態事件\r\n     * 此方法已經綁定推播事件\r\n     * @param {boolean} isSpeedUp : 開啟或關閉\r\n     * @protected\r\n     */\r\n    protected abstract speedUpEvent(isSpeedUp: boolean): void;\r\n    /**\r\n     * 當下是否(開啟或關閉)自動狀態事件\r\n     * 此方法已經綁定推播事件\r\n     * @param {boolean} isAutomaticState\r\n     * @param {fcc.type.AutoType} autoType\r\n     * @protected\r\n     */\r\n    protected abstract autoEvent(isAutomaticState: boolean, autoType: fcc.type.AutoType): void;\r\n    /**\r\n     * 遊戲開始執行流程前事件\r\n     * @protected\r\n     */\r\n    protected abstract startEvent(): void;\r\n    /**\r\n     * 遊戲開始執行流程完成後事件\r\n     * @protected\r\n     */\r\n    protected abstract endEvent(): void;\r\n    /**\r\n     * 打開遊戲菜單\r\n     * @protected\r\n     */\r\n    protected abstract menuEvent(): void;\r\n    /**\r\n     * 警告事件\r\n     * @protected\r\n     */\r\n    protected abstract warningEvent(): void;\r\n    /**\r\n     * 添加Notification接收事件\r\n     * @private\r\n     */\r\n    private addNotification;\r\n    /**\r\n     * 觸控按壓時監聽\r\n     * @private\r\n     */\r\n    protected startButtonOnTouchStart(): void;\r\n    /**\r\n     * 長壓計時器事件,如果當前非auto狀態,將會開啟auto 並開始遊戲\r\n     * @returns {Promise<void>}\r\n     * @private\r\n     */\r\n    protected longTouchTimer(): Promise<void>;\r\n    /**\r\n     * 推播auto事件\r\n     * @param {boolean} isAutoState - 當前自動狀態\r\n     * @param {AutoType} autoType - 當前 auto類型\r\n     * @private\r\n     */\r\n    private autoNotify;\r\n    /**\r\n     * start監聽抬起時狀態\r\n     * 取消長壓計時器事件,並進入開始遊戲事件\r\n     * @private\r\n     */\r\n    protected startButtonOnTouchEnd(): Promise<void>;\r\n    /**\r\n     * 鍵盤空白鍵壓下時監聽\r\n     * @param event\r\n     * @private\r\n     */\r\n    protected keyboardSpaceTouchStart(event: any): void;\r\n    /**\r\n     * 鍵盤空白鍵抬起時監聽\r\n     * @param event\r\n     * @private\r\n     */\r\n    protected keyboardSpaceTouchEnd(event: any): Promise<void>;\r\n    /**\r\n     * 自動狀態監聽者\r\n     * 如有需求可自行override or 獲取監聽對象做關閉操作\r\n     * @returns {AutoStateChangeObserver}\r\n     * @protected\r\n     */\r\n    protected getAutoStateChangeObserver(): AutoStateChangeObserver;\r\n    /**\r\n     * 更新玩家金額\r\n     */\r\n    protected getUserMoneyChangeObserver(): UserMoneyChangeObserver;\r\n    /**\r\n     * 開始遊戲監聽事件\r\n     * @returns {Promise<void>}\r\n     * @protected\r\n     */\r\n    protected startButtonEvent(): Promise<void>;\r\n    /**\r\n     * 自動按鈕監聽事件\r\n     * 如果當前押注視窗開啟中,將更換為關閉視窗方法\r\n     * 正常情況,推播當前auto狀態事件\r\n     * @private\r\n     */\r\n    protected autoButtonEventListener(): void;\r\n    /**\r\n     * 加速按鈕監聽事件\r\n     * @protected\r\n     */\r\n    protected speedUpButtonEventListener(): void;\r\n    /**\r\n     * 打開或開關閉押注金額選擇框\r\n     * 如果當前在遊戲中,將方法更改為顯示警告視窗\r\n     * @protected\r\n     */\r\n    protected totalBetFrameTouchEventListener(): void;\r\n    /**\r\n     * menu按鈕監聽事件\r\n     * 如果當前在遊戲中,將方法更改為顯示警告視窗\r\n     * @protected\r\n     */\r\n    protected menuButtonEventListener(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 主遊戲單一按鈕配置\r\n * @Example 單一方向遊戲\r\n * ```\r\n *      事件:\r\n *          推撥 {StopNowStateNotification} : 即停的推播事件\r\n *          推撥 {SpeedStateChangeNotification} : 加速的推播事件\r\n *          推撥 {AutoStateChangeNotification} : 自動狀態更動推播事件\r\n *          接收 {UserMoneyChangeObserver} : 玩家金額變更時推播事件\r\n *              callback : this.userMoney = money;\r\n *          接收 {AutoStateChangeNotification} : 自動狀態更動推播事件\r\n *              callback :  this.autoEvent(isAutomaticState, afterAutoCount);\r\n *                          if (isAutomaticState) {\r\n *                              await this.startButtonEvent();\r\n *                          }\r\n * ```\r\n * @Date 2021-07-06 下午 16:24\r\n * @Version 1.1\r\n */\r\ndeclare abstract class AMainGameOnlyButtonTemplate extends AMainGameButtonTemplate {\r\n    /**\r\n     * 開始遊戲按鈕\r\n     * @type {cc.Button}\r\n     */\r\n    protected abstract startButton: cc.Button;\r\n    /**\r\n     * 自動按鈕\r\n     * @type {cc.Button}\r\n     */\r\n    protected abstract autoButton: cc.Button;\r\n    /**\r\n     * 加速按鈕\r\n     * @type {cc.Button}\r\n     */\r\n    protected abstract speedUpButton: cc.Button;\r\n    /**\r\n     * 押注金額選擇按鈕\r\n     * @type {cc.Button}\r\n     */\r\n    protected abstract betSelectionButton: cc.Button;\r\n    /**\r\n     * 設定頁按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract menuButton: cc.Button;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 打開開始遊戲事件監聽(開始遊戲按鈕與space鍵盤監聽)\r\n     */\r\n    startButtonOnEnable(): void;\r\n    /**\r\n     * 關閉開始遊戲事件監聽(開始遊戲按鈕與space鍵盤監聽)\r\n     */\r\n    startButtonDisable(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 主遊戲雙按鈕配置\r\n * @Example 同時擁有直橫向方向遊戲\r\n * ```\r\n *      事件:\r\n *          推撥 {StopNowStateNotification} : 即停的推播事件\r\n *          推撥 {SpeedStateChangeNotification} : 加速的推播事件\r\n *          推撥 {AutoStateChangeNotification} : 自動狀態更動推播事件\r\n *          接收 {UserMoneyChangeObserver} : 玩家金額變更時推播事件\r\n *              callback : this.userMoney = money;\r\n *          接收 {AutoStateChangeNotification} : 自動狀態更動推播事件\r\n *              callback :  this.autoEvent(isAutomaticState, afterAutoCount);\r\n *                          if (isAutomaticState) {\r\n *                              await this.startButtonEvent();\r\n *                          }\r\n * ```\r\n * @Date 2021-07-06 下午 16:24\r\n * @Version 1.0.2\r\n */\r\ndeclare abstract class AMainGameDoubleButtonTemplate extends AMainGameButtonTemplate {\r\n    /**\r\n     * 開始遊戲按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract startButtonH: cc.Button;\r\n    /**\r\n     * 開始遊戲按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract startButtonV: cc.Button;\r\n    /**\r\n     * 自動按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoButtonH: cc.Button;\r\n    /**\r\n     * 自動按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoButtonV: cc.Button;\r\n    /**\r\n     * 加速按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract speedUpButtonH: cc.Button;\r\n    /**\r\n     * 加速按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract speedUpButtonV: cc.Button;\r\n    /**\r\n     * 押注金額選擇按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betSelectionButtonH: cc.Button;\r\n    /**\r\n     * 押注金額選擇按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betSelectionButtonV: cc.Button;\r\n    /**\r\n     * 設定頁按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract menuButtonH: cc.Button;\r\n    /**\r\n     * 設定頁按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract menuButtonV: cc.Button;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 打開開始遊戲事件監聽(開始遊戲按鈕與space鍵盤監聽)\r\n     */\r\n    startButtonOnEnable(): void;\r\n    /**\r\n     * 關閉開始遊戲事件監聽(開始遊戲按鈕與space鍵盤監聽)\r\n     */\r\n    startButtonDisable(): void;\r\n}\r\ninterface IBaseTableInfoModel {\r\n    /**\r\n     * 押注 乘以的倍數(有線版本為自己的線數 無限版本為固定倍數)\r\n     */\r\n    BetTimes: number;\r\n    /**\r\n     * 每線押注[0.1、0.2、0.3、0.4、0.5、1、2、3、4、5]\r\n     */\r\n    LineBet: Array<number>;\r\n    /**\r\n     * 總押注[2.5、5、7.5、10、12.5、25、50、75、100、125]\r\n     */\r\n    LineTotalBet: Array<number>;\r\n    /**\r\n     * 賠率表\r\n     */\r\n    PayTable: object;\r\n    /**\r\n     * 玩家現有金額\r\n     */\r\n    UserPoint: number;\r\n    /**\r\n     * 預設押住倍率\r\n     */\r\n    DefaultBetIndex: number;\r\n    /**\r\n     * 活動模式 0 沒有 11 轉盤\r\n     * @type {number}\r\n     */\r\n    EventMode: number;\r\n    /**\r\n     * 活動轉數需求\r\n     * @type {number}\r\n     */\r\n    EventRequire: number;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (抽象類)MENU主頁面,所有按鈕事件\r\n * ```\r\n *      事件:\r\n *          推撥 {AutoStateChangeNotification} : 訂閱自動狀態改變時\r\n *          推撥 {UserTotalBetChangeNotification} : 用戶更換的押住金額事件\r\n *          接收 {UserTotalBetChangeNotification} : 用戶更換的押住金額事件\r\n *              callback: this.totalBetChangeEvent(beforeIndex, afterIndex);\r\n *\r\n * ```\r\n * @Date 2021-05-26 上午 15:59\r\n * @Version 1.1\r\n *\r\n */\r\ndeclare abstract class AMenuButtonTemplate extends AGenericTemplate {\r\n    /**\r\n     * 訂閱自動事件\r\n     * @type {UserTotalBetChangeObserver}\r\n     * @private\r\n     */\r\n    private userTotalBetChangeObserver;\r\n    /**\r\n     * 訂閱用戶更改押注時事件\r\n     * @type {AutoStateChangeObserver}\r\n     * @private\r\n     */\r\n    private autoStateChangeObserver;\r\n    /**\r\n     * 自訂義初始狀態\r\n     * @protected\r\n     */\r\n    protected abstract onCreate(): any;\r\n    /**\r\n     * 背景音樂按鈕事件\r\n     * @param {boolean} isOnMute : 是否靜音\r\n     * @protected\r\n     */\r\n    protected abstract musicEvent(isOnMute: boolean): any;\r\n    /**\r\n     * 效果音樂按鈕事件\r\n     * @param {boolean} isOnMute : 是否靜音\r\n     * @protected\r\n     */\r\n    protected abstract effectEvent(isOnMute: boolean): any;\r\n    /**\r\n     * 自動按鈕事件\r\n     * @param {AutoType} beforeAutoCount : 點擊前的按鈕type\r\n     * @param {AutoType} afterAutoCount : 更新的按鈕type\r\n     * @protected\r\n     */\r\n    protected abstract autoEvent(beforeAutoCount: fcc.type.AutoType, afterAutoCount: fcc.type.AutoType): any;\r\n    /**\r\n     * 前往設定頁按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract settingPageTouchEvent(): any;\r\n    /**\r\n     * 前往紀錄頁按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract recordPageTouchEvent(): any;\r\n    /**\r\n     * 前往說明頁按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract descriptionPageEvent(): any;\r\n    /**\r\n     * 更換押注事件\r\n     * @param beforeIndex\r\n     * @param afterIndex\r\n     * @protected\r\n     */\r\n    protected abstract totalBetChangeEvent(beforeIndex: any, afterIndex: any): any;\r\n    /**\r\n     * 返回遊戲頁面按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract goBackTouchEvent(): any;\r\n    /**\r\n     * 返回首頁按鈕監聽事件\r\n     * @protected\r\n     */\r\n    protected abstract goHomeTouchEvent(): any;\r\n    /**\r\n     * tableInfo model\r\n     * @type {IBaseTableInfoModel}\r\n     * @protected\r\n     */\r\n    protected abstract tableInfo: IBaseTableInfoModel;\r\n    /**\r\n     * 當前玩家auto的類型\r\n     * @type {fcc.type.AutoType}\r\n     * @protected\r\n     */\r\n    protected nowAutoType: fcc.type.AutoType;\r\n    /**\r\n     * 當前玩家押住\r\n     * @protected\r\n     */\r\n    protected abstract nowBetIndex: number;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 加入訂閱綁定事件\r\n     * @private\r\n     */\r\n    private addNotification;\r\n    /**\r\n     * 自動更新當前是否靜音背景音樂\r\n     * 注意:update靜音狀態會依照config初始設定做更新\r\n     * @protected\r\n     */\r\n    protected musicEventListener(): void;\r\n    /**\r\n     * 自動更新當前是否靜音效果音樂\r\n     * 注意:update靜音狀態會依照config初始設定做更新\r\n     * @protected\r\n     */\r\n    protected effectEventListener(): void;\r\n    /**\r\n     * 用戶點擊按鈕增加押注點數事件\r\n     * 注意:當用戶增加的押注點數超過最大值,將會自動跳回最小值\r\n     * @protected\r\n     */\r\n    protected betUpEventListener(): void;\r\n    /**\r\n     * 用戶點擊按鈕增加押注點數事件\r\n     * 注意:當用戶增加的押注點數超過最小值,將會自動跳回最大值\r\n     * @protected\r\n     */\r\n    protected betDownEventListener(): void;\r\n    /**\r\n     * 當前總押注事件推播接收者\r\n     * 注意:如果要解除推播,將無法在監聽推波事件派發\r\n     * @returns {UserTotalBetChangeObserver}\r\n     * @protected\r\n     */\r\n    protected getUserTotalBetChangeObserver(): UserTotalBetChangeObserver;\r\n    /**\r\n     * 自動按鈕點擊事件\r\n     * @param event\r\n     * @param {AutoType} callbackType : 哪顆類型的按鈕點擊\r\n     * @protected\r\n     */\r\n    protected autoButtonEventListener(event: any, callbackType: fcc.type.AutoType): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (抽象類)MENU主頁面,主遊戲雙按鈕配置\r\n * @Date 2021-05-26 上午 15:59\r\n * @Version 1.1\r\n */\r\ndeclare abstract class AMenuDoubleButtonTemplate extends AMenuButtonTemplate {\r\n    /**\r\n     * 背景音樂按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract musicButtonH: cc.Button;\r\n    /**\r\n     * 背景音樂按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract musicButtonV: cc.Button;\r\n    /**\r\n     * 效果音樂按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract effectButtonH: cc.Button;\r\n    /**\r\n     * 效果音樂按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract effectButtonV: cc.Button;\r\n    /**\r\n     * 押住籌碼提高按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betUpButtonH: cc.Button;\r\n    /**\r\n     * 押住籌碼提高按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betUpButtonV: cc.Button;\r\n    /**\r\n     * 押住籌碼降低按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betDownButtonH: cc.Button;\r\n    /**\r\n     * 押住籌碼降低按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betDownButtonV: cc.Button;\r\n    /**\r\n     * 自動按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoButtonH: cc.Button;\r\n    /**\r\n     * 自動按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoButtonV: cc.Button;\r\n    /**\r\n     * 自動50次按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto50ButtonH: cc.Button;\r\n    /**\r\n     * 自動50次按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto50ButtonV: cc.Button;\r\n    /**\r\n     * 自動100次按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto100ButtonH: cc.Button;\r\n    /**\r\n     * 自動100次按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto100ButtonV: cc.Button;\r\n    /**\r\n     * 自動500次按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto500ButtonH: cc.Button;\r\n    /**\r\n     * 自動500次按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto500ButtonV: cc.Button;\r\n    /**\r\n     * 自動1000次按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto1000ButtonH: cc.Button;\r\n    /**\r\n     * 自動1000次按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto1000ButtonV: cc.Button;\r\n    /**\r\n     * 自動直到免費後停止按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoFreeEndButtonH: cc.Button;\r\n    /**\r\n     * 自動直到免費後停止按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoFreeEndButtonV: cc.Button;\r\n    /**\r\n     * 離開菜單頁按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goBackButtonH: cc.Button;\r\n    /**\r\n     * 離開菜單頁按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goBackButtonV: cc.Button;\r\n    /**\r\n     * 離開遊戲按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goHomeButtonH: cc.Button;\r\n    /**\r\n     * 離開遊戲按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goHomeButtonV: cc.Button;\r\n    /**\r\n     * 進入紀錄頁按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract recordButtonH: cc.Button;\r\n    /**\r\n     * 進入紀錄頁按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract recordButtonV: cc.Button;\r\n    /**\r\n     * 進入設定頁按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract settingButtonH: cc.Button;\r\n    /**\r\n     * 進入設定頁按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract settingButtonV: cc.Button;\r\n    /**\r\n     * 進入說明頁按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract descriptionPageButtonH: cc.Button;\r\n    /**\r\n     * 進入說明頁按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract descriptionPageButtonV: cc.Button;\r\n    protected onLoad(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (抽象類)MENU主頁面,單一按鈕配置\r\n * @Example 單一方向遊戲\r\n * @Date 2021-05-26 上午 15:59\r\n * @Version 1.1\r\n */\r\ndeclare abstract class AMenuOnlyButtonTemplate extends AMenuButtonTemplate {\r\n    /**\r\n     * 背景音樂按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract musicButton: cc.Button;\r\n    /**\r\n     * 效果音樂按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract effectButton: cc.Button;\r\n    /**\r\n     * 押住籌碼提高按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betUpButton: cc.Button;\r\n    /**\r\n     * 押住籌碼降低按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract betDownButton: cc.Button;\r\n    /**\r\n     * 自動按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoButton: cc.Button;\r\n    /**\r\n     * 自動50次按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto50Button: cc.Button;\r\n    /**\r\n     * 自動100次按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto100Button: cc.Button;\r\n    /**\r\n     * 自動500次按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto500Button: cc.Button;\r\n    /**\r\n     * 自動1000次按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract auto1000Button: cc.Button;\r\n    /**\r\n     * 自動直到免費後停止按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract autoFreeEndButton: cc.Button;\r\n    /**\r\n     * 離開菜單頁按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goBackButton: cc.Button;\r\n    /**\r\n     * 離開遊戲按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goHomeButton: cc.Button;\r\n    /**\r\n     * 進入紀錄頁按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract recordButton: cc.Button;\r\n    /**\r\n     * 進入設定頁按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract settingButton: cc.Button;\r\n    /**\r\n     * 進入說明頁按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract descriptionPageButton: cc.Button;\r\n    protected onLoad(): void;\r\n}\r\n/**\r\n * 更換頁面type\r\n */\r\ndeclare enum PageChangeType {\r\n    NEXT = \"NEXT\",\r\n    PREVIOUS = \"PREVIOUS\"\r\n}\r\n/**\r\n * 日期type\r\n */\r\ndeclare enum DayType {\r\n    ONE_DAY = \"ONE_DAY\",\r\n    FIVE_DAY = \"FIVE_DAY\",\r\n    TEN_DAY = \"TEN_DAY\"\r\n}\r\n/**\r\n * @Author 蕭立品\r\n * @Description 說明頁按鈕統一事件名稱命名\r\n * @Date 2021-05-10 下午 02:20\r\n * @Version 1.0\r\n */\r\ndeclare abstract class ARecordButtonTemplate extends AGenericTemplate {\r\n    protected onLoad(): void;\r\n    /**\r\n     * 返回上一頁事件\r\n     * @param event - cocos 返回該按鈕屬性\r\n     * @protected\r\n     */\r\n    protected abstract goBackTouchEvent(event: any): void;\r\n    /**\r\n     * 顯示祥單頁面\r\n     * @protected\r\n     */\r\n    abstract showRecordPage(): void;\r\n    /**\r\n     * 紀錄換頁事件\r\n     * @param event - cocos 返回該按鈕屬性\r\n     * @param {PageChangeType} callBack - 返回字串,當前是上一頁按鈕還是下一頁按鈕被觸發\r\n     * @protected\r\n     */\r\n    protected abstract nextAndLastButtonTouchEvent(event: any, callBack: PageChangeType): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 紀錄頁面雙按鈕配置\r\n *  * @Example 同時擁有直橫向方向遊戲\r\n * ```\r\n *      使用事件:\r\n *          fcc.type.ServerEventType.GET_GAME_HISTORY_RESULT\r\n *          callback :  abstract gameHistoryResultEvent(gameHistoryData: GameHistoryData);\r\n * ```\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare abstract class ARecordDoubleButtonTemplate extends ARecordButtonTemplate {\r\n    /**\r\n     * 離開記錄頁按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goBackButtonH: cc.Button;\r\n    /**\r\n     * 離開記錄頁按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goBackButtonV: cc.Button;\r\n    /**\r\n     * 查看一日內紀錄按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract oneDayRecordButtonH: cc.Button;\r\n    /**\r\n     * 查看一日內紀錄按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract oneDayRecordButtonV: cc.Button;\r\n    /**\r\n     * 查看五日內紀錄按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract fiveDayRecordButtonH: cc.Button;\r\n    /**\r\n     * 查看五日內紀錄按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract fiveDayRecordButtonV: cc.Button;\r\n    /**\r\n     * 查看十日內紀錄按鈕H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract tenDayRecordButtonH: cc.Button;\r\n    /**\r\n     * 查看十日內紀錄按鈕V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract tenDayRecordButtonV: cc.Button;\r\n    /**\r\n     * 查看下一頁紀錄H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract nextRecordButtonH: cc.Button;\r\n    /**\r\n     * 查看下一頁紀錄V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract nextRecordButtonV: cc.Button;\r\n    /**\r\n     * 查看上一頁紀錄H\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract previousRecordButtonH: cc.Button;\r\n    /**\r\n     * 查看上一頁紀錄V\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract previousRecordButtonV: cc.Button;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 所有橫式天數按鈕統一監聽\r\n     * @protected\r\n     */\r\n    protected abstract daysRecordTouchEventH(event: any, callBack: DayType): any;\r\n    /**\r\n     * 所有直式天數按鈕統一監聽\r\n     * @protected\r\n     */\r\n    protected abstract daysRecordTouchEventV(event: any, callBack: DayType): any;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 紀錄頁面單一按鈕配置\r\n * @Example 單一方向遊戲\r\n * ```\r\n *      使用事件:\r\n *          fcc.type.ServerEventType.GET_GAME_HISTORY_RESULT\r\n *          callback :  abstract gameHistoryResultEvent(gameHistoryData: GameHistoryData);\r\n * ```\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare abstract class ARecordOnlyButtonTemplate extends ARecordButtonTemplate {\r\n    /**\r\n     * 離開記錄頁按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract goBackButton: cc.Button;\r\n    /**\r\n     * 查看一日內紀錄按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract oneDayRecordButton: cc.Button;\r\n    /**\r\n     * 查看五日內紀錄按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract fiveDayRecordButton: cc.Button;\r\n    /**\r\n     * 查看十日內紀錄按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract tenDayRecordButton: cc.Button;\r\n    /**\r\n     * 查看下一頁紀錄\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract nextRecordButton: cc.Button;\r\n    /**\r\n     * 查看上一頁紀錄\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract previousRecordButton: cc.Button;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 所有天數按鈕統一監聽\r\n     * @protected\r\n     */\r\n    protected abstract daysRecordTouchEventH(event: any, callBack: DayType): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 錯誤視窗模板\r\n * @Date 2021-07-07 下午 14:01\r\n * @Version 0.0.3\r\n */\r\ndeclare abstract class AErrorFrameTemplate extends AGenericTemplate {\r\n    /**\r\n     * 該錯誤框顯示錯誤訊息的 label 組件\r\n     * @type {cc.Label}\r\n     * @protected\r\n     */\r\n    protected abstract errorLabel: cc.Label;\r\n    /**\r\n     * 該錯誤框顯示Button文字的 label 組件\r\n     * @type {cc.Label}\r\n     * @protected\r\n     */\r\n    protected abstract errorButtonLabel: cc.Label;\r\n    /**\r\n     * 該錯誤框顯示按鈕的 Button 組件\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract errorButton: cc.Button;\r\n    /**\r\n     * 該錯誤按鈕監聽事件\r\n     * @default 已經從errorButton組件中綁定事件\r\n     * @protected\r\n     */\r\n    protected abstract errorButtonTouchEvent(): void;\r\n    protected onLoad(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (模板)登入遊戲內進入主遊戲\r\n * ```\r\n *      事件:\r\n *          接收 {ResponseResultNotification} :\r\n *          當server  已成功回傳 TableInfo 會觸發打開 isGetTableInfoResponse = true\r\n *          可在update監聽,並給予前往主畫面事件\r\n *\r\n * ```\r\n * @Date 2021-07-07 上午 10:55\r\n * @Version 0.0.3\r\n */\r\ndeclare abstract class ALoadingTemplate extends AGenericTemplate {\r\n    /**\r\n     * 是否Server已經回傳TableInfo信息\r\n     * @type {boolean}\r\n     * @default false\r\n     * @private\r\n     */\r\n    private _isGetTableInfoResponse;\r\n    /**\r\n     * 進度條組件\r\n     * @type {cc.ProgressBar}\r\n     * @private\r\n     */\r\n    protected abstract progressBar: cc.ProgressBar;\r\n    /**\r\n     * 進入主遊戲場景按鈕\r\n     * @type {cc.Button}\r\n     * @protected\r\n     */\r\n    protected abstract intoMainGameButton: cc.Button;\r\n    /**\r\n     * 讀取條內所有文字的父類\r\n     * @type {cc.Node}\r\n     * @protected\r\n     */\r\n    protected abstract progressTextParent: cc.Node;\r\n    /**\r\n     * 讀取條內所有文字\r\n     */\r\n    protected abstract progressTextLabel: cc.Label[];\r\n    /**\r\n     * 載入主資源\r\n     */\r\n    protected abstract loadResources(): void;\r\n    /**\r\n     * 載入次資源\r\n     */\r\n    protected abstract loadAssetBundle(): void;\r\n    /**\r\n     * 載入外部資源\r\n     */\r\n    protected abstract loadExternalScript(): void;\r\n    /**\r\n     * 當前scene模式,更新當前畫面是配寬高\r\n     */\r\n    protected abstract sceneStyle(): void;\r\n    /**\r\n     * 更新讀取條文字動畫\r\n     */\r\n    protected abstract updateProgressTextAnimation(): void;\r\n    /**\r\n     * 進入主遊戲按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract intoMainGameButtonEvent(): void;\r\n    protected constructor();\r\n    protected onLoad(): void;\r\n    protected start(): void;\r\n    protected responseNotification(): void;\r\n    /**\r\n     * 是否可以進入主遊戲,由server回傳tableInfo後此class改變狀態\r\n     * @type {boolean}\r\n     * @default false\r\n     * @private\r\n     */\r\n    get isGetTableInfoResponse(): boolean;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @FIXME: 程式碼須修復\r\n * @Description 進度讀取diaLog模板\r\n * @Date 2021-05-11 下午 05:41\r\n * @Version 1.0\r\n */\r\ndeclare abstract class ALoadingFrameTemplate extends AGenericTemplate {\r\n    protected abstract loadingDialogNode: cc.Node;\r\n    protected abstract progressBar: cc.ProgressBar;\r\n    protected abstract progressText: cc.Label;\r\n    protected progressValue: number;\r\n    protected timeOut: number;\r\n    protected addProgressValue: any;\r\n    private timer;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 初始化讀取條\r\n     * @private\r\n     */\r\n    private loadingInitialize;\r\n    runProgress(resName: string): Promise<void>;\r\n    private progressTimer;\r\n    private closeLoadingDiaLog;\r\n    /**\r\n     * 確認當下該資源是否正在加載\r\n     * @param {string} resName\r\n     * @param {(value: (PromiseLike<void> | void)) => void} resolve\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    private checkHasRes;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 瞇排模板\r\n * ```\r\n *      事件:\r\n *         接收{ScrollFocusStateNotification} : 瞇排事件觸發時\r\n * ```\r\n * @Date 2021-05-26 下午 17:24\r\n * @Version 1.1\r\n */\r\ndeclare abstract class ALookAtTemplate extends AGenericTemplate {\r\n    /**\r\n     * 當前所有列的瞇排特效animation\r\n     * @type {Array<cc.Animation>}\r\n     * @protected\r\n     */\r\n    protected abstract allLookAtEffect: Array<cc.Animation>;\r\n    /**\r\n     * 瞇排事件通知\r\n     * @type {ScrollFocusStateObserver}\r\n     * @private\r\n     */\r\n    private _scrollFocusStateObserver;\r\n    /**\r\n     * 顯示瞇排特效\r\n     * @param {number} index:第幾列\r\n     * @protected\r\n     */\r\n    protected abstract showLookAtEffect(index: number): any;\r\n    /**\r\n     * 關閉瞇排特效\r\n     * @param {number} index : 第幾列\r\n     * @protected\r\n     */\r\n    protected abstract removeLookAtEffect(index: number): any;\r\n    protected onLoad(): void;\r\n    /**\r\n     * 添加推撥的接收事件\r\n     */\r\n    addNotification(): void;\r\n    /**\r\n     * 瞇排事件訂閱者\r\n     * @private\r\n     */\r\n    private getScrollFocusStateObserver;\r\n}\r\n/**\r\n * @Author 蕭立品\r\n * @Description 顯示 winLine\r\n * ```\r\n *  注意:\r\n *      需實作方法:\r\n *          //隱藏組件,時間可自己抓\r\n *          hideNode(lineNumber?:number):Promise<void>;\r\n *          //顯示贏線格子動畫,無做同步,時間需自己抓\r\n *          showWinGrid(gridNumber:number):void;\r\n *          //顯示贏分\r\n *          showWinPoint(lineNumber?:number):void;\r\n *          //強制關閉winLine輪播\r\n *          clear();\r\n *\r\n *      知識:\r\n *      vector (向量): 值為當前該Line物件移動方向\r\n *          例如1:初始將該 LineNode :\r\n *          LineNode{\r\n *              Anchor 調整為(1,0),\r\n *              Rotation:-90,\r\n *          };\r\n *          需求為線條由左往右移動,此時向量應為 cc.v2(0,1);\r\n *          總之就是因為調整方向角Rotation = -90,實際上往上方向的向量會因此往右移動\r\n *\r\n *          例如2:初始將該 LineNode :\r\n *          LineNode{\r\n *              Anchor 調整為(0,1),\r\n *              Rotation:0,\r\n *          };\r\n *          需求為線條由左往右移動,此時向量應為 cc.v2(1,0);\r\n *          此時向量只需給予正常模式\r\n *\r\n *          向量知識:\r\n *              cc.v2(1,0) = 往右\r\n *              cc.v2(0,1) = 往上\r\n *              cc.v2(-1,0) = 往左\r\n *              cc.v2(0,-1) = 往下\r\n *\r\n * ```\r\n * @Date 2021-07-13 下午 01:37\r\n * @Version 1.0\r\n */\r\ndeclare abstract class AWinLinTemplate extends AGenericTemplate {\r\n    /**\r\n     * 存放所有贏線會經過的點(老虎機所有格子的中心點)\r\n     * @type {Array<Map<number, number>>}\r\n     * @private\r\n     */\r\n    protected allGridPosition: Array<Map<number, number>>;\r\n    /**\r\n     * 存放該局所有會使用到的線\r\n     * ```\r\n     *   Array[第幾條線]<Map<線段編號(0~slot長度+1),線段 node>>\r\n     * ```\r\n     * @type {Array<Map<number, cc.Node>>}\r\n     * @private\r\n     */\r\n    private allWinLine;\r\n    /**\r\n     * 存放該局所有會使用到的粒子\r\n     * ```\r\n     *   Map<線段編號,粒子 node>\r\n     * ```\r\n     * @type {Array<Map<number, cc.Node>>}\r\n     * @private\r\n     */\r\n    private allParticle;\r\n    /**\r\n     * 判斷是否持續執行單線播放\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    private isStop;\r\n    /**\r\n     * 向量 : 當前線條執行方向\r\n     * @type {cc.Vec2}\r\n     * @private\r\n     */\r\n    protected lineVector: cc.Vec2;\r\n    /**\r\n     * 向量 : 當前粒子執行方向\r\n     * @type {cc.Vec2}\r\n     * @private\r\n     */\r\n    protected particleVector: cc.Vec2;\r\n    /**\r\n     * 初始角度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected angle: number;\r\n    /**\r\n     * 執行線條動畫時間(單位為S)\r\n     * 建議 : 0.5 以下\r\n     */\r\n    protected runLineSpeed: number;\r\n    /**\r\n     * 執行粒子移動動畫時間(單位為S)\r\n     * 建議 : 0.5 以下\r\n     */\r\n    protected runParticleSpeed: number;\r\n    /**\r\n     * 執行各粒子動畫間格時間(單位為S)\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    protected runParticleIntervalTime: number;\r\n    /**\r\n     * 線條容器層級位置,因容器位置會改變線條層級顯示\r\n     * 注意:需要再最上層參數可以是 cc.macro.MAX_ZINDEX\r\n     * 默認為 cc.macro.MAX_ZINDEX -1;\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected lineContainerIndex: number;\r\n    /**\r\n     * 粒子容器層級位置,因容器位置會改變線條層級顯示\r\n     * 注意:需要再最上層參數可以是 cc.macro.MAX_ZINDEX\r\n     * 默認為 cc.macro.MAX_ZINDEX;\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected particleContainerIndex: number;\r\n    /**\r\n     * 每列格子數量\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected abstract gridCont: number;\r\n    /**\r\n     * 每個格子高度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected abstract gridHeight: number;\r\n    /**\r\n     * 贏分線條,Sprite組件\r\n     * @protected\r\n     */\r\n    protected abstract lineSprite: cc.Sprite;\r\n    /**\r\n     * 贏分粒子,Prefab組件\r\n     * @protected\r\n     */\r\n    protected abstract particlePrefab: cc.Prefab;\r\n    /**\r\n     * slot所有列,計算點用\r\n     * @type {cc.Node[]}\r\n     * @protected\r\n     */\r\n    protected abstract gridRow: cc.Node[];\r\n    /**\r\n     * 存放所有贏線的容器\r\n     * @type {cc.Node}\r\n     * @private\r\n     */\r\n    protected _lineContainer: cc.Node;\r\n    /**\r\n     * 存放所有粒子的容器\r\n     * @type {cc.Node}\r\n     * @private\r\n     */\r\n    private _particleContainer;\r\n    /**\r\n     * 隱藏物件,當贏線動畫跑完之後,需自行隱藏該線條,與贏分格子\r\n     * ```\r\n     *  隱藏線條方法可使用 :\r\n     *      restoreLines(lineNumber?)\r\n     *\r\n     * ```\r\n     * @param {number} lineNumber - 有參數回傳為單一線條,無參數回傳為所有線條\r\n     * @return {Promise<void>}\r\n     * @protected\r\n     */\r\n    protected abstract hideNode(lineNumber?: number): Promise<void>;\r\n    /**\r\n     * 顯示獲獎格子動畫\r\n     * @param {number} gridNumber - 獲獎的格子\r\n     * @param {number} lineNumber - 正在執行哪條線\r\n     * @protected\r\n     */\r\n    protected abstract showWinGrid(gridNumber: number, lineNumber: number): void;\r\n    /**\r\n     * 顯示獲獎分數\r\n     * @param {number} lineNumber - 有參數回傳為單一線條,無參數回傳為所有線條\r\n     * @protected\r\n     */\r\n    protected abstract showWinPoint(lineNumber?: number): void;\r\n    protected onCreate(): void;\r\n    protected start(): void;\r\n    /**\r\n     * 還原使用過的贏線為初始狀態\r\n     * @param {number} lineNumber - 有傳參會只對該線條內的物件初始,無傳參會對所有物件\r\n     */\r\n    restoreNode(lineNumber?: number): void;\r\n    /**\r\n     * 建構該局贏線的Node容器\r\n     */\r\n    protected buildWinLineContainer(): void;\r\n    /**\r\n     * 建構該局贏線的Node容器\r\n     */\r\n    protected buildParticleContainer(): void;\r\n    /**\r\n     * 執行單條贏線依序播放\r\n     * @param {Array<Array<number>>} answers\r\n     */\r\n    play(answers: Array<Array<number>>): Promise<void>;\r\n    /**\r\n     * 顯示所有線\r\n     * @private\r\n     */\r\n    private runLine;\r\n    /**\r\n     * 執行全贏線動畫\r\n     * @param {Array<Array<number>>} answer\r\n     */\r\n    playAll(answer: Array<Array<number>>): Promise<void>;\r\n    /**\r\n     * 顯示所有線\r\n     * @private\r\n     */\r\n    private runAllLine;\r\n    /**\r\n     * 初始各線段初始位置\r\n     * @param {number} lineNumber\r\n     * @param {number} lineChildNumber\r\n     * @param {number} answer\r\n     * @private\r\n     */\r\n    private initLinePosition;\r\n    /**\r\n     * 初始各線段粒子初始位置\r\n     * @param {number} lineNumber\r\n     * @param {number} answer\r\n     * @private\r\n     */\r\n    private initParticlePosition;\r\n    /**\r\n     * 拿取座標位置\r\n     * @param {number} lineNumber - 哪一條線\r\n     * @param {number} lineChildNumber - 第幾線段:(整條線段拆分成 該Slot列數+1)\r\n     * @param {number} answer - 答案 (第幾個grid)\r\n     * @return {cc.Vec2} - 座標\r\n     * @private\r\n     */\r\n    private getPosition;\r\n    /**\r\n     * 執行播放跑線動畫\r\n     * @param {number} lineNumber - 哪一條線\r\n     * @param {Array<number>} answer - 該線條會經過的所有答案\r\n     * @return {Promise<void>}\r\n     * @private\r\n     */\r\n    private runLineToAsync;\r\n    /**\r\n     * 依序執行該線條遞迴播放跑線動畫\r\n     * @NODE 對應A點 > B點 > C 點方式,依序使用遞迴方式將線條連線\r\n     * @param {number} lineNumber - 哪一條線\r\n     * @param {Array<number>} answer - 該線條會經過的所有答案\r\n     * @param {(value: (void | PromiseLike<void>)) => void} resolve - 釋放異步\r\n     * @param {number} lineChildNumber - 由遞迴增加,每遞迴一次更新下個線段\r\n     */\r\n    private lineToGridAnimationLoop;\r\n    /**\r\n     * 執行粒子動畫\r\n     * @param {number} lineNumber - 哪一條線\r\n     * @param {Array<number>} answer - 該線條會經過的所有答案\r\n     * @return {Promise<void>}\r\n     * @private\r\n     */\r\n    private runParticleToAsync;\r\n    /**\r\n     * 依序執行粒子遞迴播放跑線動畫\r\n     * @NODE 對應A點 -> B點 -> C 點方式,依序使用遞迴方式將粒子跑完\r\n     * @param {number} lineNumber - 哪一條線\r\n     * @param {Array<number>} answer - 該線條會經過的所有答案\r\n     * @param {(value: (void | PromiseLike<void>)) => void} resolve - 釋放異步\r\n     * @param {number} lineChildNumber - 由遞迴增加,每遞迴一次更新下個線段\r\n     */\r\n    private particleToGridAnimationLoop;\r\n    /**\r\n     * 複製組件\r\n     * @param {number} quantity - 贏幾條線\r\n     * @return {this}\r\n     * @protected\r\n     */\r\n    copyWinLineNode(quantity: number): void;\r\n    /**\r\n     * 複製粒子\r\n     * @param {number} quantity - 贏幾條線\r\n     * @return {this}\r\n     * @protected\r\n     */\r\n    protected copyParticleToContainer(quantity: number): this;\r\n    /**\r\n     * 複製贏線\r\n     * @param {number} quantity - 贏幾條線\r\n     * @return {this}\r\n     * @protected\r\n     */\r\n    protected copyWinLineToContainer(quantity: number): this;\r\n    /**\r\n     * 初始所有line會經過的點\r\n     * ```\r\n     *      注意:如果點位不正常,請自行override實現\r\n     * ```\r\n     */\r\n    protected initWinLinPosition(): Array<Map<number, number>>;\r\n    /**\r\n     * 獲取兩點間距離\r\n     * ```\r\n     *      兩點間距離公式 :\r\n     *          d = √(p2.x - p1.x)^2 + (p2.y- p1.y)^2\r\n     * ```\r\n     * @param {cc.Vec2} p1 - 起點\r\n     * @param {cc.Vec2} p2 - 要到達的點\r\n     * @return {number} - 兩點間距離(因兩條線間隙問題,無條件進位+1)\r\n     * @private\r\n     */\r\n    private getDistanceBetweenTwoPoints;\r\n    /**\r\n     * 獲取兩點間角度\r\n     * ```\r\n     *      1.獲取P1到P2的向量方向\r\n     *          公式:X:(P2.x -P1.x),Y:(P2.y - P1-y)\r\n     *\r\n     *      2.弧度轉換角度公式:\r\n     *         angle = radians * (180 / Math.PI)\r\n     * ```\r\n     * @param {cc.Vec2} p1 - 起始點\r\n     * @param {cc.Vec2} p2 - 終點\r\n     * @param {cc.Vec2} vector - 向量角度\r\n     * @return {number} - 兩點間角度\r\n     */\r\n    private getAngleBetweenTwoPoints;\r\n    /**\r\n     * 清除所有該局使用完的贏線\r\n     */\r\n    clear(): void;\r\n    get particleContainer(): cc.Node;\r\n    get lineContainer(): cc.Node;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 進入主遊戲時需初始的操作\r\n * @Date 2021-07-01 下午 20:24\r\n * @Version 0.0.3\r\n */\r\ndeclare abstract class AMainInitTemplate extends AGenericTemplate {\r\n    protected onLoad(): void;\r\n    /**\r\n     * 建立詳單頁面\r\n     */\r\n    protected abstract setHistoryDetail(): any;\r\n    /**\r\n     * 實例化所有動態加載的prefab\r\n     */\r\n    protected abstract prefabInstantiate(): any;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description slot 模板\r\n * @NOTE 需事先綁定 StopNowStateNotification 和 SpeedStateChangeNotification\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare abstract class ASlotTemplate implements fcc.IF.ISlot {\r\n    /**\r\n     * 由 fcc.slotStyleMgr build 實現\r\n     * @type {fcc.IF.ISlotSetting}\r\n     * @protected\r\n     */\r\n    protected styleData: fcc.IF.ISlotSetting;\r\n    /**\r\n     * 使否需要即停\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    protected isSlotImmediateStop: boolean;\r\n    /**\r\n     * 當前的加速狀態\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    protected isSpeedUp: boolean;\r\n    /**\r\n     * 當前加速速率 : 無加速狀態 = 1\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    protected speedRatio: number;\r\n    /**\r\n     * 即停狀態通知時,該事件推播給綁定者\r\n     * @type {StopNowStateObserver}\r\n     * @protected\r\n     */\r\n    protected stopNowStateObserver: StopNowStateObserver;\r\n    /**\r\n     * 遊戲加速狀態改變時,當有事件推送時,將會將該事件推播給綁定者\r\n     * @type {SpeedStateChangeObserver}\r\n     * @protected\r\n     */\r\n    protected speedStateChangeObserver: SpeedStateChangeObserver;\r\n    /**\r\n     * 當server回傳該局答案時,當有事件推送時,將會將該事件推播給綁定者\r\n     * @type {ResponseResultObserver}\r\n     * @private\r\n     */\r\n    private responseResultObserver;\r\n    /**\r\n     * Loop 老虎機方法\r\n     * @return {Promise<void>}\r\n     */\r\n    abstract runSlotAnimation(): Promise<void>;\r\n    /**\r\n     * 啟動老虎機時過場動畫方法\r\n     * @return {Promise<void>}\r\n     */\r\n    abstract sineInSlot(): Promise<void>;\r\n    /**\r\n     * 初始化該輪所有狀態\r\n     */\r\n    abstract initializeState(): void;\r\n    /**\r\n     * 是否server已經回傳結果\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    protected isResultOK: boolean;\r\n    protected constructor(styleData: fcc.IF.ISlotSetting, configManager: fcc.IF.ISlotConfigManager);\r\n    /**\r\n     * 添加推播事件\r\n     */\r\n    addNotification(): void;\r\n    /**\r\n     * 即停監聽事件\r\n     * @returns {StopNowStateObserver}\r\n     * @private\r\n     */\r\n    private getStopNowStateObserver;\r\n    /**\r\n     * 加速按鈕監聽事件\r\n     * @private\r\n     */\r\n    private getSpeedStateChangeObserver;\r\n    /**\r\n     * Server是否回傳答案事件\r\n     * @return {ResponseResultObserver}\r\n     * @private\r\n     */\r\n    private getResponseResultObserver;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (介面)所有類型Slot一般狀態接收封包的父類\r\n * @Date 2021-05-31 下午 03:45\r\n * @Version 1.0\r\n */\r\ninterface ISlotBaseResultModel {\r\n    /**\r\n     * 0: 押注成功 1:遊戲狀態不符 2:超過\r\n     */\r\n    State: number;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     */\r\n    TotalWinPoint: number;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     */\r\n    UserPointAfter: number;\r\n    /**\r\n     * 玩家現有金額(押注後)\r\n     */\r\n    UserPointBefore: number;\r\n    /**\r\n     * 15格的資料\r\n     */\r\n    Grid: Array<number>;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     */\r\n    LookAt: Array<number>;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (介面)所有類型Slot免費狀態接收封包的父類\r\n * @Date 2021-05-31 下午 03:45\r\n * @Version 1.0\r\n */\r\ninterface ISlotFreeBaseResultModel {\r\n    /**\r\n     * 0: 押注成功 1: 非免費時間押注\r\n     */\r\n    State: number;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     */\r\n    UserPointAfter: number;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     */\r\n    GameState: number;\r\n    /**\r\n     * 剩餘免費遊戲次數 (0:沒有 1~99次)\r\n     */\r\n    Count: number;\r\n    /**\r\n     * 免費遊戲累計贏分\r\n     */\r\n    FreeSpinWin: number;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     */\r\n    TotalWinPoint: number;\r\n    /**\r\n     * 15格的資料\r\n     */\r\n    Grid: Array<number>;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     */\r\n    LookAt: Array<number>;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 一般版老虎機,執行圖標圖案與答案圖案相同\r\n *  ```\r\n *      SLOT STYLE : fcc.SlotImgSetting;\r\n *\r\n *      需擁有物件\r\n *          音效 {\"SlotTurn\"}: 轉動聲音\r\n *          音效 {\"SlotStop\"}: 停軸聲音\r\n *          音效 {\"getFreeIcon\"+\"index\"}: 免費圖標音效\r\n *          推撥 {ScrollFocusStateNotification} : 瞇排的推播事件\r\n *          推播 {SlotRowEndNotification} : 所有軸停止事件\r\n *          接收 {StopNowStateNotification} : 即停的推播事件\r\n *          接收 {SpeedStateChangeNotification} : 加速的推播事件\r\n *          model {ISlotBaseResultModel} : 一般獲獎model\r\n *          model {ISlotBaseResultModel} : 免費獲獎model\r\n *  ```\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare class NormalSlotTemplate extends ASlotTemplate {\r\n    /**\r\n     * 一般停止最少轉動次數\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotTurnCount: number;\r\n    /**\r\n     * 遊戲每格格子間的速度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotGirdSpeed: number;\r\n    /**\r\n     * 遊戲每列的格子數量\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotRowGridCount: number;\r\n    /**\r\n     * 老虎機格子高度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotGridHeight: number;\r\n    /**\r\n     * 確認該軸是否有 free 圖標\r\n     * @param index\r\n     */\r\n    protected freeIconCount: number;\r\n    /**\r\n     * 加速倍率\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly speedUpMultiple: number;\r\n    /**\r\n     * 執行老虎機動畫的列\r\n     * @type {Array<cc.Node>}\r\n     * @private\r\n     */\r\n    protected readonly slotColumnToTween: Array<cc.Node>;\r\n    /**\r\n     * 跑遊戲更換位置的grid 節點\r\n     * @type {Map<number, Array<cc.Node>>}\r\n     * @private\r\n     */\r\n    protected readonly gridNodeToMap: Map<number, Array<cc.Node>>;\r\n    /**\r\n     * 跑遊戲更換答案的grid 節點\r\n     * @type {Map<number, Array<cc.Sprite>>}\r\n     * @private\r\n     */\r\n    protected readonly gridSpriteToMap: Map<number, Array<cc.Sprite>>;\r\n    /**\r\n     * 遊戲中所有靜態grid圖片\r\n     * @param {StyleData} styleData\r\n     */\r\n    protected readonly gridImg: Map<string, cc.SpriteFrame>;\r\n    /**\r\n     * 漸入時TWEEN動畫類型\r\n     */\r\n    protected readonly sineInEasing: string;\r\n    /**\r\n     * 淡出時TWEEN 動畫類型\r\n     */\r\n    protected readonly sineOutEasing: string;\r\n    /**\r\n     * 遊戲每列是否已經結束\r\n     * @type {Array<boolean>}\r\n     * @private\r\n     */\r\n    protected readonly isSlotEnd: Array<boolean>;\r\n    /**\r\n     * 遊戲瞇排是否已經確認過\r\n     */\r\n    protected readonly isRowCheckLookAt: Map<number, boolean>;\r\n    /**\r\n     * [\"當前要跑幾個格子\",\"slot高度\"]\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    protected readonly rowData: Array<number>;\r\n    /**\r\n     * 儲存SERVER答案的Model\r\n     * @type {ISlotBaseResultModel}\r\n     * @private\r\n     */\r\n    protected resultModel: ISlotBaseResultModel | ISlotFreeBaseResultModel;\r\n    /**\r\n     * 瞇排轉動次數\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private readonly lookAtCount;\r\n    /**\r\n     * 記錄每輪轉動次數\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private readonly rowTurnCount;\r\n    constructor(styleData: fcc.SlotImgSetting, configManager: fcc.IF.ISlotConfigManager);\r\n    /**\r\n     * 計算當前格子高度\r\n     * @private\r\n     */\r\n    protected getCalculateSlotHeight(): number;\r\n    /**\r\n     * 轉動前動畫,先往上,在往下1/2格\r\n     * @return {Promise<void>}\r\n     */\r\n    sineInSlot(): Promise<void>;\r\n    /**\r\n     * Loop 老虎機方法\r\n     * @return {Promise<void>}\r\n     */\r\n    runSlotAnimation(): Promise<void>;\r\n    /**\r\n     * 開始執行格子輪播動畫\r\n     * 如果server未回傳正確答案,將持續隨機圖片無限跑\r\n     * @param index{number} 當前跑的是哪一列\r\n     * @param resolve 當跑完時回傳Promise 讓Api執行下一段方法\r\n     * @param numberOfTimes 監聽當前跑了幾輪,sever回傳答案後才開始計算圈數\r\n     */\r\n    protected executeSlotAnimation(index: number, resolve?: () => void, numberOfTimes?: number): void;\r\n    /**\r\n     * 拿取該要跑的次數\r\n     * @param index - 哪一列\r\n     * @return {number} - 該列要Loop的數字\r\n     * @private\r\n     */\r\n    protected getSlotTurnCount(index: number): number;\r\n    /**\r\n     * 推送瞇排事件\r\n     * @param {boolean} isShow - 是否要打開該列的瞇排特效\r\n     * @param {number} index - 第幾列\r\n     */\r\n    protected notifyLookAtEvent(isShow: boolean, index: number): void;\r\n    /**\r\n     * 檢查是否可以即停\r\n     * @param {number} index - 當前第幾列觸發即停事件\r\n     * @param {() => void} resolve - 異步阻塞\r\n     * @return {boolean}\r\n     */\r\n    protected isCanStop(index: number, resolve: () => void): boolean;\r\n    /**\r\n     * 更新輪播格子位置\r\n     * @param rowNodes - 哪一列的 node 需要更換圖片位置\r\n     * @param columnIndex - 當前是第幾列\r\n     */\r\n    protected updateGridPositionAndRandomImg(rowNodes: Array<cc.Node>, columnIndex: number): void;\r\n    /**\r\n     * 對該列正確結果顯示在頂部,透過動畫,並將結果顯示給user\r\n     * @param {number} index : 哪一列\r\n     * @param resolve\r\n     */\r\n    protected showAnswer(index: number, resolve?: any): void;\r\n    /**\r\n     * 檢查是否需要瞇牌\r\n     * @param index{number}:檢查該列是否需要瞇牌\r\n     * @return {boolean} : 如果需要瞇牌,返回true\r\n     * @private\r\n     */\r\n    protected checkLookAt(index: number): boolean;\r\n    /**\r\n     * 在答案顯示後,馬上給予回彈效果\r\n     * @param index{number} : 哪一列已經顯示答案完畢\r\n     * @param resolve{()=>void} : 當所有列都顯示答案且回彈效果完畢時,通知可以進行下一步\r\n     */\r\n    protected sineOutAnimation(index: number, resolve: () => void): void;\r\n    /**\r\n     * 更新正確答案\r\n     * 答案更新再每列最上面位置,等待掉下來,顯示正確答案給USER\r\n     * @param {number} index : 要更新哪一列最上面三個grid 為正確答案\r\n     * @private\r\n     */\r\n    protected updateGridAnswer(index: number): void;\r\n    /**\r\n     * 初始化該輪所有狀態\r\n     */\r\n    initializeState(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 一般版老虎機,可更改各軸停止時間\r\n *  ```\r\n *      SLOT STYLE : fcc.SlotImgSetting;\r\n *\r\n *      需擁有物件\r\n *          音效 {\"SlotTurn\"}: 轉動聲音\r\n *          音效 {\"SlotStop\"}: 停軸聲音\r\n *          音效 {\"getFreeIcon\"+\"index\"}: 免費圖標音效\r\n *          推撥 {ScrollFocusStateNotification} : 瞇排的推播事件\r\n *          推播 {SlotRowEndNotification} : 所有軸停止事件\r\n *          接收 {StopNowStateNotification} : 即停的推播事件\r\n *          接收 {SpeedStateChangeNotification} : 加速的推播事件\r\n *          model {ISlotBaseResultModel} : 一般獲獎model\r\n *          model {ISlotBaseResultModel} : 免費獲獎model\r\n *  ```\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare class NormalSlotSpecialTemplate extends ASlotTemplate {\r\n    /**\r\n     * 一般停止最少轉動次數\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotTurnCount: number;\r\n    /**\r\n     * 各軸間停止時間\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    protected readonly slotRowTime: number;\r\n    /**\r\n     * 遊戲每格格子間的速度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotGirdSpeed: number;\r\n    /**\r\n     * 遊戲每列的格子數量\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotRowGridCount: number;\r\n    /**\r\n     * 老虎機格子高度\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly slotGridHeight: number;\r\n    /**\r\n     * 加速倍率\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected readonly speedUpMultiple: number;\r\n    /**\r\n     * 執行老虎機動畫的列\r\n     * @type {Array<cc.Node>}\r\n     * @private\r\n     */\r\n    protected readonly slotColumnToTween: Array<cc.Node>;\r\n    /**\r\n     * 瞇排停止時間\r\n     */\r\n    protected readonly lookAtTime: number;\r\n    /**\r\n     * 跑遊戲更換位置的grid 節點\r\n     * @type {Map<number, Array<cc.Node>>}\r\n     * @private\r\n     */\r\n    protected readonly gridNodeToMap: Map<number, Array<cc.Node>>;\r\n    /**\r\n     * 跑遊戲更換答案的grid 節點\r\n     * @type {Map<number, Array<cc.Sprite>>}\r\n     * @private\r\n     */\r\n    protected readonly gridSpriteToMap: Map<number, Array<cc.Sprite>>;\r\n    /**\r\n     * 遊戲中所有靜態grid圖片\r\n     * @param {StyleData} styleData\r\n     */\r\n    protected readonly gridImg: Map<string, cc.SpriteFrame>;\r\n    /**\r\n     * 漸入時TWEEN動畫類型\r\n     */\r\n    protected readonly sineInEasing: string;\r\n    /**\r\n     * 淡出時TWEEN 動畫類型\r\n     */\r\n    protected readonly sineOutEasing: string;\r\n    /**\r\n     * 遊戲每列是否已經結束\r\n     * @type {Array<boolean>}\r\n     * @private\r\n     */\r\n    protected readonly isSlotEnd: Array<boolean>;\r\n    /**\r\n     * 遊戲各列是否開始監聽停止時間\r\n     */\r\n    protected readonly isTimeEndListener: Array<boolean>;\r\n    /**\r\n     * 遊戲瞇排是否已經確認過\r\n     */\r\n    protected readonly isRowCheckLookAt: Map<number, boolean>;\r\n    /**\r\n     * 儲存SERVER答案的Model\r\n     * @type {ISlotBaseResultModel}\r\n     * @private\r\n     */\r\n    protected resultModel: ISlotBaseResultModel | ISlotFreeBaseResultModel;\r\n    /**\r\n     * 當前停軸監聽\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private nowTimer;\r\n    constructor(styleData: fcc.SlotImgSpecialSetting, configManager: fcc.IF.ISlotConfigManager);\r\n    /**\r\n     * 轉動前動畫,先往上,在往下1/2格\r\n     * @return {Promise<void>}\r\n     */\r\n    sineInSlot(): Promise<void>;\r\n    /**\r\n     * Loop 老虎機方法\r\n     * @return {Promise<void>}\r\n     */\r\n    runSlotAnimation(): Promise<void>;\r\n    /**\r\n     * 開始執行格子輪播動畫\r\n     * 如果server未回傳正確答案,將持續隨機圖片無限跑\r\n     * @param index{number} 當前跑的是哪一列\r\n     * @param resolve 當跑完時回傳Promise 讓Api執行下一段方法\r\n     * @param numberOfTimes 監聽第一列跑了幾輪,sever回傳答案後才開始計算圈數\r\n     */\r\n    protected executeSlotAnimation(index: number, resolve?: () => void, numberOfTimes?: number): void;\r\n    /**\r\n     * 開啟時間監聽,當符合該時間時會改變 結束狀態為TRUE;\r\n     * @protected\r\n     */\r\n    protected startRowTimeListener(index: number): void;\r\n    /**\r\n     * 更新單個GRID格子位置,並給予隨機圖片\r\n     * @param rowNodes - 要更換圖片的該列物件\r\n     * @param rowIndex - 當前是第幾列\r\n     */\r\n    protected updateOnlyGridPositionAndRandomImg(rowNodes: Array<cc.Node>, rowIndex: number): void;\r\n    /**\r\n     * 推送瞇排事件\r\n     * @param {boolean} isShow - 是否要打開該列的瞇排特效\r\n     * @param {number} index - 第幾列\r\n     */\r\n    protected notifyLookAtEvent(isShow: boolean, index: number): void;\r\n    /**\r\n     * 檢查是否可以即停\r\n     * @param {number} index - 當前第幾列觸發即停事件\r\n     * @param {() => void} resolve - 異步阻塞\r\n     * @return {boolean}\r\n     */\r\n    protected checkImmediateStopState(index: number, resolve: () => void): boolean;\r\n    /**\r\n     * 對該列正確結果顯示在頂部,透過動畫,並將結果顯示給user\r\n     * @param {number} index : 哪一列\r\n     * @param resolve\r\n     */\r\n    protected showAnswerAnimation(index: number, resolve?: any): void;\r\n    /**\r\n     * 檢查是否需要瞇牌\r\n     * @param index{number}:檢查該列是否需要瞇牌\r\n     * @return {boolean} : 如果需要瞇牌,返回true\r\n     * @private\r\n     */\r\n    protected checkLookAt(index: number): boolean;\r\n    /**\r\n     * 在答案顯示後,馬上給予回彈效果\r\n     * @param index{number} : 哪一列已經顯示答案完畢\r\n     * @param resolve{()=>void} : 當所有列都顯示答案且回彈效果完畢時,通知可以進行下一步\r\n     */\r\n    protected sineOutAnimation(index: number, resolve: () => void): void;\r\n    /**\r\n     * 更新正確答案\r\n     * 答案更新再每列最上面位置,等待掉下來,顯示正確答案給USER\r\n     * @param {number} index : 要更新哪一列最上面三個grid 為正確答案\r\n     * @private\r\n     */\r\n    protected updateGridAnswer(index: number): void;\r\n    /**\r\n     * 初始化該輪所有狀態\r\n     */\r\n    initializeState(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 一般版老虎機,執行動畫為模糊圖標\r\n *  ```\r\n *      SLOT STYLE : fcc.SlotBurredImgSetting;\r\n *\r\n *      需擁有物件\r\n *          音效 {\"SlotTurn\"}: 轉動聲音\r\n *          音效 {\"SlotStop\"}: 停軸聲音\r\n *          音效 {\"getFreeIcon\"+\"index\"}: 免費圖標音效\r\n *          推撥 {ScrollFocusStateNotification} : 瞇排的推播事件\r\n *          接收 {StopNowStateNotification} : 即停的推播事件\r\n *          接收 {SpeedStateChangeNotification} : 加速的推播事件\r\n *          model {NoLineResult} : 一般獲獎model\r\n *          model {NoLineFreeResult} : 免費獲獎model\r\n *  ```\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare class SlotBurredImgTemplate extends NormalSlotTemplate {\r\n    /**\r\n     * 所有模糊圖標\r\n     * @type {Map<string, cc.SpriteFrame>}\r\n     * @private\r\n     */\r\n    private gridBurredImg;\r\n    constructor(styleData: fcc.SlotBurredImgSetting, configManager: fcc.IF.ISlotConfigManager);\r\n    /**\r\n     * 更新輪播格子位置(更新的Gird圖片修正為模糊圖片)\r\n     * @param rowNodes - 哪一列的 node 需要更換圖片位置\r\n     * @param columnIndex - 當前是第幾列\r\n     */\r\n    protected updateGridPositionAndRandomImg(rowNodes: Array<cc.Node>, columnIndex: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 一般版老虎機,執行動畫為模糊圖標\r\n *  ```\r\n *      SLOT STYLE : fcc.SlotBurredImgSetting;\r\n *\r\n *      需擁有物件\r\n *          音效 {\"SlotTurn\"}: 轉動聲音\r\n *          音效 {\"SlotStop\"}: 停軸聲音\r\n *          音效 {\"getFreeIcon\"+\"index\"}: 免費圖標音效\r\n *          推撥 {ScrollFocusStateNotification} : 瞇排的推播事件\r\n *          接收 {StopNowStateNotification} : 即停的推播事件\r\n *          接收 {SpeedStateChangeNotification} : 加速的推播事件\r\n *          model {NoLineResult} : 一般獲獎model\r\n *          model {NoLineFreeResult} : 免費獲獎model\r\n *  ```\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare class SlotBurredImgSpecialTemplate extends NormalSlotSpecialTemplate {\r\n    /**\r\n     * 所有模糊圖標\r\n     * @type {Map<string, cc.SpriteFrame>}\r\n     * @private\r\n     */\r\n    private gridBurredImg;\r\n    constructor(styleData: fcc.SlotBurredImgSpecialSetting, configManager: fcc.IF.ISlotConfigManager);\r\n    /**\r\n     * 更新單個GRID格子位置,並給予隨機圖片\r\n     * @param rowNodes - 要更換圖片的該列物件\r\n     * @param rowIndex - 當前是第幾列\r\n     */\r\n    protected updateOnlyGridPositionAndRandomImg(rowNodes: Array<cc.Node>, rowIndex: number): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 各種類型資源\r\n * @NOTE: 需事前綁定 ResponseResultNotification\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\ndeclare abstract class ASlotInitializeTemplate extends AGenericTemplate {\r\n    /**\r\n     * Slot 一般答案回傳結果\r\n     * @type {ISlotBaseResultModel}\r\n     * @protected\r\n     */\r\n    protected abstract normalResult: ISlotBaseResultModel;\r\n    /**\r\n     * Slot 免費答案回傳結果\r\n     * @type {ISlotFreeBaseResultModel}\r\n     * @protected\r\n     */\r\n    protected abstract freeResult: ISlotFreeBaseResultModel;\r\n    /**\r\n     * 執行老虎機動畫的列 所有列\r\n     * @type {Array<cc.Node>}\r\n     * @protected\r\n     */\r\n    protected abstract slotRow: Array<cc.Node>;\r\n    /**\r\n     * 執行動畫的所有格子\r\n     * @type {Map<number, Array<cc.Node>>}\r\n     * @protected\r\n     */\r\n    protected abstract gridNodeToMap: Map<number, Array<cc.Node>>;\r\n    /**\r\n     * 更換圖片的所有格子\r\n     * @type {Map<number, Array<cc.Sprite>>}\r\n     * @protected\r\n     */\r\n    protected abstract gridSpriteToMap: Map<number, Array<cc.Sprite>>;\r\n    /**\r\n     * SlotStyle 初設定,如無符合的功能樣式 可繼承抽象類 ASlot 自定義使用\r\n     */\r\n    protected abstract slotStyleSetting(): void;\r\n    protected onLoad(): void;\r\n    protected start(): void;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (介面)擴展類有線免費狀態封包\r\n * @Date 2021-05-31 下午 03:45\r\n * @Version 1.0\r\n */\r\ninterface IExtendHasLineFreeResult extends ISlotFreeBaseResultModel {\r\n    /**\r\n     * 黏性圖標編號\r\n     */\r\n    StickySymbol: number;\r\n    /**\r\n     * 黏性圖標位置\r\n     */\r\n    StickyChange: Array<number>;\r\n    /**\r\n     * 每條線贏分\r\n     */\r\n    LineWin: Array<number>;\r\n    /**\r\n     * 每條線贏幾格\r\n     */\r\n    LineGrid: Array<number>;\r\n    /**\r\n     * 再中免費遊戲次數 0:無 1~99:次\r\n     */\r\n    FreeToFree: number;\r\n    /**\r\n     * 各局主遊戲 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    BaseLevelWin: number;\r\n    /**\r\n     * 免費遊戲結果 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    FreeLevelWin: number;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (介面)有線類免費狀態封包\r\n * @Date 2021-05-31 下午 03:45\r\n * @Version 1.0\r\n */\r\ninterface IHasLineFreeResultModule extends ISlotFreeBaseResultModel {\r\n    /**\r\n     * 是否有鬼牌 0:沒有 1:有\r\n     */\r\n    ChangeState: number;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     */\r\n    Change: Array<number>;\r\n    /**\r\n     * 每條線贏分\r\n     */\r\n    LineWin: Array<number>;\r\n    /**\r\n     * 每條線贏幾格\r\n     */\r\n    LineGrid: Array<number>;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎  10:免費-無 11:免費-大獎 12:免費-巨獎 13:免費-超級巨獎 20:小遊戲-無 21:小遊戲-大獎 22:小遊戲-巨獎 23:小遊戲-超級巨獎\r\n     */\r\n    LevelWin: number;\r\n    /**\r\n     * 再中免費遊戲次數 0:無 1~99:次\r\n     */\r\n    FreeToFree: number;\r\n    /**\r\n     * 各局主遊戲 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    BaseLevelWin: number;\r\n    /**\r\n     * 免費遊戲結果 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    FreeLevelWin: number;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (介面)無線類免費狀態封包\r\n * @Date 2021-05-31 下午 03:45\r\n * @Version 1.0\r\n */\r\ninterface INoLineFreeResultModel extends ISlotFreeBaseResultModel {\r\n    /**\r\n     * 是否有鬼牌 0:沒有 1:有\r\n     */\r\n    ChangeState: number;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     */\r\n    Change: Array<number>;\r\n    /**\r\n     * 哪幾格贏 0:沒贏 1:贏\r\n     */\r\n    GridWin: Array<number>;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎  10:免費-無 11:免費-大獎 12:免費-巨獎 13:免費-超級巨獎 20:小遊戲-無 21:小遊戲-大獎 22:小遊戲-巨獎 23:小遊戲-超級巨獎\r\n     */\r\n    LevelWin: number;\r\n    /**\r\n     * 再中免費遊戲次數 0:無 1~99:次\r\n     */\r\n    FreeToFree: number;\r\n    /**\r\n     * 各局主遊戲 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    BaseLevelWin: number;\r\n    /**\r\n     * 免費遊戲結果 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    FreeLevelWin: number;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 黏性Slot遊戲狀態封包\r\n * @Date 2021-06-03 下午 04:58\r\n * @Version 1.0\r\n */\r\ninterface IExtendHasLineResult extends ISlotBaseResultModel {\r\n    /**\r\n     * 15格的資料\r\n     */\r\n    Grid: Array<number>;\r\n    /**\r\n     * 是否有神秘寶箱 0:沒有 1:有\r\n     */\r\n    SecretState: number;\r\n    /**\r\n     * 神秘寶箱位置 0:沒有 1:有\r\n     */\r\n    SecretChange: Array<number>;\r\n    /**\r\n     * 神秘寶箱格子圖案\r\n     */\r\n    SecretSymbol: number;\r\n    /**\r\n     * 每條線贏分\r\n     */\r\n    LineWin: Array<number>;\r\n    /**\r\n     * 每條線贏幾格\r\n     */\r\n    LineGrid: Array<number>;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     */\r\n    GameState: number;\r\n    /**\r\n     * 免費遊戲次數 (0:沒有 1~99次)\r\n     */\r\n    FreeSpinCount: number;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     */\r\n    LookAt: Array<number>;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    BaseLevelWin: number;\r\n    /**\r\n     * 活動轉數\r\n     */\r\n    BonusEventCount: number;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 有線Slot遊戲狀態封包\r\n * @Date 2021-05-31 下午 03:46\r\n * @Version 1.0\r\n */\r\ninterface IHasLineResultModule extends ISlotBaseResultModel {\r\n    /**\r\n     * 15格的資料\r\n     */\r\n    Grid: Array<number>;\r\n    /**\r\n     * 是否有鬼牌擴展 0:沒有 1:有\r\n     */\r\n    ChangeState: number;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     */\r\n    Change: Array<number>;\r\n    /**\r\n     * 每條線贏分\r\n     */\r\n    LineWin: Array<number>;\r\n    /**\r\n     * 每條線贏幾格\r\n     */\r\n    LineGrid: Array<number>;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     */\r\n    GameState: number;\r\n    /**\r\n     * 免費遊戲次數 (0:沒有 1~99次)\r\n     */\r\n    FreeSpinCount: number;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     */\r\n    LookAt: Array<number>;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    BaseLevelWin: number;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 無線Slot遊戲狀態封包\r\n * @Date 2021-07-01 下午 20:24\r\n * @Version 0.0.3\r\n */\r\ninterface INoLineResultModel extends ISlotBaseResultModel {\r\n    /**\r\n     * 是否有鬼牌擴展 0:沒有 1:有\r\n     */\r\n    ChangeState: number;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     */\r\n    Change: Array<number>;\r\n    /**\r\n     * 哪幾格贏 0:沒贏 1:贏\r\n     */\r\n    GridWin: Array<number>;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     */\r\n    GameState: number;\r\n    /**\r\n     * 免費遊戲次數 (0:沒有 1~99次)\r\n     */\r\n    FreeSpinCount: number;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     */\r\n    BaseLevelWin: number;\r\n    /**\r\n     * 活動轉數\r\n     */\r\n    BonusEventCount: number;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description TODO\r\n * @Date 2021-05-31 下午 03:47\r\n * @Version 1.0\r\n */\r\ninterface IHasLineTableInfoModule extends IBaseTableInfoModel {\r\n    /**\r\n     * 是否為線遊戲(0:無線 1:有線)\r\n     */\r\n    IsLines: number;\r\n    /**\r\n     * 幾線遊戲\r\n     */\r\n    Line: string;\r\n    /**\r\n     * 線位置\r\n     */\r\n    LineGridPos: Object;\r\n    /**\r\n     * 15格的資料 顯示用\r\n     */\r\n    Grid: Array<number>;\r\n    /**\r\n     * 0:大獎 總押注倍數 1:巨獎 總押注倍數 2:超級巨獎 總押注倍數\r\n     */\r\n    LevelWinPoint: Array<number>;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description TODO\r\n * @Date 2021-05-31 下午 03:47\r\n * @Version 1.0\r\n */\r\ninterface INoLineTableInfoModule extends IBaseTableInfoModel {\r\n    /**\r\n     * 是否為線遊戲(0:無線 1:有線)\r\n     */\r\n    IsLines: number;\r\n    /**\r\n     * 15格的資料 顯示用\r\n     */\r\n    Grid: Array<number>;\r\n    /**\r\n     * 0:大獎 總押注倍數 1:巨獎 總押注倍數 2:超級巨獎 總押注倍數\r\n     */\r\n    LevelWinPoint: Array<number>;\r\n    /**\r\n     * 幾線遊戲\r\n     */\r\n    Line: string;\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 擴展類有線免費狀態封包\r\n * @Date 2021-06-03 下午 04:51\r\n * @Version 1.0\r\n */\r\ndeclare class ExtendHasLineFreeResult implements IExtendHasLineFreeResult {\r\n    /**\r\n     * 0: 押注成功 1: 非免費時間押注\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _State;\r\n    /**\r\n     * 15格的資料\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 黏性圖標編號\r\n     * @type {number}\r\n     */\r\n    private _StickySymbol;\r\n    /**\r\n     * 黏性圖標位置\r\n     * @type {Array<number>}\r\n     */\r\n    private _StickyChange;\r\n    /**\r\n     * 每條線贏分\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineWin;\r\n    /**\r\n     * 每條線贏幾格\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineGrid;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _TotalWinPoint;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointAfter;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _GameState;\r\n    /**\r\n     * 剩餘免費遊戲次數 (0:沒有 1~99次)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _Count;\r\n    /**\r\n     * 免費遊戲累計贏分\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeSpinWin;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LookAt;\r\n    /**\r\n     * 再中免費遊戲次數 0:無 1~99:次\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeToFree;\r\n    /**\r\n     * 各局主遊戲 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _BaseLevelWin;\r\n    /**\r\n     * 免費遊戲結果 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeLevelWin;\r\n    constructor();\r\n    get State(): number;\r\n    set State(value: number);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get StickySymbol(): number;\r\n    set StickySymbol(value: number);\r\n    get StickyChange(): Array<number>;\r\n    set StickyChange(value: Array<number>);\r\n    get LineWin(): Array<number>;\r\n    set LineWin(value: Array<number>);\r\n    get LineGrid(): Array<number>;\r\n    set LineGrid(value: Array<number>);\r\n    get TotalWinPoint(): number;\r\n    set TotalWinPoint(value: number);\r\n    get UserPointAfter(): number;\r\n    set UserPointAfter(value: number);\r\n    get GameState(): number;\r\n    set GameState(value: number);\r\n    get Count(): number;\r\n    set Count(value: number);\r\n    get FreeSpinWin(): number;\r\n    set FreeSpinWin(value: number);\r\n    get LookAt(): Array<number>;\r\n    set LookAt(value: Array<number>);\r\n    get FreeToFree(): number;\r\n    set FreeToFree(value: number);\r\n    get BaseLevelWin(): number;\r\n    set BaseLevelWin(value: number);\r\n    get FreeLevelWin(): number;\r\n    set FreeLevelWin(value: number);\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 有線免費狀態封包\r\n * @Date 2021-06-03 下午 12:04\r\n * @Version 1.0\r\n */\r\ndeclare class HasLineFreeResult implements IHasLineFreeResultModule {\r\n    /**\r\n     * 0: 押注成功 1: 非免費時間押注\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _State;\r\n    /**\r\n     * 15格的資料\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 是否有鬼牌 0:沒有 1:有\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _ChangeState;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Change;\r\n    /**\r\n     * 每條線贏分\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineWin;\r\n    /**\r\n     * 每條線贏幾格\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineGrid;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _TotalWinPoint;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointAfter;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _GameState;\r\n    /**\r\n     * 剩餘免費遊戲次數 (0:沒有 1~99次)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _Count;\r\n    /**\r\n     * 免費遊戲累計贏分\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeSpinWin;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LookAt;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎  10:免費-無 11:免費-大獎 12:免費-巨獎 13:免費-超級巨獎 20:小遊戲-無 21:小遊戲-大獎 22:小遊戲-巨獎 23:小遊戲-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _LevelWin;\r\n    /**\r\n     * 再中免費遊戲次數 0:無 1~99:次\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeToFree;\r\n    /**\r\n     * 各局主遊戲 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _BaseLevelWin;\r\n    /**\r\n     * 免費遊戲結果 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeLevelWin;\r\n    constructor();\r\n    get State(): number;\r\n    set State(value: number);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get ChangeState(): number;\r\n    set ChangeState(value: number);\r\n    get Change(): Array<number>;\r\n    set Change(value: Array<number>);\r\n    get LineWin(): Array<number>;\r\n    set LineWin(value: Array<number>);\r\n    get LineGrid(): Array<number>;\r\n    set LineGrid(value: Array<number>);\r\n    get TotalWinPoint(): number;\r\n    set TotalWinPoint(value: number);\r\n    get UserPointAfter(): number;\r\n    set UserPointAfter(value: number);\r\n    get GameState(): number;\r\n    set GameState(value: number);\r\n    get Count(): number;\r\n    set Count(value: number);\r\n    get FreeSpinWin(): number;\r\n    set FreeSpinWin(value: number);\r\n    get LookAt(): Array<number>;\r\n    set LookAt(value: Array<number>);\r\n    get LevelWin(): number;\r\n    set LevelWin(value: number);\r\n    get FreeToFree(): number;\r\n    set FreeToFree(value: number);\r\n    get BaseLevelWin(): number;\r\n    set BaseLevelWin(value: number);\r\n    get FreeLevelWin(): number;\r\n    set FreeLevelWin(value: number);\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 無線免費狀態封包\r\n * @Date 2021-06-03 下午 12:04\r\n * @Version 1.0\r\n */\r\ndeclare class NoLineFreeResult implements INoLineFreeResultModel {\r\n    /**\r\n     * 0: 押注成功 1: 非免費時間押注\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _State;\r\n    /**\r\n     * 15格的資料\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 是否有鬼牌 0:沒有 1:有\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _ChangeState;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Change;\r\n    /**\r\n     * 哪幾格贏 0:沒贏 1:贏\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _GridWin;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _TotalWinPoint;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointAfter;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _GameState;\r\n    /**\r\n     * 剩餘免費遊戲次數 (0:沒有 1~99次)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _Count;\r\n    /**\r\n     * 免費遊戲累計贏分\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeSpinWin;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LookAt;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎  10:免費-無 11:免費-大獎 12:免費-巨獎 13:免費-超級巨獎 20:小遊戲-無 21:小遊戲-大獎 22:小遊戲-巨獎 23:小遊戲-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _LevelWin;\r\n    /**\r\n     * 再中免費遊戲次數 0:無 1~99:次\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeToFree;\r\n    /**\r\n     * 各局主遊戲 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _BaseLevelWin;\r\n    /**\r\n     * 免費遊戲結果 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeLevelWin;\r\n    constructor();\r\n    get State(): number;\r\n    set State(value: number);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get ChangeState(): number;\r\n    set ChangeState(value: number);\r\n    get Change(): Array<number>;\r\n    set Change(value: Array<number>);\r\n    get GridWin(): Array<number>;\r\n    set GridWin(value: Array<number>);\r\n    get TotalWinPoint(): number;\r\n    set TotalWinPoint(value: number);\r\n    get UserPointAfter(): number;\r\n    set UserPointAfter(value: number);\r\n    get GameState(): number;\r\n    set GameState(value: number);\r\n    get Count(): number;\r\n    set Count(value: number);\r\n    get FreeSpinWin(): number;\r\n    set FreeSpinWin(value: number);\r\n    get LookAt(): Array<number>;\r\n    set LookAt(value: Array<number>);\r\n    get LevelWin(): number;\r\n    set LevelWin(value: number);\r\n    get FreeToFree(): number;\r\n    set FreeToFree(value: number);\r\n    get BaseLevelWin(): number;\r\n    set BaseLevelWin(value: number);\r\n    get FreeLevelWin(): number;\r\n    set FreeLevelWin(value: number);\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 擴展類有線一般狀態封包\r\n * @Date 2021-06-03 下午 04:50\r\n * @Version 1.0\r\n */\r\ndeclare class ExtendHasLineResult implements IExtendHasLineResult {\r\n    /**\r\n     * 0: 押注成功 1:遊戲狀態不符 2:超過\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _State;\r\n    /**\r\n     * 15格的資料\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 是否有神秘寶箱 0:沒有 1:有\r\n     * @type {number}\r\n     */\r\n    private _SecretState;\r\n    /**\r\n     * 神秘寶箱位置 0:沒有 1:有神秘寶箱位置 0:沒有 1:有\r\n     * @type {Array<number>}\r\n     */\r\n    private _SecretChange;\r\n    /**\r\n     * 神秘寶箱格子圖案\r\n     */\r\n    private _SecretSymbol;\r\n    /**\r\n     * 每條線贏分\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LineWin;\r\n    /**\r\n     * 每條線贏幾格\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LineGrid;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _TotalWinPoint;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointAfter;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _GameState;\r\n    /**\r\n     * 免費遊戲次數 (0:沒有 1~99次)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeSpinCount;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LookAt;\r\n    /**\r\n     * 玩家現有金額(押注後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointBefore;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _BaseLevelWin;\r\n    /**\r\n     * 活動轉數\r\n     */\r\n    private _BonusEventCount;\r\n    constructor();\r\n    get State(): number;\r\n    set State(value: number);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get SecretState(): number;\r\n    set SecretState(value: number);\r\n    get SecretChange(): Array<number>;\r\n    set SecretChange(value: Array<number>);\r\n    get SecretSymbol(): number;\r\n    set SecretSymbol(value: number);\r\n    get LineWin(): Array<number>;\r\n    set LineWin(value: Array<number>);\r\n    get LineGrid(): Array<number>;\r\n    set LineGrid(value: Array<number>);\r\n    get TotalWinPoint(): number;\r\n    set TotalWinPoint(value: number);\r\n    get UserPointAfter(): number;\r\n    set UserPointAfter(value: number);\r\n    get GameState(): number;\r\n    set GameState(value: number);\r\n    get FreeSpinCount(): number;\r\n    set FreeSpinCount(value: number);\r\n    get LookAt(): Array<number>;\r\n    set LookAt(value: Array<number>);\r\n    get UserPointBefore(): number;\r\n    set UserPointBefore(value: number);\r\n    get BaseLevelWin(): number;\r\n    set BaseLevelWin(value: number);\r\n    get BonusEventCount(): number;\r\n    set BonusEventCount(value: number);\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 有線一般狀態封包\r\n * @Date 2021-05-31 下午 01:41\r\n * @Version 1.0\r\n */\r\ndeclare class HasLineResult implements IHasLineResultModule {\r\n    /**\r\n     * 0: 押注成功 1:遊戲狀態不符 2:超過\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _State;\r\n    /**\r\n     * 15格的資料\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 是否有鬼牌擴展 0:沒有 1:有\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Change;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _ChangeState;\r\n    /**\r\n     * 每條線贏分\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LineWin;\r\n    /**\r\n     * 每條線贏幾格\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LineGrid;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _TotalWinPoint;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointAfter;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _GameState;\r\n    /**\r\n     * 免費遊戲次數 (0:沒有 1~99次)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeSpinCount;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LookAt;\r\n    /**\r\n     * 玩家現有金額(押注後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointBefore;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _BaseLevelWin;\r\n    constructor();\r\n    get State(): number;\r\n    set State(value: number);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get Change(): Array<number>;\r\n    set Change(value: Array<number>);\r\n    get ChangeState(): number;\r\n    set ChangeState(value: number);\r\n    get LineWin(): Array<number>;\r\n    set LineWin(value: Array<number>);\r\n    get LineGrid(): Array<number>;\r\n    set LineGrid(value: Array<number>);\r\n    get TotalWinPoint(): number;\r\n    set TotalWinPoint(value: number);\r\n    get UserPointAfter(): number;\r\n    set UserPointAfter(value: number);\r\n    get GameState(): number;\r\n    set GameState(value: number);\r\n    get FreeSpinCount(): number;\r\n    set FreeSpinCount(value: number);\r\n    get LookAt(): Array<number>;\r\n    set LookAt(value: Array<number>);\r\n    get UserPointBefore(): number;\r\n    set UserPointBefore(value: number);\r\n    get BaseLevelWin(): number;\r\n    set BaseLevelWin(value: number);\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 無線一般狀態封包\r\n * @Date 2021-05-31 下午 01:41\r\n * @Version 1.0\r\n */\r\ndeclare class NoLineResult implements INoLineResultModel {\r\n    /**\r\n     * 0: 押注成功 1:遊戲狀態不符 2:超過\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _State;\r\n    /**\r\n     * 15格的資料\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 是否有鬼牌擴展 0:沒有 1:有\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _ChangeState;\r\n    /**\r\n     * 15格的資料 換圖 0:不換 1:換\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _Change;\r\n    /**\r\n     * 哪幾格贏 0:沒贏 1:贏\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _GridWin;\r\n    /**\r\n     * 總贏得金額 (0:輸了 大於0:贏了 )\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _TotalWinPoint;\r\n    /**\r\n     * 玩家現有金額(贏分後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointAfter;\r\n    /**\r\n     * 接下來遊戲狀態(0:一般 1:免費遊戲 2:小遊戲)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _GameState;\r\n    /**\r\n     * 免費遊戲次數 (0:沒有 1~99次)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _FreeSpinCount;\r\n    /**\r\n     * 瞇牌0:不用 1:瞇牌效果\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    private _LookAt;\r\n    /**\r\n     * 玩家現有金額(押注後)\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _UserPointBefore;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎  11:免費-大獎 12:免費-巨獎 13:免費-超級巨獎 21:小遊戲-大獎 22:小遊戲-巨獎 23:小遊戲-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _LevelWin;\r\n    /**\r\n     * 噴錢效果 0:無 1:一般-大獎 2:一般-巨獎 3:一般-超級巨獎\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _BaseLevelWin;\r\n    /**\r\n     * 活動轉數\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    private _BonusEventCount;\r\n    constructor();\r\n    get State(): number;\r\n    set State(value: number);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get ChangeState(): number;\r\n    set ChangeState(value: number);\r\n    get Change(): Array<number>;\r\n    set Change(value: Array<number>);\r\n    get GridWin(): Array<number>;\r\n    set GridWin(value: Array<number>);\r\n    get TotalWinPoint(): number;\r\n    set TotalWinPoint(value: number);\r\n    get UserPointAfter(): number;\r\n    set UserPointAfter(value: number);\r\n    get GameState(): number;\r\n    set GameState(value: number);\r\n    get FreeSpinCount(): number;\r\n    set FreeSpinCount(value: number);\r\n    get LookAt(): Array<number>;\r\n    set LookAt(value: Array<number>);\r\n    get UserPointBefore(): number;\r\n    set UserPointBefore(value: number);\r\n    get LevelWin(): number;\r\n    set LevelWin(value: number);\r\n    get BaseLevelWin(): number;\r\n    set BaseLevelWin(value: number);\r\n    get BonusEventCount(): number;\r\n    set BonusEventCount(value: number);\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 有線類遊戲資訊\r\n * @Date 2021-06-03 下午 12:01\r\n * @Version 1.0\r\n */\r\ndeclare class HasLineTableInfo implements IHasLineTableInfoModule {\r\n    /**\r\n     * 是否為線遊戲(0:無線 1:有線)\r\n     * @type {number}\r\n     */\r\n    private _IsLines;\r\n    /**\r\n     * 押注 乘以的倍數(有線版本為自己的線數 無限版本為固定倍數)\r\n     * @type {number}\r\n     */\r\n    private _BetTimes;\r\n    /**\r\n     * 幾線遊戲\r\n     * @type {string}\r\n     */\r\n    private _Line;\r\n    /**\r\n     * 賠率表\r\n     * @type {object}\r\n     */\r\n    private _PayTable;\r\n    /**\r\n     * 賠率表\r\n     * @type {Object}\r\n     */\r\n    private _LineGridPos;\r\n    /**\r\n     * 每線押注[0.1、0.2、0.3、0.4、0.5、1、2、3、4、5]\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineBet;\r\n    /**\r\n     * 總押注[2.5、5、7.5、10、12.5、25、50、75、100、125]\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineTotalBet;\r\n    /**\r\n     * 是否為線遊戲(0:無線 1:有線)\r\n     * @type {Array<number>}\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 玩家現有金額\r\n     * @type {number}\r\n     */\r\n    private _UserPoint;\r\n    /**\r\n     * 0:大獎 總押注倍數 1:巨獎 總押注倍數 2:超級巨獎 總押注倍數\r\n     * @type {Array<number>}\r\n     */\r\n    private _LevelWinPoint;\r\n    /**\r\n     * 活動模式 0 沒有 11 轉盤\r\n     * @type {number}\r\n     */\r\n    private _EventMode;\r\n    /**\r\n     * 活動轉數需求\r\n     * @type {number}\r\n     */\r\n    private _EventRequire;\r\n    /**\r\n     * 預設押住倍率\r\n     */\r\n    private _DefaultBetIndex;\r\n    constructor();\r\n    get IsLines(): number;\r\n    set IsLines(value: number);\r\n    get BetTimes(): number;\r\n    set BetTimes(value: number);\r\n    get Line(): string;\r\n    set Line(value: string);\r\n    get PayTable(): object;\r\n    set PayTable(value: object);\r\n    get LineGridPos(): Object;\r\n    set LineGridPos(value: Object);\r\n    get LineBet(): Array<number>;\r\n    set LineBet(value: Array<number>);\r\n    get LineTotalBet(): Array<number>;\r\n    set LineTotalBet(value: Array<number>);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get UserPoint(): number;\r\n    set UserPoint(value: number);\r\n    get LevelWinPoint(): Array<number>;\r\n    set LevelWinPoint(value: Array<number>);\r\n    get DefaultBetIndex(): number;\r\n    set DefaultBetIndex(value: number);\r\n    get EventMode(): number;\r\n    set EventMode(value: number);\r\n    get EventRequire(): number;\r\n    set EventRequire(value: number);\r\n}\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 無線類遊戲資訊\r\n * @Date 2021-06-03 下午 12:01\r\n * @Version 1.0\r\n */\r\ndeclare class NoLineTableInfo implements INoLineTableInfoModule {\r\n    /**\r\n     * 是否為線遊戲(0:無線 1:有線)\r\n     * @type {number}\r\n     */\r\n    private _IsLines;\r\n    /**\r\n     * 押注 乘以的倍數(有線版本為自己的線數 無限版本為固定倍數)\r\n     * @type {number}\r\n     */\r\n    private _BetTimes;\r\n    /**\r\n     * 幾線遊戲\r\n     * @type {string}\r\n     */\r\n    private _Line;\r\n    /**\r\n     * 賠率表\r\n     * @type {object}\r\n     */\r\n    private _PayTable;\r\n    /**\r\n     * 每線押注[0.1、0.2、0.3、0.4、0.5、1、2、3、4、5]\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineBet;\r\n    /**\r\n     * 總押注[2.5、5、7.5、10、12.5、25、50、75、100、125]\r\n     * @type {Array<number>}\r\n     */\r\n    private _LineTotalBet;\r\n    /**\r\n     * 15格的資料 顯示用\r\n     * @type {Array<number>}\r\n     */\r\n    private _Grid;\r\n    /**\r\n     * 玩家現有金額\r\n     * @type {number}\r\n     */\r\n    private _UserPoint;\r\n    /**\r\n     * 0:大獎 總押注倍數 1:巨獎 總押注倍數 2:超級巨獎 總押注倍數\r\n     * @type {Array<number>}\r\n     */\r\n    private _LevelWinPoint;\r\n    /**\r\n     * 活動模式 0 沒有 11 轉盤\r\n     * @type {number}\r\n     */\r\n    private _EventMode;\r\n    /**\r\n     * 活動轉數需求\r\n     * @type {number}\r\n     */\r\n    private _EventRequire;\r\n    /**\r\n     * 預設押住倍率\r\n     */\r\n    DefaultBetIndex: number;\r\n    constructor();\r\n    get IsLines(): number;\r\n    set IsLines(value: number);\r\n    get BetTimes(): number;\r\n    set BetTimes(value: number);\r\n    get Line(): string;\r\n    set Line(value: string);\r\n    get PayTable(): object;\r\n    set PayTable(value: object);\r\n    get LineBet(): Array<number>;\r\n    set LineBet(value: Array<number>);\r\n    get LineTotalBet(): Array<number>;\r\n    set LineTotalBet(value: Array<number>);\r\n    get Grid(): Array<number>;\r\n    set Grid(value: Array<number>);\r\n    get UserPoint(): number;\r\n    set UserPoint(value: number);\r\n    get LevelWinPoint(): Array<number>;\r\n    set LevelWinPoint(value: Array<number>);\r\n    get EventMode(): number;\r\n    set EventMode(value: number);\r\n    get EventRequire(): number;\r\n    set EventRequire(value: number);\r\n}\r\n/**\r\n * 框架Module化\r\n */\r\nexport { fcc, AGenericTemplate, OverrideComponent, ACenterTemplate, AutoStateChangeNotification, ScrollFocusStateNotification, SpeedStateChangeNotification, StopNowStateNotification, UserMoneyChangeNotification, UserTotalBetChangeNotification, UserWinPointStateNotification, ResponseResultNotification, SlotRowEndNotification, AutoStateChangeObserver, ScrollFocusStateObserver, SpeedStateChangeObserver, StopNowStateObserver, UserMoneyChangeObserver, UserTotalBetChangeObserver, UserWinPointStateObserver, ResponseResultObserver, SlotRowEndObserver, AMainGameButtonTemplate, AMainGameOnlyButtonTemplate, AMainGameDoubleButtonTemplate, AMenuButtonTemplate, AMenuDoubleButtonTemplate, AMenuOnlyButtonTemplate, ARecordButtonTemplate, ARecordDoubleButtonTemplate, ARecordOnlyButtonTemplate, AErrorFrameTemplate, ALoadingTemplate, ALoadingFrameTemplate, ALookAtTemplate, AWinLinTemplate, AMainInitTemplate, ASlotTemplate, NormalSlotTemplate, NormalSlotSpecialTemplate, SlotBurredImgTemplate, SlotBurredImgSpecialTemplate, ASlotInitializeTemplate, IExtendHasLineFreeResult, IHasLineFreeResultModule, INoLineFreeResultModel, ISlotFreeBaseResultModel, IExtendHasLineResult, IHasLineResultModule, INoLineResultModel, ISlotBaseResultModel, IBaseTableInfoModel, IHasLineTableInfoModule, INoLineTableInfoModule, ExtendHasLineFreeResult, HasLineFreeResult, NoLineFreeResult, ExtendHasLineResult, HasLineResult, NoLineResult, HasLineTableInfo, NoLineTableInfo };\r\n"
}