{"version":3,"sources":["assets\\Scene\\Typer\\Typer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Typer extends cc.Component {\r\n  @property(cc.Label)\r\n  label: cc.Label = null;\r\n  @property(cc.RichText)\r\n  richText: cc.RichText = null;\r\n\r\n  typerTimer: number = null; // 计时器Id\r\n\r\n  onLoad() {\r\n    this.showRichTextTyper();\r\n  }\r\n\r\n  beforeDestroy() {\r\n    // Destroy前确保定时器关闭\r\n    this.typerTimer && clearInterval(this.typerTimer);\r\n  }\r\n\r\n  showLabelTyper() {\r\n    let str = '我是异名\\n这是Label打字效果';\r\n    this.richText.string = '';\r\n    this.label.string = '';\r\n    this.makeLaberTyper(str);\r\n  }\r\n\r\n  makeLaberTyper(str: string) {\r\n    let charArr = str.split('');\r\n    let charIdx = 0;\r\n\r\n    this.typerTimer && clearInterval(this.typerTimer);\r\n    this.typerTimer = setInterval(() => {\r\n      if (charIdx >= charArr.length) {\r\n        this.typerTimer && clearInterval(this.typerTimer);\r\n      } else {\r\n        charIdx += 1;\r\n        this.label.string = charArr.slice(0, charIdx).join('');\r\n      }\r\n    }, 50);\r\n  }\r\n\r\n  showRichTextTyper() {\r\n    let str = '我是<color=#1B262E>异名</c>\\n这是<color=#1B262E>富文本打字机</color>效果';\r\n    this.richText.string = '';\r\n    this.label.string = '';\r\n    this.makeRichTextTyper(str);\r\n  }\r\n\r\n  makeRichTextTyper(str: string) {\r\n    let delimiterCharList: any = ['✁', '✂', '✃', '✄', '✺', '✻', '✼', '❄', '❅', '❆', '❇', '❈', '❉', '❊'];\r\n    let regexp = /<.+?\\/?>/g;\r\n    let matchArr = str.match(regexp);\r\n    let delimiterChar = delimiterCharList.find((item) => str.indexOf(item) == -1);\r\n    let replaceStr = str.replace(regexp, delimiterChar);\r\n    let tagInfoArr = [];\r\n    let temp = [];\r\n    let tagInfo: { endStr?; endtIdx?; startIdx?; startStr? } = {};\r\n    let num = 0;\r\n    for (let i = 0; i < replaceStr.length; i++) {\r\n      if (replaceStr[i] == delimiterChar) {\r\n        temp.push(i);\r\n        if (temp.length >= 2) {\r\n          tagInfo.endStr = matchArr[tagInfoArr.length * 2 + 1];\r\n          tagInfo.endtIdx = i - num;\r\n          tagInfoArr.push(tagInfo);\r\n          temp = [];\r\n          tagInfo = {};\r\n        } else {\r\n          tagInfo.startIdx = i - num;\r\n          tagInfo.startStr = matchArr[tagInfoArr.length * 2];\r\n        }\r\n        num += 1;\r\n      }\r\n    }\r\n\r\n    let showCharArr = str.replace(regexp, '').split('');\r\n    let typerArr = [];\r\n    for (let i = 1; i <= showCharArr.length; i++) {\r\n      let temp = showCharArr.join('').slice(0, i);\r\n      let addLen = 0;\r\n      for (let j = 0; j < tagInfoArr.length; j++) {\r\n        let tagInfo = tagInfoArr[j];\r\n        let start = tagInfo.startIdx;\r\n        let end = tagInfo.endtIdx;\r\n        if (i > start && i <= end) {\r\n          temp = temp.slice(0, start + addLen) + tagInfo.startStr + temp.slice(start + addLen) + tagInfo.endStr;\r\n          addLen += tagInfo.startStr.length + tagInfo.endStr.length;\r\n        } else if (i > end) {\r\n          temp =\r\n            temp.slice(0, start + addLen) +\r\n            tagInfo.startStr +\r\n            temp.slice(start + addLen, end + addLen) +\r\n            tagInfo.endStr +\r\n            temp.slice(end + addLen);\r\n          addLen += tagInfo.startStr.length + tagInfo.endStr.length;\r\n        }\r\n      }\r\n      typerArr.unshift(temp);\r\n    }\r\n\r\n    this.typerTimer && clearInterval(this.typerTimer);\r\n    this.typerTimer = setInterval(() => {\r\n      if (typerArr.length) {\r\n        this.richText.string = typerArr.pop();\r\n      } else {\r\n        this.typerTimer && clearInterval(this.typerTimer);\r\n      }\r\n    }, 50);\r\n  }\r\n}\r\n"]}