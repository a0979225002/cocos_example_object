{"version":3,"sources":["assets\\Script\\DrawManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { DrawBoard } from './DrawBoard';\nexport class DrawManager {\n\n\tprivate _node: cc.Node;\n\tprivate strokeColor: cc.Color = cc.color(0, 0, 255)\n\tprivate lineWidth: number = 10;\n\n\tprivate _width: number;\n\tprivate _height: number;\n\n\tprivate _drawNode: cc.Node;\n\tprivate _drawBoard: DrawBoard;\n\tprivate _drawSprite: cc.Sprite;\n\n\tconstructor() {\n\n\t}\n\n\tpublic init(ui: cc.Node) {\n\t\tthis._node = ui;\n\n\t\tthis.initDraw();\n\t\tthis.addEvent();\n\t}\n\n\tpublic get drawNode(): cc.Node {\n\t\treturn this._drawNode;\n\t}\n\tpublic setStrokeColor(color: cc.Color) {\n\t\tthis.strokeColor = color;\n\t\tthis._drawBoard.setColor(this.strokeColor.getR(), this.strokeColor.getG(), this.strokeColor.getB(), this.strokeColor.getA());\n\t}\n\tpublic setLineWidth(lineWidth: number) {\n\t\tthis.lineWidth = lineWidth;\n\t\tthis._drawBoard.setLineWidth(this.lineWidth);\n\t}\n\n\n\tprivate initDraw(): void {\n\t\tlet size: cc.Size = this._node.getContentSize();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\tthis._drawNode = new cc.Node();\n\t\tthis._drawSprite = this._drawNode.addComponent(cc.Sprite);\n\t\tthis._drawSprite.spriteFrame = new cc.SpriteFrame();\n\t\tthis._drawBoard = new DrawBoard(size.width, size.height);\n\n\t\tlet data: Uint8Array = this._drawBoard.getData();\n\t\tlet texture: cc.Texture2D = new cc.Texture2D();\n\t\ttexture.initWithData(data, 16, this._width, this._height)\n\t\ttexture.setFlipY(true);\n\t\tthis._drawSprite.spriteFrame.setTexture(texture);\n\t}\n\n\n\n\tprivate addEvent() {\n\t\tthis._node.targetOff(this);\n\t\tthis._node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n\t\tthis._node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n\t\tthis._node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n\t\tthis._node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\t}\n\tpublic unregistEvents() {\n\t\tthis._node.targetOff(this);\n\t\tcc.systemEvent.targetOff(this);\n\t}\n\tprivate onTouchStart(evt: cc.Event.EventTouch) {\n\t\tlet loc: cc.Vec2 = evt.getLocation();\n\n\t\tlet drawLoc: cc.Vec2 = this._transition(loc);\n\t\tthis._drawBoard.moveTo(drawLoc.x, drawLoc.y);\n\n\t\treturn true;\n\t}\n\n\tprivate onTouchMove(evt: cc.Event.EventTouch) {\n\t\tlet touchLoc: cc.Vec2 = evt.getLocation();\n\n\t\tlet drawLoc: cc.Vec2 = this._transition(touchLoc);\n\t\tthis._drawWithLocation(drawLoc);\n\t}\n\n\tprivate onTouchEnd(evt: cc.Event.EventTouch) {\n\t}\n\n\tprivate onTouchCancel(evt: cc.Event.EventTouch) {\n\t}\n\n\tprivate _transition(loc: cc.Vec2): cc.Vec2 {\n\t\tlet node: cc.Node = this._node;\n\t\tlet touchLoc = node.convertToNodeSpaceAR(loc);\n\t\ttouchLoc.x += this._width / 2;\n\t\ttouchLoc.y += this._height / 2;\n\n\t\treturn touchLoc;\n\t}\n\tprivate _drawWithLocation(loc: cc.Vec2) {\n\n\t\tthis._drawBoard.lineTo(loc.x, loc.y);\n\n\t\tlet data: Uint8Array = this._drawBoard.getData();\n\t\tlet texture: cc.Texture2D = this._drawSprite.spriteFrame.getTexture();\n\t\tlet opts = texture._getOpts();\n\t\topts.image = data;\n\t\topts.images = [opts.image];\n\t\ttexture.update(opts);\n\t}\n}\n\n\n\nexport enum PenType {\n    /** 默认为画*/\n    DEFAULT = 0,\n    /** 橡皮擦*/\n    ERASER = 1\n}\n"]}