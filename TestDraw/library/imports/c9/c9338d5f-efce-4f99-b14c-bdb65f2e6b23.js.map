{"version":3,"sources":["assets\\Script\\DrawBoard.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\n * 画板：\n * 可使用任意颜色绘制矩形，三角形，圆，直线，并统计每种颜色的像素个数;\n * 擦除图案时，设置画板的颜色为透明色再进行绘制即可;\n * 使用的坐标系为原点在左上角，X轴向右为正，Y轴向下为正。\n */\nexport class DrawBoard {\n    private _witdh: number;\n    /**画板宽度 */\n    public get width(): number { return this._witdh; }\n    private _height: number;\n    /**画板高度 */\n    public get height(): number { return this._height; }\n\n    /**记录每个像素点的颜色值的数组，颜色值用十六进制表示，RGBA格式 */\n    private pointColor: number[][];\n    /**存储像素数据的内存块 */\n    private buffer: ArrayBuffer;\n    /**颜色分量一维数组，供渲染使用 */\n    private pixelColor: Uint8Array;\n    /**记录各种颜色的像素的数量 */\n    private colorCount: { [key: number]: number };\n\n    /**记录最近一次绘制像素的颜色(十六进制颜色值)，调用绘制函数且未指定颜色值时，将使用该值 */\n    private curColor: number;\n\n    /**临时存储的颜色值 */\n    private tempColor: number;\n    private tempR: number;\n    private tempG: number;\n    private tempB: number;\n    private tempA: number;\n\n    /**\n     * 可对每个像素点绘制的画板，画板使用的坐标系原点为左下角，X轴向右为正，Y轴向上为正\n     * @param width     画板宽度\n     * @param height    画板高度\n     * @param data      指定画板初始内容，参数为记录颜色分量的一维数组，不传入参数时，画板中全部像素为透明\n     */\n    public constructor(width: number, height: number, data?: ArrayBuffer) {\n        this.init(width, height, data);\n    }\n    /**\n     * 对画板进行初始化，会清空已绘制的所有内容\n     * @param width     画板宽度\n     * @param height    画板高度\n     * @param data      指定画板初始内容，参数为记录颜色分量的一维数组，不传入参数时，画板内容为全部透明的矩形\n     */\n    public init(width: number, height: number, data?: ArrayBuffer) {\n        this.tempColor = this.tempR = this.tempG = this.tempB = this.tempA = 0;\n        this.curColor = 0;\n        this._witdh = Math.round(width);\n        this._height = Math.round(height);\n        this.initPointColor();\n        this.initPixelColor();\n        this.initLineData();\n        if (!!data) {\n            this.setData(data);\n        }\n    }\n    private initPointColor() {\n        if (!this.pointColor) {\n            this.pointColor = [];\n        }\n        for (let x = 0; x < this.width; ++x) {\n            if (!this.pointColor[x]) {\n                this.pointColor[x] = [];\n            }\n            for (let y = 0; y < this.height; ++y) {\n                this.pointColor[x][y] = 0;\n            }\n        }\n        this.colorCount = {};\n        this.colorCount[0] = this.width * this.height;\n    }\n    private initPixelColor() {\n        this.buffer = new ArrayBuffer(this.width * this.height * 4);\n        this.pixelColor = new Uint8Array(this.buffer);\n        this.pixelColor.fill(0);\n    }\n\n    /**重置画板，画板的宽高不变，但会清空已绘制的所有内容，恢复至透明状态 */\n    public reset() {\n        this.resetPointColor();\n        this.resetPixelColor();\n    }\n    private resetPointColor() {\n        for (let x = this.width - 1; x >= 0; --x) {\n            for (let y = this.height - 1; y >= 0; --y) {\n                this.pointColor[x][y] = 0;\n            }\n        }\n        for (let key in this.colorCount) {\n            this.colorCount[key] = 0;\n        }\n    }\n    private resetPixelColor() {\n        this.pixelColor.fill(0);\n    }\n\n    /**\n     * 传入图像的像素数据，直接设置画板的内容，图像尺寸必须与画板一致，若需要重新设置画板大小，请使用 init() 函数\n     * @param data 记录各像素颜色分量的一维数组\n     */\n    public setData(data: ArrayBuffer) {\n        let pixelData = new Uint8Array(data);\n        if (pixelData.length != this.width * this.height * 4) {\n            console.warn(\"画板设置数据失败，数据长度与画板大小不一致。\");\n            return;\n        }\n        this.setPixelColorByRGBA(pixelData);\n        this.setPointColorByRGBA(pixelData);\n    }\n    /**\n     * 记录各像素颜色分量\n     * @param data 颜色分量一维数组\n     */\n    private setPixelColorByRGBA(data: Uint8Array) {\n        this.pixelColor.set(data);\n    }\n    /**\n     * 按像素点的坐标记录像素点的颜色值\n     * @param data 颜色分量一维数组\n     */\n    private setPointColorByRGBA(data: Uint8Array) {\n        this.colorCount = {};\n        for (let y = 0; y < this.height; ++y) {\n            let i = y * this.height;\n            for (let x = 0; x < this.width; ++x) {\n                let color = this.convertToNumber(data[i++], data[i++], data[i++], data[i++]);\n                this.pointColor[x][y] = color;\n                if (!this.colorCount[color]) {\n                    this.colorCount[color] = 1;\n                } else {\n                    this.colorCount[color] += 1;\n                }\n            }\n        }\n    }\n\n    /**\n     * 获取画板中的数据\n     * @param data 用于接收数据的数组\n     * @returns {number[]} 返回存储各像素点颜色分量的一维数组\n     */\n    public copyData(data?: number[]): number[] {\n        if (undefined === data) {\n            data = [];\n        }\n        for (let i = 0, count = this.pixelColor.length; i < count; ++i) {\n            data[i] = this.pixelColor[i];\n        }\n        return data;\n    }\n    /**\n     * 获取画板中记录每个像素的颜色分量的数据\n     * @returns 将直接返回画板内部的数组；注：若使用者需要对该数据进行修改，请使用 copyData 方法获取，以免影响画板的像素个数计数功能\n     */\n    public getData(): Uint8Array {\n        return this.pixelColor;\n    }\n    /**获取画板内部使用的内存块，若仅需要获取像素数据，不进一步处理，使用 getData 即可 */\n    public getBuffer(): ArrayBuffer {\n        return this.buffer;\n    }\n    /**\n     * 获取指定颜色的像素的个数\n     * @param r 颜色的r分量\n     * @param g 颜色的g分量\n     * @param b 颜色的b分量\n     * @param a 颜色透明度，默认为255\n     */\n    public getColorCount(r: number, g: number, b: number, a: number = 255) {\n        let c = this.convertToNumber(r, g, b, a);\n        return this.colorCount[c];\n    }\n    /**\n     * 设置画板绘制图案使使用的颜色\n     * @param r 包含RGBA分量的颜色对象，或者颜色的r分量\n     * @param g 颜色的g分量\n     * @param b 颜色的b分量\n     * @param a 颜色透明度，默认为255\n     */\n    public setColor(r: number, g: number, b: number, a: number = 255) {\n        this.curColor = this.convertToNumber(r, g, b, a);\n        if (!this.colorCount[this.curColor]) {\n            this.colorCount[this.curColor] = 0;\n        }\n        this.tempColor = this.curColor;\n        this.tempR = r;\n        this.tempG = g;\n        this.tempB = b;\n        this.tempA = a;\n    }\n    /**清空所有已绘制的内容 */\n    public clear() {\n        this.reset();\n    }\n\n    //直线\n    /**上一次绘制的直线的终点 */\n    private previousLineEndPos: Vec2;\n    private previousLineEndPosT: Vec2;\n    private previousLineEndPosB: Vec2;\n    /**上一次绘制的直线的端点样式 */\n    private previousLineCircleEnd: boolean;\n    /**上一次绘制的直线的宽度 */\n    private previousLineWidth: number;\n    private initLineData() {\n        this.previousLineEndPos = new Vec2();\n        this.previousLineEndPosT = new Vec2();\n        this.previousLineEndPosB = new Vec2();\n        this.previousLineCircleEnd = true;\n        this.previousLineWidth = 1;\n    }\n    /**\n     * 移动画笔到指定的位置，调用 lineTo 函数时将使用该点作为直线的起点\n     * @param x     坐标X\n     * @param y     坐标Y\n     */\n    public moveTo(x: number, y: number) {\n        x = Math.round(x);\n        y = Math.round(y);\n        this.previousLineEndPos.set(x, y);\n        this.previousLineEndPosT.set(x, y);\n        this.previousLineEndPosB.set(x, y);\n    }\n    /**\n     * 设置线宽\n     */\n    public setLineWidth(w: number) {\n        this.previousLineWidth = w;\n    }\n    /**\n     * 设置线段端点样式\n     * @param b 线段端点是否为圆形\n     */\n    public setLineCircleEnd(b: boolean) {\n        this.previousLineCircleEnd = b;\n    }\n\n    /**\n     * 绘制直线，使用默认的颜色、线宽和线段端点样式\n     * @param x1        起点坐标X\n     * @param y1        起点坐标Y\n     * @param x2        终点坐标X\n     * @param y2        终点坐标Y\n     */\n    public line(x1: number, y1: number, x2: number, y2: number) {\n        x1 = Math.round(x1);\n        x2 = Math.round(x2);\n        y1 = Math.round(y1);\n        y2 = Math.round(y2);\n        if (x1 == x2 && y1 == y2) return;\n        let width = this.previousLineWidth;\n        let circleEnd = this.previousLineCircleEnd;\n        this.previousLineEndPos.set(x2, y2);\n        let offsetX = 0;\n        let offsetY = 0;\n        let rateK = 1;\n        if (x1 == x2) {\n            offsetX = Math.round(width * 0.5);\n        } else if (y1 == y2) {\n            offsetY = Math.round(width * 0.5);\n        } else {\n            let k = (y2 - y1) / (x2 - x1);\n            rateK = Math.sqrt(k * k + 1);\n            offsetY = width * 0.5 / rateK;\n            offsetX = Math.round(offsetY * k);\n            offsetY = Math.round(offsetY);\n        }\n        this.previousLineEndPosT.set(x2 - offsetX, y2 + offsetY);\n        this.previousLineEndPosB.set(x2 + offsetX, y2 - offsetY);\n\n        let p1 = new Vec2(x1, y1);\n        let p2 = new Vec2(x2, y2);\n        if (x1 > x2) {\n            p1.x = x2;\n            p1.y = y2;\n            p2.x = x1;\n            p2.y = y1;\n        }\n        this._drawLine(p1, p2, width, offsetX, offsetY, rateK);\n        if (circleEnd) {\n            this._drawCircle(x1, y1, width * 0.5);\n            this._drawCircle(x2, y2, width * 0.5);\n        }\n    }\n    /**\n     * 绘制到指定坐标的直线，起点为上一次绘制的直线的终点，使用默认的颜色、宽度和线段端点样式\n     * @param x     终点坐标X\n     * @param y     终点坐标Y\n     */\n    public lineTo(x: number, y: number) {\n        x = Math.round(x);\n        y = Math.round(y);\n        if (this.previousLineEndPos.x == x && this.previousLineEndPos.y == y) return;\n        let width = this.previousLineWidth;\n        let circleEnd = this.previousLineCircleEnd;\n        let x1 = this.previousLineEndPos.x;\n        let y1 = this.previousLineEndPos.y;\n        let x2 = x;\n        let y2 = y;\n        if (x1 > x2) {\n            x1 = x2;\n            y1 = y2;\n            x2 = this.previousLineEndPos.x;\n            y2 = this.previousLineEndPos.y;\n        }\n        let offsetX = 0;\n        let offsetY = 0;\n        let rateK = 1;\n        if (x1 == x2) {\n            offsetX = Math.round(width * 0.5);\n        } else if (y1 == y2) {\n            offsetY = Math.round(width * 0.5);\n        } else {\n            let k = (y2 - y1) / (x2 - x1);\n            rateK = Math.sqrt(k * k + 1);\n            offsetY = width * 0.5 / rateK;\n            offsetX = Math.round(offsetY * k);\n            offsetY = Math.round(offsetY);\n        }\n        if (!circleEnd) {\n            if (this.previousLineEndPos.x != this.previousLineEndPosT.x\n                || this.previousLineEndPos.y != this.previousLineEndPosT.y) {\n                let p1 = new Vec2(this.previousLineEndPos.x - offsetX, this.previousLineEndPos.y + offsetY);\n                let p2 = new Vec2(this.previousLineEndPos.x + offsetX, this.previousLineEndPos.y - offsetY);\n                this._drawTriangle([p1, p2, this.previousLineEndPosT]);\n                this._drawTriangle([p1, p2, this.previousLineEndPosB]);\n            }\n        } else {\n            this._drawCircle(x1, y1, width * 0.5);\n            this._drawCircle(x2, y2, width * 0.5);\n        }\n        this._drawLine(new Vec2(x1, y1), new Vec2(x2, y2), width, offsetX, offsetY, rateK);\n\n        this.previousLineEndPos.set(x, y);\n        this.previousLineEndPosT.set(x - offsetX, y + offsetY);\n        this.previousLineEndPosB.set(x + offsetX, y - offsetY);\n    }\n    /**\n     * 绘制直线，不包含线段端点样式\n     * @param p1        线段起点坐标\n     * @param p2        线段终点坐标\n     * @param width     线段宽度\n     * @param color     线段颜色\n     */\n    private _drawLine(p1: Vec2, p2: Vec2, width: number, offsetX: number, offsetY: number, slopeRate: number) {\n        if (p1.y == p2.y) {\n            //水平直线\n            let x = p1.x < p2.x ? p1.x : p2.x;\n            this._drawRect(new Vec2(x, Math.round(p1.y - width * 0.5)), Math.abs(p1.x - p2.x), width);\n        } else if (p1.x == p2.x) {\n            //垂直直线\n            let y = p1.y < p2.y ? p1.y : p2.y;\n            this._drawRect(new Vec2(Math.round(p1.x - width * 0.5), y), width, Math.abs(p1.y - p2.y));\n        } else {\n            //倾斜直线\n            let inverseK = (p1.x - p2.x) / (p1.y - p2.y);\n            let p1t = new Vec2(p1.x - offsetX, p1.y + offsetY);\n            let p1b = new Vec2(p1.x + offsetX, p1.y - offsetY);\n            let p2t = new Vec2(p2.x - offsetX, p2.y + offsetY);\n            let p2b = new Vec2(p2.x + offsetX, p2.y - offsetY);\n            let p1c = new Vec2();\n            let p2c = new Vec2();\n            let height = Math.round(width * slopeRate);\n            if (p2.y > p1.y) {\n                if (p1b.x < p2t.x) {\n                    p1c.x = p1b.x;\n                    p1c.y = p1b.y + height;\n                    p2c.x = p2t.x;\n                    p2c.y = p2t.y - height;\n                    this._drawVerticalTriangle(p1c, p1b, p1t);\n                    this._drawParallelogram(p1b, p2c, height);\n                    this._drawVerticalTriangle(p2t, p2c, p2b);\n                } else {\n                    p1c.x = p1b.x;\n                    p1c.y = Math.round(p2t.y - (p1c.x - p2t.x) * inverseK);\n                    p2c.x = p2t.x;\n                    p2c.y = Math.round(p1b.y + (p1b.x - p2c.x) * inverseK);\n                    this._drawVerticalTriangle(p2t, p2c, p1t);\n                    this._drawParallelogram(p2c, p1b, p2t.y - p2c.y);\n                    this._drawVerticalTriangle(p1c, p1b, p2b);\n                }\n            } else {\n                if (p1t.x < p2b.x) {\n                    p1c.x = p1t.x;\n                    p1c.y = p1t.y - height;\n                    p2c.x = p2b.x;\n                    p2c.y = p2b.y + height;\n                    this._drawVerticalTriangle(p1t, p1c, p1b);\n                    this._drawParallelogram(p1c, p2b, height);\n                    this._drawVerticalTriangle(p2c, p2b, p2t);\n                } else {\n                    p1c.x = p1t.x;\n                    p1c.y = Math.round(p2b.y - (p1c.x - p2b.x) * inverseK);\n                    p2c.x = p2b.x;\n                    p2c.y = Math.round(p1t.y + (p1t.x - p2c.x) * inverseK);\n                    this._drawVerticalTriangle(p2c, p2b, p1b);\n                    this._drawParallelogram(p2b, p1c, p1t.y - p1c.y);\n                    this._drawVerticalTriangle(p1t, p1c, p2t);\n                }\n            }\n\n        }\n    }\n\n    /**\n     * 绘制矩形\n     * @param x     矩形左下角的坐标X\n     * @param y     矩形左下角的坐标Y\n     * @param w     矩形宽度\n     * @param h     矩形高度\n     */\n    public rect(x: number, y: number, w: number, h: number) {\n        this._drawRect(new Vec2(x, y), w, h);\n    }\n    /**\n     * 绘制矩形\n     * @param p         矩形左下顶点的坐标\n     * @param w         矩形宽度\n     * @param h         矩形高度\n     * @param color     矩形填充的颜色\n     */\n    private _drawRect(p: Vec2, w: number, h: number) {\n        let minX = this.clampX(p.x);\n        let maxX = this.clampX(p.x + w);\n        let minY = this.clampY(p.y);\n        let maxY = this.clampY(p.y + h);\n        // for (let x = minX; x <= maxX; ++x) {\n        //     for (let y = minY; y <= maxY; ++y) {\n        //         this._drawPixel(x, y);\n        //     }\n        // }\n        for (let y = minY; y <= maxY; ++y) {\n            this._drawRowPixel(minX, maxX, y);\n        }\n    }\n    /**\n     * 绘制平行四边形，平行四边形的左右两边与Y轴平行\n     * @param p1        左下顶点坐标\n     * @param p2        右下顶点坐标\n     * @param height    垂直边高度\n     * @param color     颜色\n     */\n    private _drawParallelogram(p1: Vec2, p2: Vec2, height: number) {\n        if (p1.x == p2.x) return;\n        let k = (p2.y - p1.y) / (p2.x - p1.x);\n        let minX = this._minX(p1.x);\n        let maxX = this._maxX(p2.x);\n        for (let x = minX; x <= maxX; ++x) {\n            let minY = p1.y + Math.round((x - p1.x) * k);\n            let maxY = minY + height;\n            minY = this._minY(minY);\n            maxY = this._maxY(maxY);\n            this._drawColPixel(minY, maxY, x);\n            // for (let y = minY; y <= maxY; ++y) {\n            //     this._drawPixel(x, y);\n            // }\n        }\n    }\n\n    /**\n     * 绘制三角形\n     * @param x1    顶点1坐标X\n     * @param y1    顶点1坐标Y\n     * @param x2    顶点2坐标X\n     * @param y2    顶点2坐标Y\n     * @param x3    顶点3坐标X\n     * @param y3    顶点3坐标Y\n     */\n    public triangle(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number) {\n        let pList: Vec2[] = [];\n        pList.push(new Vec2(x1, y1));\n        pList.push(new Vec2(x2, y2));\n        pList.push(new Vec2(x3, y3));\n        this._drawTriangle(pList);\n    }\n    /**\n     * 绘制任意三角形\n     * @param p1    顶点坐标\n     * @param p2 \n     * @param p3 \n     * @param color 填充颜色\n     */\n    private _drawTriangle(pList: Vec2[]) {\n        pList.sort((a, b) => {\n            return a.x - b.x;\n        });\n        let p1 = pList[0];\n        let p2 = pList[1];\n        let p3 = pList[2];\n        if (p1.x == p2.x) {\n            if (p1.x == p3.x) return;\n            if (p1.y < p2.y) {\n                p1 = pList[1];\n                p2 = pList[0];\n            }\n            this._drawVerticalTriangle(p1, p2, p3);\n            return;\n        }\n        let k = (p3.y - p1.y) / (p3.x - p1.x);\n        let p4 = new Vec2(p2.x, Math.round(p1.y + (p2.x - p1.x) * k));\n        if (p4.y == p2.y) return;\n        if (p4.y < p2.y) {\n            this._drawVerticalTriangle(p2, p4, p1);\n            this._drawVerticalTriangle(p2, p4, p3);\n        } else {\n            this._drawVerticalTriangle(p4, p2, p1);\n            this._drawVerticalTriangle(p4, p2, p3);\n        }\n    }\n    /**\n     * 绘制一条边与Y轴平行的三角形\n     * @param p1    三角形垂直边的 上 顶点坐标\n     * @param p2    三角形垂直边的 下 顶点坐标\n     * @param p3    三角形 左侧或右侧 顶点坐标\n     * @param color 要绘制的颜色\n     */\n    private _drawVerticalTriangle(p1: Vec2, p2: Vec2, p3: Vec2) {\n        if (p3.x == p1.x) return;\n        let k1 = (p3.y - p1.y) / (p3.x - p1.x);\n        let k2 = (p3.y - p2.y) / (p3.x - p2.x);\n        let maxX = p3.x, minX = p1.x;\n        if (maxX < minX) {\n            maxX = p1.x;\n            minX = p3.x;\n        }\n        minX = this._minX(minX);\n        maxX = this._maxX(maxX);\n        for (let x = minX; x <= maxX; ++x) {\n            let maxY = this.clampY(Math.round(p1.y + (x - p1.x) * k1));\n            let minY = this.clampY(Math.round(p2.y + (x - p2.x) * k2));\n            this._drawColPixel(minY, maxY, x);\n            // for (let y = minY; y <= maxY; ++y) {\n            //     this._drawPixel(x, y);\n            // }\n        }\n    }\n\n    /**\n    * 绘制一个圆\n    * @param x         圆心坐标x\n    * @param y         圆心坐标y\n    * @param radius    圆的半径\n    */\n    public circle(x: number, y: number, radius: number) {\n        x = Math.round(x);\n        y = Math.round(y);\n        this._drawCircle(x, y, radius);\n    }\n    private _drawCircle(x: number, y: number, radius: number) {\n        radius = Math.round(radius);\n        if (radius == 0) return;\n        //三角形的斜边的平方\n        let dis = radius * radius;\n        // let minX = this._minX(x - radius);\n        // let maxX = this._maxX(x + radius);\n        // for (let i = minX; i <= maxX; ++i) {\n        //     let r = x - i;\n        //     r = Math.round(Math.sqrt(dis - r * r));\n        //     let minY = this._minY(y - r);\n        //     let maxY = this._maxY(y + r);\n        //     for (let j = minY; j <= maxY; ++j) {\n        //         this._drawPixel(i, j);\n        //     }\n        // }\n        let minY = this.clampY(y - radius);\n        let maxY = this.clampY(y + radius);\n        for (let j = minY; j <= maxY; ++j) {\n            let r = j - y;\n            r = Math.round(Math.sqrt(dis - r * r));\n            let minX = this.clampX(x - r);\n            let maxX = this.clampX(x + r);\n            this._drawRowPixel(minX, maxX, j);\n        }\n    }\n\n    private _minX(x: number): number {\n        return x >= 0 ? x : 0;\n    }\n    private _maxX(x: number): number {\n        return x < this.width ? x : this.width - 1;\n    }\n    private _minY(y: number): number {\n        return y >= 0 ? y : 0;\n    }\n    private _maxY(y: number): number {\n        return y < this.height ? y : this.height - 1;\n    }\n    private clampX(x: number): number {\n        if (x < 0) return 0;\n        if (x >= this.width) return this.width - 1;\n        return x;\n    }\n    private clampY(y: number): number {\n        if (y < 0) return 0;\n        if (y >= this.height) return this.height - 1;\n        return y;\n    }\n    /**绘制一个像素点的颜色 */\n    private _drawPixel(x: number, y: number) {\n        if (this.pointColor[x][y] == this.tempColor) return;\n        let index = (y * this.width + x) * 4;\n        this.pixelColor[index] = this.tempR;\n        this.pixelColor[index + 1] = this.tempG;\n        this.pixelColor[index + 2] = this.tempB;\n        this.pixelColor[index + 3] = this.tempA;\n        let c = this.pointColor[x][y];\n        this.colorCount[c]--;\n        this.colorCount[this.tempColor]++;\n        this.pointColor[x][y] = this.tempColor;\n    }\n    /**\n     * 连续绘制一行中的像素点\n     * @param startX    起点X坐标\n     * @param endX      终点X坐标\n     * @param y         Y坐标\n     */\n    private _drawRowPixel(startX: number, endX: number, y: number) {\n        let index = (y * this.width + startX) * 4;\n        for (let x = startX; x <= endX; ++x) {\n            if (this.pointColor[x][y] != this.tempColor) {\n                this.pixelColor[index] = this.tempR;\n                this.pixelColor[index + 1] = this.tempG;\n                this.pixelColor[index + 2] = this.tempB;\n                this.pixelColor[index + 3] = this.tempA;\n                let c = this.pointColor[x][y];\n                this.colorCount[c]--;\n                this.colorCount[this.tempColor]++;\n                this.pointColor[x][y] = this.tempColor;\n            }\n            index += 4;\n        }\n    }\n    /**\n     * 连续绘制一列中的像素点\n     * @param startY    起点Y坐标\n     * @param endY      终点Y坐标\n     * @param x         X坐标\n     */\n    private _drawColPixel(startY: number, endY: number, x: number) {\n        let index = (startY * this.width + x) * 4;\n        for (let y = startY; y <= endY; ++y) {\n            if (this.pointColor[x][y] != this.tempColor) {\n                this.pixelColor[index] = this.tempR;\n                this.pixelColor[index + 1] = this.tempG;\n                this.pixelColor[index + 2] = this.tempB;\n                this.pixelColor[index + 3] = this.tempA;\n                let c = this.pointColor[x][y];\n                this.colorCount[c]--;\n                this.colorCount[this.tempColor]++;\n                this.pointColor[x][y] = this.tempColor;\n            }\n            index += this.width * 4;\n        }\n    }\n    /**\n     * 将RGBA颜色分量转换为一个数值表示的颜色，颜色分量为0~255之间的值\n     * @param r \n     * @param g \n     * @param b \n     * @param a \n     */\n    private convertToNumber(r: number, g: number, b: number, a: number = 255): number {\n        return ((r & 0xfe) << 23) | (g << 16) | (b << 8) | a;\n    }\n    /**将十六进制的颜色转换为RGBA分量表示的颜色 */\n    private convertToRGBA(color: number): { r: number, g: number, b: number, a: number } {\n        return {\n            r: (color & 0xef000000) >> 23,\n            g: (color & 0x00ff0000) >> 16,\n            b: (color & 0x0000ff00) >> 8,\n            a: (color & 0x000000ff),\n        };\n    }\n}\nclass Vec2 {\n    public x: number;\n    public y: number;\n    constructor(x: number = 0, y: number = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    public set(p: number | Vec2, y?: number) {\n        if (typeof p === \"number\") {\n            this.x = p;\n            this.y = y;\n        } else {\n            this.x = p.x;\n            this.y = p.y;\n        }\n    }\n}\n"]}