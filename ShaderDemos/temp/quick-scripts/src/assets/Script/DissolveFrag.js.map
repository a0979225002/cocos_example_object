{"version":3,"sources":["assets\\Script\\DissolveFrag.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IAsDA,CAAC;IArDU,iBAAI,GAAE,iUAYZ,CAAC;IAEK,iBAAI,GAAC,u7BAsCX,CAAC;IACN,mBAAC;CAtDD,AAsDC,IAAA;kBAtDoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["export default class DissolveFrag {\r\n    static vert =`\r\n    attribute vec4 a_position;\r\n    attribute vec2 a_texCoord;\r\n    attribute vec4 a_color;\r\n    varying vec2 v_texCoord; \r\n    varying vec4 v_fragmentColor; \r\n    void main() \r\n    { \r\n        gl_Position = CC_PMatrix * a_position;\r\n        v_fragmentColor = a_color; \r\n        v_texCoord = a_texCoord; \r\n    }\r\n    `;\r\n    \r\n    static frag=`\r\n    #ifdef GL_ES\r\n    precision lowp float;\r\n    #endif\r\n\r\n    uniform vec2 resolution;\r\n    uniform float time;\r\n    uniform sampler2D texture1;\r\n\r\n    varying vec2 v_texCoord;\r\n    varying vec4 v_fragmentColor;\r\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n    {\r\n        // 纹理坐标\r\n        vec2 uv = v_texCoord;\r\n        // 法向纹理r通道\r\n        float height = texture2D(texture1,uv).r;\r\n        // 采样纹理\r\n        vec4 color = v_fragmentColor * texture2D(CC_Texture0,uv);\r\n\r\n        if(height < time)\r\n        {\r\n            discard;\r\n        }\r\n        \r\n        if(height < time+0.04)\r\n        {\r\n            // 溶解颜色，可以自定义\r\n            color = vec4(.9,.6,0.3,color.a);\r\n        }\r\n        \r\n        fragColor = color;\r\n    }\r\n\r\n    void main()\r\n    {\r\n        mainImage(gl_FragColor, gl_FragCoord.xy);\r\n    }\r\n    `;\r\n}"]}