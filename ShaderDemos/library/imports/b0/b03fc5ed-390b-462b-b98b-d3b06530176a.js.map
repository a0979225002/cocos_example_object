{"version":3,"sources":["assets\\Script\\GaussBlursFrag.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IAkDA,CAAC;IAjDU,oBAAU,GAAG,2TAYnB,CAAC;IACK,oBAAU,GAAG,snCAmCnB,CAAC;IACN,gBAAC;CAlDD,AAkDC,IAAA;kBAlDoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["export default class BlursFrag {\r\n    static blurs_vert = `\r\n    attribute vec4 a_position;\r\n    attribute vec2 a_texCoord;\r\n    attribute vec4 a_color;\r\n    varying vec2 v_texCoord;\r\n    varying vec4 v_fragmentColor;\r\n    void main()\r\n    {\r\n        gl_Position = CC_PMatrix * a_position;\r\n        v_fragmentColor = a_color;\r\n        v_texCoord = a_texCoord;\r\n    }\r\n    `;\r\n    static blurs_frag = `\r\n    #ifdef GL_ES\r\n    precision mediump float;\r\n    #endif\r\n    uniform float bluramount;\r\n    varying vec2 v_texCoord;\r\n    vec4 draw(vec2 uv) {\r\n    return texture2D(CC_Texture0,uv).rgba; \r\n    }\r\n    float grid(float var, float size) {\r\n    return floor(var*size)/size;\r\n    }\r\n    float rand(vec2 co){\r\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n    }\r\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n    {\r\n    vec2 uv = v_texCoord.xy;\r\n    vec4 blurred_image = vec4(0.);\r\n    #define repeats 5.\r\n    for (float i = 0.; i < repeats; i++) { \r\n    vec2 q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i,uv.x+uv.y))+bluramount); \r\n    vec2 uv2 = uv+(q*bluramount);\r\n    blurred_image += draw(uv2)/2.;\r\n    q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i+2.,uv.x+uv.y+24.))+bluramount); \r\n    uv2 = uv+(q*bluramount);\r\n    blurred_image += draw(uv2)/2.;\r\n    }\r\n    blurred_image /= repeats;\r\n    fragColor = vec4(blurred_image);\r\n    }\r\n    void main()\r\n    {\r\n    mainImage(gl_FragColor, gl_FragCoord.xy);\r\n    }\r\n    `;\r\n}"]}