{"version":3,"sources":["assets\\Script\\WaterWaveFrag.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IA+CA,CAAC;IA9CU,4BAAc,GAAG,2TAYvB,CAAC;IAEK,4BAAc,GAAG,2xBA+BvB,CAAC;IACN,oBAAC;CA/CD,AA+CC,IAAA;kBA/CoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["export default class WaterWaveFrag{\r\n    static waterwave_vert = `\r\n    attribute vec4 a_position;\r\n    attribute vec2 a_texCoord;\r\n    attribute vec4 a_color;\r\n    varying vec2 v_texCoord;\r\n    varying vec4 v_fragmentColor;\r\n    void main()\r\n    {\r\n        gl_Position = CC_PMatrix * a_position;\r\n        v_fragmentColor = a_color;\r\n        v_texCoord = a_texCoord;\r\n    }\r\n    `;\r\n       \r\n    static waterwave_frag = `\r\n    #ifdef GL_ES\r\n    precision mediump float;\r\n    #endif\r\n    \r\n    #define F cos(x-y)*cos(y),sin(x+y)*sin(y)\r\n\r\n    uniform float time;\r\n    uniform vec2 resolution;\r\n    varying vec2 v_texCoord;\r\n\r\n    vec2 s(vec2 p)\r\n    {\r\n        float d=time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\r\n        return vec2(F);\r\n    }\r\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n    {\r\n        // 换成resolution\r\n        vec2 rs = resolution.xy;\r\n        // 换成纹理坐标v_texCoord.xy\r\n        vec2 uv = v_texCoord.xy;\r\n        vec2 q = uv+2./resolution.x*(s(uv)-s(uv+rs));\r\n        //反转y\r\n        // q.y=1.-q.y;\r\n        fragColor = texture2D(CC_Texture0,q);\r\n    }\r\n    void main()\r\n    {\r\n        mainImage(gl_FragColor, gl_FragCoord.xy);\r\n    }\r\n    `;\r\n}"]}