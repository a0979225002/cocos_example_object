{"version":3,"sources":["assets\\scripts\\Star.js"],"names":["cc","Class","Component","properties","pickRadius","onLoad","enabled","init","game","node","opacity","reuse","getPlayerDistance","playerPos","player","getCenterPos","dist","position","sub","mag","onPicked","pos","getPosition","gainScore","despawnStar","update","dt","opacityRatio","timer","starDuration","minOpacity","Math","floor"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACAC,IAAAA,UAAU,EAAE;AAFJ,GAHP;AAQLC,EAAAA,MAAM,EAAE,kBAAY;AAChB,SAAKC,OAAL,GAAe,KAAf;AACH,GAVI;AAYL;AACAC,EAAAA,IAAI,EAAE,cAAUC,IAAV,EAAgB;AAClB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKF,OAAL,GAAe,IAAf;AACA,SAAKG,IAAL,CAAUC,OAAV,GAAoB,GAApB;AACH,GAjBI;AAmBLC,EAAAA,KAnBK,iBAmBEH,IAnBF,EAmBQ;AACT,SAAKD,IAAL,CAAUC,IAAV;AACH,GArBI;AAuBLI,EAAAA,iBAAiB,EAAE,6BAAY;AAC3B;AACA,QAAIC,SAAS,GAAG,KAAKL,IAAL,CAAUM,MAAV,CAAiBC,YAAjB,EAAhB,CAF2B,CAG3B;;AACA,QAAIC,IAAI,GAAG,KAAKP,IAAL,CAAUQ,QAAV,CAAmBC,GAAnB,CAAuBL,SAAvB,EAAkCM,GAAlC,EAAX;AACA,WAAOH,IAAP;AACH,GA7BI;AA+BLI,EAAAA,QAAQ,EAAE,oBAAW;AACjB,QAAIC,GAAG,GAAG,KAAKZ,IAAL,CAAUa,WAAV,EAAV,CADiB,CAEjB;;AACA,SAAKd,IAAL,CAAUe,SAAV,CAAoBF,GAApB,EAHiB,CAIjB;;AACA,SAAKb,IAAL,CAAUgB,WAAV,CAAsB,KAAKf,IAA3B;AACH,GArCI;AAuCL;AACAgB,EAAAA,MAAM,EAAE,gBAAUC,EAAV,EAAc;AAClB;AACA,QAAI,KAAKd,iBAAL,KAA2B,KAAKR,UAApC,EAAgD;AAC5C;AACA,WAAKgB,QAAL;AACA;AACH,KANiB,CAOlB;;;AACA,QAAIO,YAAY,GAAG,IAAI,KAAKnB,IAAL,CAAUoB,KAAV,GAAgB,KAAKpB,IAAL,CAAUqB,YAAjD;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKrB,IAAL,CAAUC,OAAV,GAAoBoB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAY,IAAI,MAAMG,UAAV,CAAvB,CAAjC;AACH;AAnDI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        pickRadius: 0,\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.enabled = false;\r\n    },\r\n\r\n    // use this for initialization\r\n    init: function (game) {\r\n        this.game = game;\r\n        this.enabled = true;\r\n        this.node.opacity = 255;\r\n    },\r\n\r\n    reuse (game) {\r\n        this.init(game);\r\n    },\r\n\r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getCenterPos();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        var pos = this.node.getPosition();\r\n        // 调用 Game 脚本的得分方法\r\n        this.game.gainScore(pos);\r\n        // 当星星被收集时，调用 Game 脚本中的接口，销毁当前星星节点，生成一个新的星星\r\n        this.game.despawnStar(this.node);\r\n    },\r\n\r\n    // called every frame\r\n    update: function (dt) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        // 根据 Game 脚本中的计时器更新星星的透明度\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n});\r\n"]}