{"version":3,"sources":["assets\\script\\rolling_lottery\\rolling_lottery.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import bezier_curve from \"./bezier_curve\";\r\n\r\nconst {ccclass, property, menu, help} = cc._decorator;\r\n\r\nmodule _rolling_lottery {\r\n    /*---------enum_private */\r\n    /*---------enum_public */\r\n    /**移动方向 */\r\n    export enum move_dire {\r\n        上,\r\n        下,\r\n    }\r\n    /*---------interface_private */\r\n    /*---------interface_public */\r\n    export interface action {\r\n        /**运动曲线 */\r\n        bezier_o: bezier_curve;\r\n        /**运动距离 */\r\n        dist_n: number;\r\n    }\r\n    /*---------var | const */\r\n    /*---------class_private */\r\n    /*---------class_public */\r\n    @ccclass(\"tool/rolling_lottery/callback\")\r\n    export class callback {\r\n        // ------------------public\r\n        /**触发状态 */\r\n        public trigger_b = false;\r\n        // ------------------属性\r\n        @property({ displayName: \"回调\", type: cc.Component.EventHandler })\r\n        callback_o: cc.Component.EventHandler = null;\r\n        @property({ displayName: \"提前检测距离\", min: 0 })\r\n        check_dist_n = 0;\r\n    }\r\n}\r\n\r\n/**滚动抽奖 */\r\n@ccclass\r\n@help(\"https://www.desmos.com/calculator/cahqdxeshd?lang=zh-CN\")\r\n@menu(\"tool/rolling_lottery\")\r\nclass rolling_lottery extends cc.Component {\r\n    /* ***************private*************** */\r\n    /**当前速度（距离/s） */\r\n    private _curr_speed_n: number;\r\n    /**当前距离 */\r\n    private _curr_dist_n = 0;\r\n    /**步长时间 */\r\n    private _step_time_s_n = 0.01;\r\n    /**当前时间 */\r\n    private _curr_time_s_n = 0;\r\n    /**单圈长度 */\r\n    private _lap_len_n: number;\r\n    /**配置数据 */\r\n    private _config_o: rolling_lottery.config;\r\n    /**动作列表 */\r\n    private _action_as: _rolling_lottery.action[] = [];\r\n    /**当前动作下标 */\r\n    private _curr_action_n: number;\r\n    /**滚动动作 */\r\n    private _scroll_action_a: _rolling_lottery.action;\r\n    /**反弹动作 */\r\n    private _rebound_action_a: _rolling_lottery.action;\r\n    /**运动距离 */\r\n    private _move_dist_n: number;\r\n    /**上次所在格子下标 */\r\n    private _last_pos_n: number;\r\n    /* ***************public*************** */\r\n    /**滚动状态 */\r\n    public scroll_b = false;\r\n    /* ***************属性*************** */\r\n    @property({ displayName: \"旋转方向\", type: cc.Enum(_rolling_lottery.move_dire) })\r\n    move_dire_e = _rolling_lottery.move_dire.下;\r\n    @property({ displayName: \"最大速度（距离/s）\", min: 0.1 })\r\n    max_speed_n = 50;\r\n    @property({\r\n        displayName: \"转动圈数\",\r\n        min: 0,\r\n        step: 1,\r\n    })\r\n    turn_lap_n = 10;\r\n    @property({\r\n        displayName: \"转动随机圈数\",\r\n        min: 0,\r\n        step: 1,\r\n    })\r\n    turn_lap_random_n = 0;\r\n    @property({ displayName: \"惯性随机距离\", min: 0 })\r\n    inertia_n = 50;\r\n    @property({\r\n        displayName: \"滚动动作曲线\",\r\n        tooltip: \"贝塞尔曲线控制点，可点击组件右上角->帮助文档进行跳转编辑\",\r\n        type: [cc.Vec2],\r\n    })\r\n    scroll_action_os: cc.Vec2[] = [cc.v2(0, 0), cc.v2(0.44, 0.8925), cc.v2(0.375, 0.25), cc.v2(0.75, 0.75), cc.v2(1, 0.05)];\r\n    @property({\r\n        displayName: \"反弹动作曲线\",\r\n        tooltip: \"贝塞尔曲线控制点，可点击组件右上角->帮助文档进行跳转编辑\",\r\n        type: [cc.Vec2],\r\n        visible: function() { return this.inertia_n > 0; }\r\n    })\r\n    rebound_action_os: cc.Vec2[] = [cc.v2(0, -0.05), cc.v2(0.5, -0.02), cc.v2(1, 0)];\r\n    /**滚动结束回调 */\r\n    @property({ displayName: \"滚动结束回调\", type: [_rolling_lottery.callback] })\r\n    scorll_finish_cb_os: _rolling_lottery.callback[] = [];\r\n    /**反弹结束回调 */\r\n    @property({\r\n        displayName: \"反弹结束回调\",\r\n        type: [_rolling_lottery.callback],\r\n        visible: function () { return this.inertia_n > 0; }\r\n    })\r\n    rebound_finish_cb_os: _rolling_lottery.callback[] = [];\r\n    /**滚动单格回调 */\r\n    @property({ displayName: \"滚动单格回调\", type: [cc.Component.EventHandler] })\r\n    scroll_grid_cb_os: cc.Component.EventHandler[] = [];\r\n    /**滚动单格回调补全（例：一格距离5，滚动10调用2次回调而非1次） */\r\n    @property({\r\n        displayName: \"滚动单格回调补全\",\r\n        tooltip: \"例：一格距离5，滚动10调用2次回调而非1次\",\r\n        visible: function () { return this.scroll_grid_cb_os.length; }\r\n    })\r\n    scroll_grid_cb_supp_b = true;\r\n    /* -------------------------------segmentation------------------------------- */\r\n    onLoad() {\r\n        // ------------------添加动作\r\n        // 滚动\r\n        this._action_as.push(this._scroll_action_a = {\r\n            \"bezier_o\": new bezier_curve(this.scroll_action_os),\r\n            \"dist_n\": 0,\r\n        });\r\n        // 反弹\r\n        if (this.inertia_n > 0) {\r\n            this._action_as.push(this._rebound_action_a = {\r\n                \"bezier_o\": new bezier_curve(this.rebound_action_os),\r\n                \"dist_n\": 0,\r\n            });\r\n        }\r\n        const debug_b = false;\r\n        if (!debug_b) {\r\n            return;\r\n        }\r\n        let bezier_o = this._action_as[0].bezier_o;\r\n        let point_os: cc.Vec2[] = [];\r\n        let graphics_o = cc.Canvas.instance.node.getComponent(cc.Graphics) || cc.Canvas.instance.node.addComponent(cc.Graphics);\r\n        let start_b = false;\r\n        let offset_o = cc.v2(-cc.Canvas.instance.node.width * 0.5 + 100, -cc.Canvas.instance.node.height * 0.5 + 100);\r\n        let scale_n = 100;\r\n        for (let i = 0; i <= 1; i += 0.1) {\r\n            point_os.push(bezier_o.point(i));\r\n        }\r\n        // ------------------绘制曲线线段\r\n        graphics_o.strokeColor = cc.Color.WHITE;\r\n        point_os.forEach(v1_o=> {\r\n            if (!start_b) {\r\n                start_b = true;\r\n                graphics_o.moveTo(v1_o.x * scale_n + offset_o.x, v1_o.y * scale_n + offset_o.y);\r\n            } else {\r\n                graphics_o.lineTo(v1_o.x * scale_n + offset_o.x, v1_o.y * scale_n + offset_o.y);\r\n            }\r\n        });\r\n        graphics_o.stroke();\r\n        // ------------------绘制控制点\r\n        graphics_o.fillColor = cc.Color.RED;\r\n        bezier_o.control_point_os.forEach(v1_o=> {\r\n            graphics_o.circle(v1_o.x * scale_n + offset_o.x, v1_o.y * scale_n + offset_o.y, 5);\r\n            graphics_o.fill();\r\n        });\r\n        graphics_o.stroke();\r\n    }\r\n    update(dt_n_: number) {\r\n        if (!this.scroll_b) {\r\n            return;\r\n        }\r\n        let curr_action_a = this._action_as[this._curr_action_n];\r\n        if ((curr_action_a.dist_n > 0 && this._curr_dist_n < curr_action_a.dist_n)\r\n        || (curr_action_a.dist_n < 0 && this._curr_dist_n > curr_action_a.dist_n)) {\r\n            this._curr_time_s_n += dt_n_;\r\n            if (this._curr_time_s_n >= this._step_time_s_n) {\r\n                this._curr_time_s_n -= this._step_time_s_n;\r\n                /**距离比例 */\r\n                let dist_scale_n = Math.round(this._curr_dist_n / Math.abs(curr_action_a.dist_n) * 100) / 100;\r\n                /**当前t的曲线坐标y */\r\n                let y_n = curr_action_a.bezier_o.point(dist_scale_n).y;\r\n                // ------------------防止0停止运动\r\n                if (y_n === 0) {\r\n                    let pre_o = curr_action_a.bezier_o.point(dist_scale_n - 0.01);\r\n                    let next_o = curr_action_a.bezier_o.point(dist_scale_n + 0.01);\r\n                    y_n = next_o.y;\r\n                    if (y_n === 0) {\r\n                        y_n = pre_o.y >= 0 ? 0.01 : -0.01;\r\n                    }\r\n                }\r\n                this._curr_speed_n = this.max_speed_n * y_n;\r\n                if ((this._curr_dist_n + Math.abs(this._curr_speed_n)) > curr_action_a.dist_n) {\r\n                    this._curr_speed_n = curr_action_a.dist_n - this._curr_dist_n;\r\n                }\r\n                this._curr_dist_n += Math.abs(this._curr_speed_n);\r\n                if (this.move_dire_e === _rolling_lottery.move_dire.下) {\r\n                    this._curr_speed_n = -this._curr_speed_n;\r\n                }\r\n                this._scrolling();\r\n                this._update_move_dist(this._curr_speed_n);\r\n            }\r\n        }\r\n        // ------------------动作执行完成，自动执行下个动作\r\n        else if (this._curr_action_n < this._action_as.length - 1) {\r\n            ++this._curr_action_n;\r\n            this._curr_dist_n = 0;\r\n            this.update(0);\r\n        }\r\n        // ------------------所有动作执行完成\r\n        else {\r\n            this.scroll_b = false;\r\n        }\r\n        switch (curr_action_a) {\r\n            // 滚动\r\n            case this._scroll_action_a: {\r\n                // ------------------结束回调\r\n                if (this._config_o.scroll_finish_cb_f && (this._curr_dist_n + this._config_o.scorll_trigger_dist_n) >= curr_action_a.dist_n) {\r\n                    this._config_o.scroll_finish_cb_f();\r\n                    this._config_o.scroll_finish_cb_f = null;\r\n                }\r\n                this.scorll_finish_cb_os.forEach(v1_o=> {\r\n                    if (!v1_o.trigger_b && (this._curr_dist_n + v1_o.check_dist_n) >= curr_action_a.dist_n) {\r\n                        v1_o.callback_o.emit([v1_o.callback_o.customEventData]);\r\n                        v1_o.trigger_b = true;\r\n                    }\r\n                });\r\n            } break;\r\n            // 反弹\r\n            case this._rebound_action_a: {\r\n                // ------------------结束回调\r\n                if (this._config_o.rebound_finish_cb_f && (this._curr_dist_n + this._config_o.rebound_trigger_dist_n) >= curr_action_a.dist_n) {\r\n                    this._config_o.rebound_finish_cb_f();\r\n                    this._config_o.rebound_finish_cb_f = null;\r\n                }\r\n                this.rebound_finish_cb_os.forEach(v1_o=> {\r\n                    if (!v1_o.trigger_b && (this._curr_dist_n + v1_o.check_dist_n) >= curr_action_a.dist_n) {\r\n                        v1_o.callback_o.emit([v1_o.callback_o.customEventData]);\r\n                        v1_o.trigger_b = true;\r\n                    }\r\n                });\r\n            } break;\r\n        }\r\n        // cc.log(this._dist_n);\r\n    }\r\n    /* ***************功能函数*************** */\r\n    /**获取在世界坐标系下的节点包围盒(不包含自身激活的子节点范围) */\r\n    private _get_bounding_box_to_world(node_o_: any): cc.Rect {\r\n        let w_n: number = node_o_._contentSize.width;\r\n        let h_n: number = node_o_._contentSize.height;\r\n        let rect_o = cc.rect(\r\n            -node_o_._anchorPoint.x * w_n, \r\n            -node_o_._anchorPoint.y * h_n, \r\n            w_n, \r\n            h_n\r\n        );\r\n        node_o_._calculWorldMatrix();\r\n        rect_o.transformMat4(rect_o, node_o_._worldMatrix);\r\n        return rect_o;\r\n    }\r\n    /**检测碰撞 */\r\n    private _check_collision(node_o_: cc.Node): boolean {\r\n        let rect1_o = this._get_bounding_box_to_world(this.node);\r\n        let rect2_o = this._get_bounding_box_to_world(node_o_);\r\n        // ------------------保险范围\r\n        rect1_o.width += rect1_o.width * 0.5;\r\n        rect1_o.height += rect1_o.height * 0.5;\r\n        rect1_o.x -= rect1_o.width * 0.25;\r\n        rect1_o.y -= rect1_o.height * 0.25;\r\n        return rect1_o.intersects(rect2_o);\r\n    }\r\n    /**重置 */\r\n    private _reset(): void {\r\n        // ------------------重置数据\r\n        this._last_pos_n = undefined;\r\n        this._curr_dist_n = 0;\r\n        this._move_dist_n = 0;\r\n        this._curr_time_s_n = 0;\r\n        this._curr_action_n = 0;\r\n        this._action_as.forEach(v1_a=> {\r\n            v1_a.dist_n = 0;\r\n        });\r\n        this.scorll_finish_cb_os.forEach(v1_o=> {\r\n            v1_o.trigger_b = false;\r\n        });\r\n        this.rebound_finish_cb_os.forEach(v1_o=> {\r\n            v1_o.trigger_b = false;\r\n        });\r\n    }\r\n    /**更新运动距离 */\r\n    private _update_move_dist(dist_n_: number): void {\r\n        if (!this._config_o.scroll_grid_cb_f) {\r\n            return;\r\n        }\r\n        this._move_dist_n += Math.abs(dist_n_);\r\n        /**当前所在格子 */\r\n        let curr_pos_n = Math.floor(this._move_dist_n / this._lap_len_n) * this.node.children.length;\r\n        /**整除单圈长度后的剩余距离 */\r\n        let dist_n = this._move_dist_n % this._lap_len_n;\r\n        for (let k1_n = 0; k1_n < this.node.children.length; ++k1_n) {\r\n            if ((dist_n -= this.node.children[k1_n].height) <= 0) {\r\n                curr_pos_n += k1_n;\r\n                break;\r\n            }\r\n        }\r\n        // ------------------执行回调\r\n        if (this._last_pos_n !== undefined && curr_pos_n !== this._last_pos_n) {\r\n            if (this._config_o.scroll_grid_cb_supp_b) {\r\n                let for_n = Math.abs(this._last_pos_n - curr_pos_n);\r\n                for (; for_n--;){\r\n                    this._config_o.scroll_grid_cb_f();\r\n                }\r\n            } else {\r\n                this._config_o.scroll_grid_cb_f();\r\n            }\r\n            if (this.scroll_grid_cb_supp_b) {\r\n                let for_n = Math.abs(this._last_pos_n - curr_pos_n);\r\n                for (; for_n--;){\r\n                    this.scroll_grid_cb_os.forEach(v1_o=> {\r\n                        v1_o.emit([ v1_o.customEventData ]);\r\n                    });\r\n                }\r\n            } else {\r\n                this.scroll_grid_cb_os.forEach(v1_o=> {\r\n                    v1_o.emit([ v1_o.customEventData ]);\r\n                });\r\n            }\r\n        }\r\n        this._last_pos_n = curr_pos_n;\r\n    }\r\n    /**计算运动距离 */\r\n    private _comp_move_dist(index_n_: number): number {\r\n        /**中心点y */\r\n        let center_y_n = -this.node.height * this.node.anchorY + this.node.height * 0.5;\r\n        /**距离 */\r\n        let dist_y_n = 0;\r\n        if (this.move_dire_e === _rolling_lottery.move_dire.上) {\r\n            if (this.node.children[index_n_].y > center_y_n) {\r\n                dist_y_n = this._lap_len_n - (this.node.children[index_n_].y - center_y_n);\r\n            } else if (this.node.children[index_n_].y < center_y_n) {\r\n                dist_y_n = center_y_n - this.node.children[index_n_].y;\r\n            }\r\n        } else {\r\n            if (this.node.children[index_n_].y > center_y_n) {\r\n                dist_y_n = this.node.children[index_n_].y - center_y_n;\r\n            } else if (this.node.children[index_n_].y < center_y_n) {\r\n                dist_y_n = this._lap_len_n - (center_y_n - this.node.children[index_n_].y);\r\n            }\r\n        }\r\n        return dist_y_n;\r\n    }\r\n    /**重置\r\n     * - 重置布局，在更新子节点后调用\r\n     */\r\n    public reset(): void {\r\n        // ------------------重置布局\r\n        let old_h_n = this.node.height;\r\n        let layout_o = this.node.getComponent(cc.Layout);\r\n        layout_o.enabled = true;\r\n        layout_o.updateLayout();\r\n        layout_o.enabled = false;\r\n        this.node.height = old_h_n;\r\n        this._lap_len_n = 0;\r\n        this.node.children.forEach(v1_o=> {\r\n            this._lap_len_n += v1_o.height;\r\n        });\r\n        this._reset();\r\n    }\r\n    /**随机子节点顺序（打乱） */\r\n    public random_order(): void {\r\n        if (this.scroll_b) {\r\n            cc.warn(\"忙碌\");\r\n            return;\r\n        }\r\n        let children_os = [];\r\n        children_os.push(...this.node.children);\r\n        this.node.removeAllChildren();\r\n        while (children_os.length) {\r\n            this.node.addChild(children_os.splice(Math.floor(Math.random() * children_os.length), 1)[0]);\r\n        }\r\n        this.reset();\r\n    }\r\n    /**\r\n     * 滚动\r\n     * @param index_n_ 目标位置\r\n     */\r\n    public scroll(index_n_: number, config_o_?: rolling_lottery.config): void {\r\n        if (index_n_ >= this.node.children.length) {\r\n            cc.error(\"目标位置错误\");\r\n            return;\r\n        }\r\n        if (this.scroll_b) {\r\n            cc.error(\"忙碌\");\r\n            return;\r\n        }\r\n        this._config_o = new rolling_lottery.config(config_o_);\r\n        this._reset();\r\n        /**运动距离 */\r\n        let move_dist_n = this._comp_move_dist(index_n_);\r\n        // 惯性距离\r\n        this._rebound_action_a.dist_n = this.inertia_n;\r\n        // 滚动距离\r\n        this._scroll_action_a.dist_n = this._lap_len_n * (this.turn_lap_n + Math.floor(Math.random() * this.turn_lap_random_n)) + move_dist_n + this._rebound_action_a.dist_n;\r\n        this.scroll_b = true;\r\n    }\r\n    /**\r\n     * 立即跳转到指定item\r\n     * @param index_n_ 默认随机子节点下标\r\n     */\r\n    public jump(index_n_ = Math.floor(Math.random() * (this.node.children.length + 1))): void {\r\n        /**运动距离 */\r\n        let move_dist_n = this._comp_move_dist(index_n_);\r\n        this._curr_speed_n = this._scroll_action_a.dist_n = move_dist_n;\r\n        this._scrolling();\r\n    }\r\n    /* ***************其他事件*************** */\r\n    private _scrolling(): void {\r\n        /**实际顶部y */\r\n        let top_y_n = this.node.height - this.node.height * this.node.anchorY;\r\n        /**实际底部y */\r\n        let bottom_y_n = top_y_n - this._lap_len_n;\r\n        /**视图顶部y */\r\n        let top_view_y_n = top_y_n;\r\n        /**视图底部y */\r\n        let bottom_view_y_n = this.node.y - this.node.height;\r\n        // ------------------向上滚动\r\n        if (this._curr_speed_n > 0) {\r\n            let temp1_n: number;\r\n            this.node.children.forEach(v1_o=> {\r\n                v1_o.y += this._curr_speed_n;\r\n                if (v1_o.y > top_view_y_n && !this._check_collision(v1_o)) {\r\n                    temp1_n = (v1_o.y - top_y_n) % this._lap_len_n;\r\n                    v1_o.y = bottom_y_n + temp1_n;\r\n                }\r\n            });\r\n        }\r\n        // ------------------向下滚动\r\n        else if (this._curr_speed_n < 0) {\r\n            let temp1_n: number;\r\n            this.node.children.forEach(v1_o=> {\r\n                v1_o.y += this._curr_speed_n;\r\n                if (v1_o.y < bottom_view_y_n && !this._check_collision(v1_o)) {\r\n                    temp1_n = (bottom_y_n - v1_o.y) % this._lap_len_n;\r\n                    v1_o.y = top_y_n - temp1_n;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nmodule rolling_lottery {\r\n    /*---------enum_private */\r\n    /*---------enum_public */\r\n    /**移动方向 */\r\n    export const move_dire = _rolling_lottery.move_dire;\r\n    /*---------interface_private */\r\n    /*---------interface_public */\r\n    /*---------var | const */\r\n    /*---------class_private */\r\n    /*---------class_public */\r\n    /**配置 */\r\n    export class config {\r\n        constructor(init_a_?: config) {\r\n            if (init_a_) {\r\n                Object.assign(this, init_a_);\r\n            }\r\n        }\r\n        /**滚动结束回调 */\r\n        scroll_finish_cb_f?: ()=> void;\r\n        /**滚动回调提前检测距离 */\r\n        scorll_trigger_dist_n ?= 0;\r\n        /**反弹结束回调 */\r\n        rebound_finish_cb_f?: ()=> void;\r\n        /**反弹回调提前检测距离 */\r\n        rebound_trigger_dist_n ?= 0;\r\n        /**滚动单格回调 */\r\n        scroll_grid_cb_f?: ()=> void;\r\n        /**滚动单格补全（例：一格距离5，滚动10调用2次回调而非1次） */\r\n        scroll_grid_cb_supp_b ?= true;\r\n    }\r\n}\r\n\r\nexport default rolling_lottery;"]}